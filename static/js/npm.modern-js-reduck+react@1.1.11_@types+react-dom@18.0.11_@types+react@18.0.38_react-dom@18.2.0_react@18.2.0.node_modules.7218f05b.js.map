{"version":3,"file":"static/js/npm.modern-js-reduck+react@1.1.11_@types+react-dom@18.0.11_@types+react@18.0.38_react-dom@18.2.0_react@18.2.0.node_modules.7218f05b.js","mappings":"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","sources":["webpack://@sinsa/web/../../node_modules/.pnpm/@modern-js-reduck+react@1.1.11_@types+react-dom@18.0.11_@types+react@18.0.38_react-dom@18.2.0_react@18.2.0/node_modules/@modern-js-reduck/react/dist/esm/utils/useIsomorphicLayoutEffect.js","webpack://@sinsa/web/../../node_modules/.pnpm/@modern-js-reduck+react@1.1.11_@types+react-dom@18.0.11_@types+react@18.0.38_react-dom@18.2.0_react@18.2.0/node_modules/@modern-js-reduck/react/dist/esm/batchManager.js","webpack://@sinsa/web/../../node_modules/.pnpm/@modern-js-reduck+react@1.1.11_@types+react-dom@18.0.11_@types+react@18.0.38_react-dom@18.2.0_react@18.2.0/node_modules/@modern-js-reduck/react/dist/esm/createApp.js","webpack://@sinsa/web/../../node_modules/.pnpm/@modern-js-reduck+react@1.1.11_@types+react-dom@18.0.11_@types+react@18.0.38_react-dom@18.2.0_react@18.2.0/node_modules/@modern-js-reduck/react/dist/esm/hook.js"],"sourcesContent":["import { useEffect, useLayoutEffect } from \"react\";\nexport const canUseDOM = Boolean(typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\");\nexport const useIsomorphicLayoutEffect = canUseDOM ? useLayoutEffect : useEffect;\n","import { utils } from \"@modern-js-reduck/store\";\nimport { unstable_batchedUpdates } from \"react-dom\";\nconst combineSubscribe = (store, subscribes) => {\n  let changed = false;\n  const handlers = /* @__PURE__ */ new Set();\n  return (handler) => {\n    handlers.add(handler);\n    const disposer = [];\n    subscribes.forEach((subscribe) => {\n      disposer.push(subscribe(() => {\n        changed = true;\n      }));\n    });\n    const unsubscribeStore = store.subscribe(() => {\n      if (changed) {\n        handlers.forEach((h) => h());\n      }\n      changed = false;\n    });\n    return () => {\n      unsubscribeStore();\n      disposer.forEach((dispose) => dispose());\n    };\n  };\n};\nconst createBatchManager = (store) => {\n  const usingModelsMap = /* @__PURE__ */ new Map();\n  let unsubscribe;\n  const updateList = [];\n  const setupSubscribe = () => {\n    if (typeof unsubscribe === \"function\") {\n      unsubscribe();\n    }\n    const modelSet = /* @__PURE__ */ new Set();\n    for (const [model, count] of usingModelsMap) {\n      if (count !== 0) {\n        modelSet.add(model);\n      }\n    }\n    const subscribe = combineSubscribe(store, [\n      ...modelSet\n    ].map((m) => store.use(m)[2]));\n    unsubscribe = subscribe(() => {\n      unstable_batchedUpdates(() => {\n        let update = updateList.shift();\n        while (update) {\n          update();\n          update = updateList.shift();\n        }\n      });\n    });\n  };\n  const changeModels = (action, ...models) => {\n    models.forEach((model) => {\n      if (!utils.isModel(model)) {\n        return;\n      }\n      let usingCount = usingModelsMap.get(model);\n      if (action === \"add\") {\n        usingModelsMap.set(model, (usingCount || 0) + 1);\n      } else if (action === \"remove\") {\n        if (usingCount) {\n          usingCount -= 1;\n          if (usingCount === 0) {\n            usingModelsMap.delete(model);\n          } else {\n            usingModelsMap.set(model, usingCount);\n          }\n        }\n      }\n    });\n    setupSubscribe();\n  };\n  const addModels = (...args) => changeModels(\"add\", ...args);\n  const removeModels = (...args) => changeModels(\"remove\", ...args);\n  const pushUpdate = (update) => {\n    updateList.push(update);\n  };\n  return {\n    addModels,\n    removeModels,\n    pushUpdate\n  };\n};\nexport { createBatchManager };\n","import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createStore, utils } from \"@modern-js-reduck/store\";\nimport React, { createContext, useContext, useState, useMemo, useRef, useCallback } from \"react\";\nimport invariant from \"invariant\";\nimport effectsPlugin from \"@modern-js-reduck/plugin-effects\";\nimport immerPlugin from \"@modern-js-reduck/plugin-immutable\";\nimport autoActionsPlugin from \"@modern-js-reduck/plugin-auto-actions\";\nimport devToolsPlugin from \"@modern-js-reduck/plugin-devtools\";\nimport { useIsomorphicLayoutEffect } from \"./utils/useIsomorphicLayoutEffect\";\nimport { createBatchManager } from \"./batchManager\";\nconst { useSyncExternalStore } = React;\nconst isReact18 = useSyncExternalStore !== void 0;\nconst shallowEqual = (a, b) => {\n  if (Object.prototype.toString.call(a) !== \"[object Object]\" || Object.prototype.toString.call(b) !== \"[object Object]\") {\n    return a === b;\n  }\n  if (Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  return Object.keys(a).every((key) => b.hasOwnProperty(key) && a[key] === b[key]);\n};\nexport const getDefaultPlugins = (config) => {\n  const defaultConfig = {\n    devTools: true,\n    autoActions: true\n  };\n  const finalConfig = _object_spread({}, defaultConfig, config);\n  const plugins = [\n    immerPlugin,\n    effectsPlugin\n  ];\n  if (finalConfig.autoActions) {\n    plugins.push(autoActionsPlugin);\n  }\n  const devToolsOptions = finalConfig.devTools;\n  if (devToolsOptions) {\n    plugins.push(devToolsPlugin(typeof devToolsOptions === \"object\" ? devToolsOptions : void 0));\n  }\n  return plugins;\n};\nexport const createApp = (config = {}) => {\n  let configFromProvider;\n  const Context = /* @__PURE__ */ createContext(null);\n  const defaultPlugins = getDefaultPlugins(config);\n  const Provider = (props) => {\n    const { children, store: storeFromProps, config: _config } = props;\n    configFromProvider = _object_spread({}, config, _config);\n    configFromProvider.plugins = configFromProvider.plugins || defaultPlugins;\n    const contextValue = useMemo(() => {\n      const store = storeFromProps || createStore(configFromProvider);\n      const batchManager = createBatchManager(store);\n      return {\n        store,\n        batchManager\n      };\n    }, [\n      storeFromProps,\n      _config\n    ]);\n    return /* @__PURE__ */ _jsx(Context.Provider, {\n      value: contextValue,\n      children\n    });\n  };\n  const createUseModel = (store) => (..._args) => {\n    const args = _args.flat();\n    const initialValue = store.use(...args);\n    const lastValueRef = useRef(initialValue);\n    const getSnapshot = useCallback(() => {\n      const newValue = store.use(...args);\n      if (!shallowEqual(lastValueRef.current[0], newValue[0])) {\n        lastValueRef.current = newValue;\n        return newValue;\n      } else {\n        return lastValueRef.current;\n      }\n    }, [\n      store,\n      ...args\n    ]);\n    const selectedState = useSyncExternalStore(\n      initialValue[2],\n      getSnapshot,\n      // The third parameter is required in SSR.\n      // The initial state should be set when createStore in hydration stage,\n      // so we can use the same getSnapshot to get state.\n      getSnapshot\n    );\n    return selectedState;\n  };\n  const legacy_createUseModel = (store, batchManager) => (..._args) => {\n    const args = _args.flat();\n    const deps = args.filter((item) => utils.isModel(item));\n    const initialValue = useMemo(() => store.use(...args), [\n      store,\n      ...deps\n    ]);\n    const [modelValue, setModelValue] = useState(initialValue);\n    const lastValueRef = useRef(initialValue);\n    const checkForUpdates = (sync = false) => {\n      const newValue = store.use(...args);\n      if (!shallowEqual(lastValueRef.current[0], newValue[0])) {\n        if (sync) {\n          setModelValue(newValue);\n          lastValueRef.current = newValue;\n        } else {\n          batchManager.pushUpdate(() => {\n            setModelValue(newValue);\n            lastValueRef.current = newValue;\n          });\n        }\n      }\n    };\n    useIsomorphicLayoutEffect(() => {\n      const subscribe = initialValue[2];\n      const unsubscribe = subscribe(checkForUpdates);\n      batchManager.addModels(...deps);\n      checkForUpdates(true);\n      return () => {\n        unsubscribe();\n        batchManager.removeModels(...deps);\n      };\n    }, [\n      ...deps,\n      initialValue,\n      batchManager\n    ]);\n    return modelValue;\n  };\n  const useModel = (...args) => {\n    const context = useContext(Context);\n    invariant(Boolean(context), `You should wrap your Component with Reduck Provider.`);\n    const { store, batchManager } = context;\n    const _useModel = useMemo(() => {\n      return isReact18 ? createUseModel(store) : legacy_createUseModel(store, batchManager);\n    }, [\n      store\n    ]);\n    return _useModel(...args);\n  };\n  const useStaticModel = (...args) => {\n    const context = useContext(Context);\n    invariant(Boolean(context), \"You should wrap your Component with Reduck Provider.\");\n    const { store } = context;\n    const [state, actions, subscribe] = useMemo(() => store.use(...args), []);\n    const value = useRef([\n      // deep clone state in case mutate origin state accidentally.\n      JSON.parse(JSON.stringify(state)),\n      actions,\n      subscribe\n    ]);\n    useIsomorphicLayoutEffect(() => {\n      if (Object.prototype.toString.call(state) === \"[object Object]\") {\n        return subscribe(() => {\n          const [newState, newActions] = store.use(...args);\n          Object.assign(value.current[0], newState);\n          Object.assign(value.current[1], newActions);\n        });\n      }\n      return () => {\n      };\n    }, []);\n    return value.current;\n  };\n  const useLocalModel = (...args) => {\n    const [store, batchManager] = useMemo(() => {\n      const finalConfig = configFromProvider;\n      const localStoreConfig = {\n        enhancers: (finalConfig === null || finalConfig === void 0 ? void 0 : finalConfig.enhancers) || [],\n        middlewares: (finalConfig === null || finalConfig === void 0 ? void 0 : finalConfig.middlewares) || [],\n        plugins: finalConfig === null || finalConfig === void 0 ? void 0 : finalConfig.plugins\n      };\n      const reduckStore = createStore(localStoreConfig);\n      return [\n        reduckStore,\n        createBatchManager(reduckStore)\n      ];\n    }, []);\n    return useMemo(() => {\n      return isReact18 ? createUseModel(store) : legacy_createUseModel(store, batchManager);\n    }, [])(...args);\n  };\n  const useStore = () => {\n    const { store } = useContext(Context);\n    return store;\n  };\n  return {\n    Provider,\n    useStore,\n    useModel,\n    useStaticModel,\n    useLocalModel\n  };\n};\n","import { createApp } from \"./createApp\";\nconst { Provider, useModel, useStaticModel, useLocalModel, useStore } = createApp({});\nexport { Provider, useModel, useStaticModel, useLocalModel, useStore };\n"],"names":["useIsomorphicLayoutEffect","Boolean","window","document","createElement","useLayoutEffect","useEffect","createBatchManager","store","usingModelsMap","Map","unsubscribe","updateList","setupSubscribe","modelSet","Set","model","count","add","subscribe","subscribes","changed","handlers","handler","disposer","forEach","push","unsubscribeStore","h","dispose","combineSubscribe","map","m","use","unstable_batchedUpdates","update","shift","changeModels","action","models","usingCount","get","set","delete","addModels","args","removeModels","pushUpdate","useSyncExternalStore","isReact18","shallowEqual","a","b","Object","prototype","toString","call","keys","length","every","key","hasOwnProperty","Provider","useModel","useStaticModel","useLocalModel","useStore","config","configFromProvider","Context","createContext","defaultPlugins","finalConfig","_object_spread","_","devTools","autoActions","plugins","devToolsOptions","getDefaultPlugins","createUseModel","_args","flat","initialValue","lastValueRef","useRef","getSnapshot","useCallback","newValue","current","legacy_createUseModel","batchManager","deps","filter","item","useMemo","modelValue","setModelValue","useState","checkForUpdates","sync","props","children","storeFromProps","_config","contextValue","createStore","value","useContext","context","_useModel","state","actions","JSON","parse","stringify","newState","newActions","assign","localStoreConfig","enhancers","middlewares","reduckStore","createApp"],"sourceRoot":""}