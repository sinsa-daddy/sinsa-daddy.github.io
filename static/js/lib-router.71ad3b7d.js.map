{"version":3,"file":"static/js/lib-router.71ad3b7d.js","sources":["webpack://@sinsa/web/../../node_modules/.pnpm/@remix-run+router@1.15.0/node_modules/@remix-run/router/dist/router.js","webpack://@sinsa/web/../../node_modules/.pnpm/react-router-dom@6.22.0_react-dom@18.2.0_react@18.2.0/node_modules/react-router-dom/dist/index.js","webpack://@sinsa/web/../../node_modules/.pnpm/react-router@6.22.0_react@18.2.0/node_modules/react-router/dist/index.js"],"sourcesContent":["/**\n * @remix-run/router v1.15.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n  let index = getIndex();\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n  function createURL(to) {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\n    return new URL(href, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n//#endregion\n\nvar ResultType;\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\nconst immutableRouteKeys = new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath, manifest) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  if (manifest === void 0) {\n    manifest = {};\n  }\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!manifest[id], \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, mapRouteProperties(route), {\n        id\n      });\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties(route), {\n        id,\n        children: undefined\n      });\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest);\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i],\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    safelyDecodeURI(pathname));\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n      // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    var _route$path;\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\")));\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = s => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname) {\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    if (!match) return null;\n    Object.assign(matchedParams, match.params);\n    let route = meta.route;\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify = p => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    // only apply the splat if it's the last segment\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      // Apply the splat\n      return stringify(params[star]);\n    }\n    const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, \"Missing \\\":\" + key + \"\\\" param\");\n      return stringify(param);\n    }\n    // Remove any optional markers from optional static segments\n    return segment.replace(/\\?$/g, \"\");\n  })\n  // Remove empty segments\n  .filter(segment => !!segment);\n  return prefix + segments.join(\"/\");\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce((memo, _ref, index) => {\n    let {\n      paramName,\n      isOptional\n    } = _ref;\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    const value = captureGroups[index];\n    if (isOptional && !value) {\n      memo[paramName] = undefined;\n    } else {\n      memo[paramName] = safelyDecodeURIComponent(value || \"\", paramName);\n    }\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n  if (end === void 0) {\n    end = true;\n  }\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/\\/:([\\w-]+)(\\?)?/g, (_, paramName, isOptional) => {\n    params.push({\n      paramName,\n      isOptional: isOptional != null\n    });\n    return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    params.push({\n      paramName: \"*\"\n    });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, params];\n}\nfunction safelyDecodeURI(value) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\nfunction safelyDecodeURIComponent(value, paramName) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(false, \"The value for the URL param \\\"\" + paramName + \"\\\" will not be decoded because\" + (\" the string \\\"\" + value + \"\\\" is a malformed URL segment. This is probably\") + (\" due to a bad percent encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nfunction getResolveToMatches(matches, v7_relativeSplatPath) {\n  let pathMatches = getPathContributingMatches(matches);\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) => idx === matches.length - 1 ? match.pathname : match.pathnameBase);\n  }\n  return pathMatches.map(match => match.pathnameBase);\n}\n/**\n * @private\n */\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\n/**\n * @private\n */\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data, responseInit) {\n    this.pendingKeysSet = new Set();\n    this.subscribers = new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\");\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n    this.init = responseInit;\n  }\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, undefined, data), error => this.onSettle(promise, key, error));\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n    this.pendingKeysSet.delete(key);\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\"Deferred data for key \\\"\" + key + \"\\\" resolved/rejected with `undefined`, \" + \"you must resolve/reject with a value or `null`.\");\n      Object.defineProperty(promise, \"_error\", {\n        get: () => undefinedError\n      });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    this.emit(false, key);\n    return data;\n  }\n  emit(aborted, settledKey) {\n    this.subscribers.forEach(subscriber => subscriber(aborted, settledKey));\n  }\n  subscribe(fn) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n  async resolveData(signal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref3) => {\n      let [key, value] = _ref3;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\nconst defer = function defer(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nclass ErrorResponseImpl {\n  constructor(status, statusText, data, internal) {\n    if (internal === void 0) {\n      internal = false;\n    }\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\nconst validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\nconst validMutationMethods = new Set(validMutationMethodsArr);\nconst validRequestMethodsArr = [\"get\", ...validMutationMethodsArr];\nconst validRequestMethods = new Set(validRequestMethodsArr);\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined\n};\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nconst defaultMapRouteProperties = route => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a router and listen to history POP navigations\n */\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : undefined;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let mapRouteProperties;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Routes keyed by ID\n  let manifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, undefined, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  // Config driven behavior flags\n  let future = _extends({\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false\n  }, init.future);\n  // Cleanup function for history\n  let unlistenHistory = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors = null;\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n  let initialized;\n  let hasLazyRoutes = initialMatches.some(m => m.route.lazy);\n  let hasLoaders = initialMatches.some(m => m.route.loader);\n  if (hasLazyRoutes) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!hasLoaders) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    initialized = initialMatches.every(m => m.route.loader && m.route.loader.hydrate !== true && (loaderData && loaderData[m.route.id] !== undefined || errors && errors[m.route.id] !== undefined));\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map()\n  };\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction = Action.Pop;\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n  // AbortController for the active navigation\n  let pendingNavigationController;\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions = new Map();\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener = null;\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes = [];\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads = [];\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map();\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map();\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set();\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map();\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map();\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set();\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map();\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map();\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref;\n      // Ignore this event if it was just us resetting the URL from a\n      // blocked POP navigation\n      if (ignoreNextHistoryUpdate) {\n        ignoreNextHistoryUpdate = false;\n        return;\n      }\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location \" + \"that was not created by @remix-run/router. This will fail silently in \" + \"production. This can happen if you are navigating outside the router \" + \"via `window.history.pushState`/`window.location.hash` instead of using \" + \"router navigation APIs.  This can also happen if you are using \" + \"createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n      if (blockerKey && delta != null) {\n        // Restore the URL to match the current UI, but don't update router state\n        ignoreNextHistoryUpdate = true;\n        init.history.go(delta * -1);\n        // Put the blocker into a blocked state\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: undefined,\n              reset: undefined,\n              location\n            });\n            // Re-do the same POP navigation we just blocked\n            init.history.go(delta);\n          },\n          reset() {\n            let blockers = new Map(state.blockers);\n            blockers.set(blockerKey, IDLE_BLOCKER);\n            updateState({\n              blockers\n            });\n          }\n        });\n        return;\n      }\n      return startNavigation(historyAction, location);\n    });\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location, {\n        initialHydration: true\n      });\n    }\n    return router;\n  }\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  // Subscribe to state updates for the router\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  // Update our state and notify the calling context of the change\n  function updateState(newState, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state = _extends({}, state, newState);\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers = [];\n    let deletedFetchersKeys = [];\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach(subscriber => subscriber(state, {\n      deletedFetchers: deletedFetchersKeys,\n      unstable_viewTransitionOpts: opts.viewTransitionOpts,\n      unstable_flushSync: opts.flushSync === true\n    }));\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach(key => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach(key => deleteFetcher(key));\n    }\n  }\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(location, newState, _temp) {\n    var _location$state, _location$state2;\n    let {\n      flushSync\n    } = _temp === void 0 ? {} : _temp;\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === Action.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState(_extends({}, newState, {\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers\n    }), {\n      viewTransitionOpts,\n      flushSync: flushSync === true\n    });\n    // Reset stateful navigation vars\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, future.v7_relativeSplatPath, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n    let historyAction = Action.Push;\n    if (userReplace === true) {\n      historyAction = Action.Replace;\n    } else if (userReplace === false) ; else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = Action.Replace;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({\n            blockers\n          });\n        }\n      });\n      return;\n    }\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.unstable_viewTransition,\n      flushSync\n    });\n  }\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    });\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    }\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation\n    });\n  }\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(routesToUse);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      }, {\n        flushSync\n      });\n      return;\n    }\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      }, {\n        flushSync\n      });\n      return;\n    }\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionData;\n    let pendingError;\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError\n      };\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(request, location, opts.submission, matches, {\n        replace: opts.replace,\n        flushSync\n      });\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      // Create a GET request for the loaders\n      request = new Request(request.url, {\n        signal: request.signal\n      });\n    }\n    // Call loaders\n    let {\n      shortCircuited,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, opts && opts.initialHydration === true, flushSync, pendingActionData, pendingError);\n    if (shortCircuited) {\n      return;\n    }\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n    completeNavigation(location, _extends({\n      matches\n    }, pendingActionData ? {\n      actionData: pendingActionData\n    } : {}, {\n      loaderData,\n      errors\n    }));\n  }\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(request, location, submission, matches, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    interruptActiveLoads();\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({\n      navigation\n    }, {\n      flushSync: opts.flushSync === true\n    });\n    // Call our action and get the result\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, matches, manifest, mapRouteProperties, basename, future.v7_relativeSplatPath);\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace = result.location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(state, result, {\n        submission,\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: {\n          [boundaryMatch.route.id]: result.error\n        }\n      };\n    }\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    return {\n      pendingActionData: {\n        [actionMatch.route.id]: result.data\n      }\n    };\n  }\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(request, location, matches, overrideNavigation, submission, fetcherSubmission, replace, initialHydration, flushSync, pendingActionData, pendingError) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, future.v7_partialHydration && initialHydration === true, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionData, pendingError);\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId));\n    pendingNavigationLoadId = ++incrementingLoadId;\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, _extends({\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null\n      }, pendingActionData ? {\n        actionData: pendingActionData\n      } : {}, updatedFetchers ? {\n        fetchers: new Map(state.fetchers)\n      } : {}), {\n        flushSync\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since iot's not a \"navigation\"\n    if (!isUninterruptedRevalidation && (!future.v7_partialHydration || !initialHydration)) {\n      revalidatingFetchers.forEach(rf => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher = getLoadingFetcher(undefined, fetcher ? fetcher.data : undefined);\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState(_extends({\n        navigation: loadingNavigation\n      }, actionData ? Object.keys(actionData).length === 0 ? {\n        actionData: null\n      } : {\n        actionData\n      } : {}, revalidatingFetchers.length > 0 ? {\n        fetchers: new Map(state.fetchers)\n      } : {}), {\n        flushSync\n      });\n    }\n    revalidatingFetchers.forEach(rf => {\n      if (fetchControllers.has(rf.key)) {\n        abortFetcher(rf.key);\n      }\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, request);\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    }\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key));\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey = revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      await startRedirectNavigation(state, redirect.result, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return _extends({\n      loaderData,\n      errors\n    }, shouldUpdateFetchers ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n    if (fetchControllers.has(key)) abortFetcher(key);\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, future.v7_relativeSplatPath, routeId, opts == null ? void 0 : opts.relative);\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }), {\n        flushSync\n      });\n      return;\n    }\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);\n    if (error) {\n      setFetcherError(key, routeId, error, {\n        flushSync\n      });\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, flushSync, submission);\n      return;\n    }\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, flushSync, submission);\n  }\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, flushSync, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId\n      });\n      setFetcherError(key, routeId, error, {\n        flushSync\n      });\n      return;\n    }\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync\n    });\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let actionResult = await callLoaderOrAction(\"action\", fetchRequest, match, requestMatches, manifest, mapRouteProperties, basename, future.v7_relativeSplatPath);\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(state, actionResult, {\n            fetcherSubmission: submission\n          });\n        }\n      }\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, false, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, {\n      [match.route.id]: actionResult.data\n    }, undefined // No need to send through errors since we short circuit above\n    );\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(undefined, existingFetcher ? existingFetcher.data : undefined);\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      if (fetchControllers.has(staleKey)) {\n        abortFetcher(staleKey);\n      }\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey = revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      return startRedirectNavigation(state, redirect.result);\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, state.matches, matchesToLoad, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    abortStaleFetchLoads(loadId);\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(key, routeId, path, match, matches, flushSync, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : undefined), {\n      flushSync\n    });\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let result = await callLoaderOrAction(\"loader\", fetchRequest, match, matches, manifest, mapRouteProperties, basename, future.v7_relativeSplatPath);\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    }\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(state, result);\n        return;\n      }\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(state, redirect, _temp2) {\n    let {\n      submission,\n      fetcherSubmission,\n      replace\n    } = _temp2 === void 0 ? {} : _temp2;\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n    let redirectLocation = createLocation(state.location, redirect.location, {\n      _isRedirect: true\n    });\n    invariant(redirectLocation, \"Expected a location on the redirect navigation\");\n    if (isBrowser) {\n      let isDocumentReload = false;\n      if (redirect.reloadDocument) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(redirect.location)) {\n        const url = init.history.createURL(redirect.location);\n        isDocumentReload =\n        // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin ||\n        // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(redirect.location);\n        } else {\n          routerWindow.location.assign(redirect.location);\n        }\n        return;\n      }\n    }\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true ? Action.Replace : Action.Push;\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let {\n      formMethod,\n      formAction,\n      formEncType\n    } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: _extends({}, activeSubmission, {\n          formAction: redirect.location\n        }),\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(redirectLocation, submission);\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    }\n  }\n  async function callLoadersAndMaybeResolveData(currentMatches, matches, matchesToLoad, fetchersToLoad, request) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([...matchesToLoad.map(match => callLoaderOrAction(\"loader\", request, match, matches, manifest, mapRouteProperties, basename, future.v7_relativeSplatPath)), ...fetchersToLoad.map(f => {\n      if (f.matches && f.match && f.controller) {\n        return callLoaderOrAction(\"loader\", createClientSideRequest(init.history, f.path, f.controller.signal), f.match, f.matches, manifest, mapRouteProperties, basename, future.v7_relativeSplatPath);\n      } else {\n        let error = {\n          type: ResultType.error,\n          error: getInternalRouterError(404, {\n            pathname: f.path\n          })\n        };\n        return error;\n      }\n    })]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n    await Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, loaderResults.map(() => request.signal), false, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map(f => f.match), fetcherResults, fetchersToLoad.map(f => f.controller ? f.controller.signal : null), true)]);\n    return {\n      results,\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n  function updateFetcherState(key, fetcher, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function setFetcherError(key, routeId, error, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function getFetcher(key) {\n    if (future.v7_fetcherPersist) {\n      activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n      // If this fetcher was previously marked for deletion, unmark it since we\n      // have a new instance\n      if (deletedFetchers.has(key)) {\n        deletedFetchers.delete(key);\n      }\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    deletedFetchers.delete(key);\n    state.fetchers.delete(key);\n  }\n  function deleteFetcherAndUpdateState(key) {\n    if (future.v7_fetcherPersist) {\n      let count = (activeFetchers.get(key) || 0) - 1;\n      if (count <= 0) {\n        activeFetchers.delete(key);\n        deletedFetchers.add(key);\n      } else {\n        activeFetchers.set(key, count);\n      }\n    } else {\n      deleteFetcher(key);\n    }\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, \"Expected fetch controller: \" + key);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({\n      blockers\n    });\n  }\n  function shouldBlockNavigation(_ref2) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref2;\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(location, matches.map(m => convertRouteMatchToUiMatch(m, state.loaderData)));\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, undefined, manifest);\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\nconst UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties;\n  if (opts != null && opts.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts != null && opts.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future = _extends({\n    v7_relativeSplatPath: false,\n    v7_throwAbortReason: false\n  }, opts ? opts.future : null);\n  let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, undefined, manifest);\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  async function query(request, _temp3) {\n    let {\n      requestContext\n    } = _temp3 === void 0 ? {} : _temp3;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let result = await queryImpl(request, location, matches, requestContext);\n    if (isResponse(result)) {\n      return result;\n    }\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return _extends({\n      location,\n      basename\n    }, result);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n  async function queryRoute(request, _temp4) {\n    let {\n      routeId,\n      requestContext\n    } = _temp4 === void 0 ? {} : _temp4;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let result = await queryImpl(request, location, matches, requestContext, match);\n    if (isResponse(result)) {\n      return result;\n    }\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n    if (result.loaderData) {\n      var _result$activeDeferre;\n      let data = Object.values(result.loaderData)[0];\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n    return undefined;\n  }\n  async function queryImpl(request, location, matches, requestContext, routeMatch) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, routeMatch != null);\n        return result;\n      }\n      let result = await loadRouteData(request, matches, requestContext, routeMatch);\n      return isResponse(result) ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, isRouteRequest) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, matches, manifest, mapRouteProperties, basename, future.v7_relativeSplatPath, {\n        isStaticRequest: true,\n        isRouteRequest,\n        requestContext\n      });\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\n      }\n    }\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location\n        }\n      });\n    }\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    }\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(request, matches, requestContext, undefined, {\n        [boundaryMatch.route.id]: result.error\n      });\n      // action status codes take precedence over loader status codes\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    }\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n    return _extends({}, context, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      },\n      actionHeaders: _extends({}, result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {})\n    });\n  }\n  async function loadRouteData(request, matches, requestContext, routeMatch, pendingActionError) {\n    let isRouteRequest = routeMatch != null;\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\n      });\n    }\n    let requestMatches = routeMatch ? [routeMatch] : getLoaderMatchesUntilBoundary(matches, Object.keys(pendingActionError || {})[0]);\n    let matchesToLoad = requestMatches.filter(m => m.route.loader || m.route.lazy);\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\n          [m.route.id]: null\n        }), {}),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let results = await Promise.all([...matchesToLoad.map(match => callLoaderOrAction(\"loader\", request, match, matches, manifest, mapRouteProperties, basename, future.v7_relativeSplatPath, {\n      isStaticRequest: true,\n      isRouteRequest,\n      requestContext\n    }))]);\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\n    }\n    // Process and commit output from loaders\n    let activeDeferreds = new Map();\n    let context = processRouteLoaderData(matches, matchesToLoad, results, pendingActionError, activeDeferreds);\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set(matchesToLoad.map(match => match.route.id));\n    matches.forEach(match => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return _extends({}, context, {\n      matches,\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n    });\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n  return newContext;\n}\nfunction throwStaticHandlerAbortedError(request, isRouteRequest, future) {\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\n    throw request.signal.reason;\n  }\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(method + \"() call aborted: \" + request.method + \" \" + request.url);\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== undefined);\n}\nfunction normalizeTo(location, matches, basename, prependBasename, to, v7_relativeSplatPath, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  // Resolve the relative path\n  let path = resolveTo(to ? to : \".\", getResolveToMatches(contextualMatches, v7_relativeSplatPath), stripBasename(location.pathname, basename) || location.pathname, relative === \"path\");\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  // Add an ?index param for matched index routes if we don't already have one\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch && activeRouteMatch.route.index && !hasNakedIndexQuery(path.search)) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, {\n      type: \"invalid-body\"\n    })\n  });\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod ? rawFormMethod.toUpperCase() : rawFormMethod.toLowerCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ?\n      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n      Array.from(opts.body.entries()).reduce((acc, _ref3) => {\n        let [name, value] = _ref3;\n        return \"\" + acc + name + \"=\" + value + \"\\n\";\n      }, \"\") : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(typeof FormData === \"function\", \"FormData is not available in this environment\");\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return {\n      path,\n      submission\n    };\n  }\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = \"?\" + searchParams;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n}\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex(m => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\nfunction getMatchesToLoad(history, state, matches, submission, location, isInitialLoad, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionData, pendingError) {\n  let actionResult = pendingError ? Object.values(pendingError)[0] : pendingActionData ? Object.values(pendingActionData)[0] : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let {\n      route\n    } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (route.loader == null) {\n      return false;\n    }\n    if (isInitialLoad) {\n      if (route.loader.hydrate) {\n        return true;\n      }\n      return state.loaderData[route.id] === undefined && (\n      // Don't re-run if the loader ran and threw an error\n      !state.errors || state.errors[route.id] === undefined);\n    }\n    // Always call the loader on new route instances and pending defer cancellations\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(id => id === match.route.id)) {\n      return true;\n    }\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult,\n      defaultShouldRevalidate:\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired ||\n      // Clicked the same link, resubmitted a GET form\n      currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search ||\n      // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    }));\n  });\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial load (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (isInitialLoad || !matches.some(m => m.route.id === f.routeId) || deletedFetchers.has(key)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null\n      });\n      return;\n    }\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.includes(key)) {\n      // Always revalidate if the fetcher was cancelled\n      shouldRevalidate = true;\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === undefined) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends({\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params\n      }, submission, {\n        actionResult,\n        defaultShouldRevalidate: isRevalidationRequired\n      }));\n    }\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew =\n  // [a] -> [a, b]\n  !currentMatch ||\n  // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id;\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(route, mapRouteProperties, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n  let lazyRoute = await route.lazy();\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== undefined &&\n    // This property isn't static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== \"hasErrorBoundary\";\n    warning(!isPropertyStaticallyDefined, \"Route \\\"\" + routeToUpdate.id + \"\\\" has a static property \\\"\" + lazyRouteProperty + \"\\\" \" + \"defined but its lazy function is also returning a value for this property. \" + (\"The lazy route property \\\"\" + lazyRouteProperty + \"\\\" will be ignored.\"));\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  }\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, _extends({}, mapRouteProperties(routeToUpdate), {\n    lazy: undefined\n  }));\n}\nasync function callLoaderOrAction(type, request, match, matches, manifest, mapRouteProperties, basename, v7_relativeSplatPath, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  let resultType;\n  let result;\n  let onReject;\n  let runHandler = handler => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject;\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    return Promise.race([handler({\n      request,\n      params: match.params,\n      context: opts.requestContext\n    }), abortPromise]);\n  };\n  try {\n    let handler = match.route[type];\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let values = await Promise.all([\n        // If the handler throws, don't let it immediately bubble out,\n        // since we need to let the lazy() execution finish so we know if this\n        // route has a boundary that can handle the error\n        runHandler(handler).catch(e => {\n          handlerError = e;\n        }), loadLazyRouteModule(match.route, mapRouteProperties, manifest)]);\n        if (handlerError) {\n          throw handlerError;\n        }\n        result = values[0];\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n        handler = match.route[type];\n        if (handler) {\n          // Handler still run even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return {\n            type: ResultType.data,\n            data: undefined\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n    invariant(result !== undefined, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + (\"\\\"\" + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  if (isResponse(result)) {\n    let status = result.status;\n    // Process redirects\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n      // Support relative routing in internal redirects\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        location = normalizeTo(new URL(request.url), matches.slice(0, matches.indexOf(match) + 1), basename, true, location, v7_relativeSplatPath);\n      } else if (!opts.isStaticRequest) {\n        // Strip off the protocol+origin for same-origin + same-basename absolute\n        // redirects. If this is a static request, we can let it go back to the\n        // browser as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\") ? new URL(currentUrl.protocol + location) : new URL(location);\n        let isSameBasename = stripBasename(url.pathname, basename) != null;\n        if (url.origin === currentUrl.origin && isSameBasename) {\n          location = url.pathname + url.search + url.hash;\n        }\n      }\n      // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n      if (opts.isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null,\n        reloadDocument: result.headers.get(\"X-Remix-Reload-Document\") !== null\n      };\n    }\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n    if (opts.isRouteRequest) {\n      let queryRouteResponse = {\n        type: resultType === ResultType.error ? ResultType.error : ResultType.data,\n        response: result\n      };\n      throw queryRouteResponse;\n    }\n    let data;\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponseImpl(status, result.statusText, data),\n        headers: result.headers\n      };\n    }\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (resultType === ResultType.error) {\n    return {\n      type: resultType,\n      error: result\n    };\n  }\n  if (isDeferredData(result)) {\n    var _result$init, _result$init2;\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,\n      headers: ((_result$init2 = result.init) == null ? void 0 : _result$init2.headers) && new Headers(result.init.headers)\n    };\n  }\n  return {\n    type: ResultType.data,\n    data: result\n  };\n}\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType\n    } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({\n        \"Content-Type\": formEncType\n      });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n      errors = errors || {};\n      // Prefer higher error values if lower errors bubble to the same boundary\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      }\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      }\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, matchesToLoad, results, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds);\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let {\n      key,\n      match,\n      controller\n    } = revalidatingFetchers[index];\n    invariant(fetcherResults !== undefined && fetcherResults[index] !== undefined, \"Did not find corresponding fetcher result\");\n    let result = fetcherResults[index];\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  return {\n    loaderData,\n    errors\n  };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.length === 1 ? routes[0] : routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: \"__shim-error-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\nfunction getInternalRouterError(status, _temp5) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type\n  } = _temp5 === void 0 ? {} : _temp5;\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide a `loader` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = \"Route \\\"\" + routeId + \"\\\" does not match URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = \"No route matches URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method.toUpperCase() + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide an `action` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (method) {\n      errorMessage = \"Invalid request method \\\"\" + method.toUpperCase() + \"\\\"\";\n    }\n  }\n  return new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), true);\n}\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results) {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return {\n        result,\n        idx: i\n      };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\nfunction isQueryRouteResponse(obj) {\n  return obj && isResponse(obj.response) && (obj.type === ResultType.data || obj.type === ResultType.error);\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toLowerCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toLowerCase());\n}\nasync function resolveDeferredResults(currentMatches, matchesToLoad, results, signals, isFetcher, currentLoaderData) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(signal, \"Expected an AbortSignal for revalidating fetcher deferred result\");\n      await resolveDeferredData(result, signal, isFetcher).then(result => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    text,\n    formData,\n    json\n  } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(TRANSITIONS_STORAGE_KEY);\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(TRANSITIONS_STORAGE_KEY, JSON.stringify(json));\n    } catch (error) {\n      warning(false, \"Failed to save applied view transitions in sessionStorage (\" + error + \").\");\n    }\n  }\n}\n//#endregion\n\nexport { AbortedDeferredError, Action, IDLE_BLOCKER, IDLE_FETCHER, IDLE_NAVIGATION, UNSAFE_DEFERRED_SYMBOL, DeferredData as UNSAFE_DeferredData, ErrorResponseImpl as UNSAFE_ErrorResponseImpl, convertRouteMatchToUiMatch as UNSAFE_convertRouteMatchToUiMatch, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, getResolveToMatches as UNSAFE_getResolveToMatches, invariant as UNSAFE_invariant, warning as UNSAFE_warning, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, createStaticHandler, defer, generatePath, getStaticContextFromError, getToPathname, isDeferredData, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, redirectDocument, resolvePath, resolveTo, stripBasename };\n//# sourceMappingURL=router.js.map\n","/**\n * React Router DOM v6.22.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { UNSAFE_mapRouteProperties, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, Router, UNSAFE_useRoutesImpl, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, useBlocker } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, renderMatches, resolvePath, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, UNSAFE_ErrorResponseImpl, UNSAFE_invariant, joinPaths, IDLE_FETCHER, matchPath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && (\n  // Ignore everything but left clicks\n  !target || target === \"_self\") &&\n  // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n  return searchParams;\n}\n// One-time check for submitter support\nlet _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"),\n      // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nconst supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    }\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let {\n        name,\n        type,\n        value\n      } = target;\n      if (type === \"image\") {\n        let prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData,\n    body\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\", \"unstable_viewTransition\"],\n  _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"unstable_viewTransition\", \"children\"],\n  _excluded3 = [\"fetcherKey\", \"navigate\", \"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"relative\", \"preventScrollReset\", \"unstable_viewTransition\"];\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\nconst REACT_ROUTER_VERSION = \"6\";\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {\n  // no-op\n}\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction parseHydrationData() {\n  var _window;\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new UNSAFE_ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nconst ViewTransitionContext = /*#__PURE__*/React.createContext({\n  isTransitioning: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\nconst FetchersContext = /*#__PURE__*/React.createContext(new Map());\nif (process.env.NODE_ENV !== \"production\") {\n  FetchersContext.displayName = \"Fetchers\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\nfunction startTransitionSafe(cb) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\nfunction flushSyncSafe(cb) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\nclass Deferred {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = value => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = reason => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState();\n  let [vtContext, setVtContext] = React.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React.useState();\n  let [transition, setTransition] = React.useState();\n  let [interruption, setInterruption] = React.useState();\n  let fetcherData = React.useRef(new Map());\n  let {\n    v7_startTransition\n  } = future || {};\n  let optInStartTransition = React.useCallback(cb => {\n    if (v7_startTransition) {\n      startTransitionSafe(cb);\n    } else {\n      cb();\n    }\n  }, [v7_startTransition]);\n  let setState = React.useCallback((newState, _ref2) => {\n    let {\n      deletedFetchers,\n      unstable_flushSync: flushSync,\n      unstable_viewTransitionOpts: viewTransitionOpts\n    } = _ref2;\n    deletedFetchers.forEach(key => fetcherData.current.delete(key));\n    newState.fetchers.forEach((fetcher, key) => {\n      if (fetcher.data !== undefined) {\n        fetcherData.current.set(key, fetcher.data);\n      }\n    });\n    let isViewTransitionUnavailable = router.window == null || typeof router.window.document.startViewTransition !== \"function\";\n    // If this isn't a view transition or it's not available in this browser,\n    // just update and be done with it\n    if (!viewTransitionOpts || isViewTransitionUnavailable) {\n      if (flushSync) {\n        flushSyncSafe(() => setStateImpl(newState));\n      } else {\n        optInStartTransition(() => setStateImpl(newState));\n      }\n      return;\n    }\n    // flushSync + startViewTransition\n    if (flushSync) {\n      // Flush through the context to mark DOM elements as transition=ing\n      flushSyncSafe(() => {\n        // Cancel any pending transitions\n        if (transition) {\n          renderDfd && renderDfd.resolve();\n          transition.skipTransition();\n        }\n        setVtContext({\n          isTransitioning: true,\n          flushSync: true,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      });\n      // Update the DOM\n      let t = router.window.document.startViewTransition(() => {\n        flushSyncSafe(() => setStateImpl(newState));\n      });\n      // Clean up after the animation completes\n      t.finished.finally(() => {\n        flushSyncSafe(() => {\n          setRenderDfd(undefined);\n          setTransition(undefined);\n          setPendingState(undefined);\n          setVtContext({\n            isTransitioning: false\n          });\n        });\n      });\n      flushSyncSafe(() => setTransition(t));\n      return;\n    }\n    // startTransition + startViewTransition\n    if (transition) {\n      // Interrupting an in-progress transition, cancel and let everything flush\n      // out, and then kick off a new transition from the interruption state\n      renderDfd && renderDfd.resolve();\n      transition.skipTransition();\n      setInterruption({\n        state: newState,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    } else {\n      // Completed navigation update with opted-in view transitions, let 'er rip\n      setPendingState(newState);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    }\n  }, [router.window, transition, renderDfd, fetcherData, optInStartTransition]);\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext]);\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({\n          isTransitioning: false\n        });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  React.useEffect(() => {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UNSAFE_DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(UNSAFE_DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(FetchersContext.Provider, {\n    value: fetcherData.current\n  }, /*#__PURE__*/React.createElement(ViewTransitionContext.Provider, {\n    value: vtContext\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: {\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath\n    }\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))))), null);\n}\nfunction DataRoutes(_ref3) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref3;\n  return UNSAFE_useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nfunction BrowserRouter(_ref4) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref4;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nfunction HashRouter(_ref5) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref5;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter(_ref6) {\n  let {\n    basename,\n    children,\n    future,\n    history\n  } = _ref6;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref7, ref) {\n  let {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      unstable_viewTransition\n    } = _ref7,\n    rest = _objectWithoutPropertiesLoose(_ref7, _excluded);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  // Rendered into <a href> for absolute URLs\n  let absoluteHref;\n  let isExternal = false;\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to;\n    // Only check for external origins client-side\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  }\n  // Rendered into <a href> for relative URLs\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref8, ref) {\n  let {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      unstable_viewTransition,\n      children\n    } = _ref8,\n    rest = _objectWithoutPropertiesLoose(_ref8, _excluded2);\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator,\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let isTransitioning = routerState != null &&\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useViewTransitionState(path) && unstable_viewTransition === true;\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n  if (nextLocationPathname && basename) {\n    nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n  }\n  // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n  // we're looking for a slash _after_ what's in `to`.  For example:\n  //\n  // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n  // both want to look for a / at index 6 to match URL `/users/matt`\n  const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let renderProps = {\n    isActive,\n    isPending,\n    isTransitioning\n  };\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp(renderProps);\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null, isTransitioning ? \"transitioning\" : null].filter(Boolean).join(\" \");\n  }\n  let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to,\n    unstable_viewTransition: unstable_viewTransition\n  }), typeof children === \"function\" ? children(renderProps) : children);\n});\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nconst Form = /*#__PURE__*/React.forwardRef((_ref9, forwardedRef) => {\n  let {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition\n    } = _ref9,\n    props = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n  let submit = useSubmit();\n  let formAction = useFormAction(action, {\n    relative\n  });\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      fetcherKey,\n      method: submitMethod,\n      navigate,\n      replace,\n      state,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nfunction ScrollRestoration(_ref10) {\n  let {\n    getKey,\n    storageKey\n  } = _ref10;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterHook[\"useViewTransitionState\"] = \"useViewTransitionState\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n// Internal hooks\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n// External hooks\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault();\n      // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative,\n        unstable_viewTransition\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, unstable_viewTransition]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() =>\n  // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => \"__\" + String(++fetcherId) + \"__\";\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nfunction useSubmit() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    if (options.navigate === false) {\n      let key = options.fetcherKey || getUniqueFetcherId();\n      router.fetch(key, currentRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        unstable_flushSync: options.unstable_flushSync\n      });\n    } else {\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n        unstable_flushSync: options.unstable_flushSync,\n        unstable_viewTransition: options.unstable_viewTransition\n      });\n    }\n  }, [router, basename, currentRouteId]);\n}\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  }));\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    if (params.has(\"index\") && params.get(\"index\") === \"\") {\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nfunction useFetcher(_temp3) {\n  var _route$matches;\n  let {\n    key\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(UNSAFE_RouteContext);\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !fetcherData ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a FetchersContext\") : UNSAFE_invariant(false) : void 0;\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  // Fetcher additions\n  let load = React.useCallback((href, opts) => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href, opts);\n  }, [fetcherKey, routeId, router]);\n  let submitImpl = useSubmit();\n  let submit = React.useCallback((target, opts) => {\n    submitImpl(target, _extends({}, opts, {\n      navigate: false,\n      fetcherKey\n    }));\n  }, [fetcherKey, submitImpl]);\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n      return /*#__PURE__*/React.createElement(Form, _extends({}, props, {\n        navigate: false,\n        fetcherKey: fetcherKey,\n        ref: ref\n      }));\n    });\n    if (process.env.NODE_ENV !== \"production\") {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form: FetcherForm,\n    submit,\n    load\n  }, fetcher, {\n    data\n  }), [FetcherForm, submit, load, fetcher, data]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(_ref11 => {\n    let [key, fetcher] = _ref11;\n    return _extends({}, fetcher, {\n      key\n    });\n  });\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration(_temp4) {\n  let {\n    getKey,\n    storageKey\n  } = _temp4 === void 0 ? {} : _temp4;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  // Save positions on pagehide\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n    try {\n      sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    } catch (error) {\n      process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (\" + error + \").\") : void 0;\n    }\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches]));\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey( // Strip the basename to match useLocation()\n      _extends({}, location, {\n        pathname: stripBasename(location.pathname, basename) || location.pathname\n      }), matches) : getKey;\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt(_ref12) {\n  let {\n    when,\n    message\n  } = _ref12;\n  let blocker = useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(to, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  let vtContext = React.useContext(ViewTransitionContext);\n  !(vtContext != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" + \"Did you accidentally import `RouterProvider` from `react-router`?\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename\n  } = useDataRouterContext(DataRouterHook.useViewTransitionState);\n  let path = useResolvedPath(to, {\n    relative: opts.relative\n  });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n}\n//#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, RouterProvider, ScrollRestoration, FetchersContext as UNSAFE_FetchersContext, ViewTransitionContext as UNSAFE_ViewTransitionContext, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useViewTransitionState as unstable_useViewTransitionState, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };\n//# sourceMappingURL=index.js.map\n","/**\n * React Router v6.22.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_invariant, joinPaths, matchPath, UNSAFE_getResolveToMatches, UNSAFE_warning, resolveTo, parsePath, matchRoutes, Action, UNSAFE_convertRouteMatchToUiMatch, stripBasename, IDLE_BLOCKER, isRouteErrorResponse, createMemoryHistory, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, resolvePath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\nconst LocationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\nconst navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\";\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nfunction useNavigate() {\n  let {\n    isDataRoute\n  } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let {\n    basename,\n    future,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our history listener yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\");\n\n    // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history (but only if we're not in a data router,\n    // otherwise it'll prepend the basename inside of the router).\n    // If this is a root navigation, then we navigate to the raw basename\n    // which allows the basename to have full control over the presence of a\n    // trailing slash on root links\n    if (dataRouterContext == null && basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    future\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : UNSAFE_invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined || matches[matches.length - 1].route.lazy !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState, future);\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nconst defaultErrorElement = /*#__PURE__*/React.createElement(DefaultErrorComponent, null);\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error !== undefined ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    return this.state.error !== undefined ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n}\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches, parentMatches, dataRouterState, future) {\n  var _dataRouterState2;\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n  if (future === void 0) {\n    future = null;\n  }\n  if (matches == null) {\n    var _dataRouterState;\n    if ((_dataRouterState = dataRouterState) != null && _dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = (_dataRouterState2 = dataRouterState) == null ? void 0 : _dataRouterState2.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]));\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : UNSAFE_invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n\n  // If we're in a partial hydration mode, detect if we need to render down to\n  // a given HydrateFallback while we load the rest of the hydration data\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState && future && future.v7_partialHydration) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      // Track the deepest fallback up until the first route without data\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n      if (match.route.id) {\n        let {\n          loaderData,\n          errors\n        } = dataRouterState;\n        let needsToRunLoader = match.route.loader && loaderData[match.route.id] === undefined && (!errors || errors[match.route.id] === undefined);\n        if (match.route.lazy || needsToRunLoader) {\n          // We found the first route that's not ready to render (waiting on\n          // lazy, or has a loader that hasn't run yet).  Flag that we need to\n          // render a fallback and render up until the appropriate fallback\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    // Only data routers handle errors/fallbacks\n    let error;\n    let shouldRenderHydrateFallback = false;\n    let errorElement = null;\n    let hydrateFallbackElement = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : undefined;\n      errorElement = match.route.errorElement || defaultErrorElement;\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\"route-fallback\", false, \"No `HydrateFallback` element provided to render during initial hydration\");\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/React.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /*#__PURE__*/React.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook = /*#__PURE__*/function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n  return DataRouterHook;\n}(DataRouterHook || {});\nvar DataRouterStateHook = /*#__PURE__*/function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n  return DataRouterStateHook;\n}(DataRouterStateHook || {});\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(() => ({\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  }), [dataRouterContext.router.revalidate, state.revalidation]);\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(m => UNSAFE_convertRouteMatchToUiMatch(m, loaderData)), [matches, loaderData]);\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nfunction useRouteError() {\n  var _state$errors;\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error !== undefined) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nfunction useBlocker(shouldBlock) {\n  let {\n    router,\n    basename\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback(arg => {\n    if (typeof shouldBlock !== \"function\") {\n      return !!shouldBlock;\n    }\n    if (basename === \"/\") {\n      return shouldBlock(arg);\n    }\n\n    // If they provided us a function and we've got an active basename, strip\n    // it from the locations we expose to the user to match the behavior of\n    // useLocation\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = arg;\n    return shouldBlock({\n      currentLocation: _extends({}, currentLocation, {\n        pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n      }),\n      nextLocation: _extends({}, nextLocation, {\n        pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n      }),\n      historyAction\n    });\n  }, [basename, shouldBlock]);\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our router subscriber yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, _extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\nconst alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, message) : void 0;\n  }\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    if (v7_startTransition && startTransitionImpl) {\n      startTransitionImpl(() => setStateImpl(newState));\n    } else {\n      setStateImpl(newState);\n    }\n  }, [setStateImpl, v7_startTransition]);\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  React.useEffect(() => {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: {\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath\n    }\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))), null);\n}\nfunction DataRoutes(_ref2) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref2;\n  return useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex,\n    future\n  } = _ref3;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref4;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    future,\n    static: isStatic\n  } = React.useContext(NavigationContext);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(!isStatic, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(to, UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath), locationPathname, relative === \"path\");\n  let jsonPath = JSON.stringify(path);\n  React.useEffect(() => navigate(JSON.parse(jsonPath), {\n    replace,\n    state,\n    relative\n  }), [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : UNSAFE_invariant(false) ;\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nfunction Router(_ref5) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false,\n    future\n  } = _ref5;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : UNSAFE_invariant(false) : void 0;\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp,\n    future: _extends({\n      v7_relativeSplatPath: false\n    }, future)\n  }), [basename, future, navigator, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n  if (locationContext == null) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref7) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref7;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus = /*#__PURE__*/function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n  return AwaitRenderStatus;\n}(AwaitRenderStatus || {});\nconst neverSettledPromise = new Promise(() => {});\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = promise._error !== undefined ? AwaitRenderStatus.error : promise._data !== undefined ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait(_ref8) {\n  let {\n    children\n  } = _ref8;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : UNSAFE_invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"An index route cannot have child routes.\") : UNSAFE_invariant(false) : void 0;\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n    routes.push(route);\n  });\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.element) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      element: /*#__PURE__*/React.createElement(route.Component),\n      Component: undefined\n    });\n  }\n  if (route.HydrateFallback) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.hydrateFallbackElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - \" + \"`HydrateFallback` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      hydrateFallbackElement: /*#__PURE__*/React.createElement(route.HydrateFallback),\n      HydrateFallback: undefined\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.errorElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n  return updates;\n}\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    mapRouteProperties\n  }).initialize();\n}\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, mapRouteProperties as UNSAFE_mapRouteProperties, useRouteId as UNSAFE_useRouteId, useRoutesImpl as UNSAFE_useRoutesImpl, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };\n//# sourceMappingURL=index.js.map\n"],"names":["Action","ResultType","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","PopStateEventType","createBrowserHistory","options","getUrlBasedHistory","globalHistory","pathname","search","hash","location","createLocation","state","usr","to","createPath","createHashHistory","parsePath","substr","startsWith","base","document","querySelector","href","getAttribute","url","hashIndex","indexOf","slice","warning","charAt","JSON","stringify","invariant","value","message","Error","cond","console","warn","e","getHistoryState","index","idx","current","Math","random","toString","_ref","path","parsedPath","searchIndex","getLocation","createHref","validateLocation","window","defaultView","v5Compat","history","action","Pop","listener","getIndex","handlePop","nextIndex","delta","replaceState","createURL","origin","URL","listen","fn","addEventListener","removeEventListener","encodeLocation","push","Push","historyState","pushState","error","DOMException","name","replace","Replace","go","n","immutableRouteKeys","Set","convertRoutesToDataRoutes","routes","mapRouteProperties","parentPath","manifest","map","route","treePath","id","join","children","indexRoute","pathOrLayoutRoute","undefined","matchRoutes","locationArg","basename","stripBasename","branches","flattenRoutes","parentsMeta","flattenRoute","relativePath","meta","caseSensitive","childrenIndex","joinPaths","routesMeta","concat","score","computeScore","segments","split","initialScore","some","isSplat","filter","s","reduce","segment","paramRe","test","forEach","_route$path","includes","exploded","explodeOptionalSegments","first","rest","isOptional","endsWith","required","restExploded","result","subpath","rankRouteBranches","sort","a","b","compareIndexes","siblings","every","matches","matchRouteBranch","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","params","pathnameBase","normalizePathname","safelyDecodeURI","decodeURI","convertRouteMatchToUiMatch","loaderData","data","handle","pattern","matcher","compiledParams","compilePath","regexpSource","_","paramName","RegExp","captureGroups","memo","splatValue","safelyDecodeURIComponent","decodeURIComponent","toLowerCase","startIndex","nextChar","getInvalidPathError","char","field","dest","getPathContributingMatches","getResolveToMatches","v7_relativeSplatPath","pathMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","from","isEmptyPath","toPathname","routePathnameIndex","toSegments","shift","resolvePath","fromPathname","resolvePathname","relativeSegments","pop","normalizeSearch","normalizeHash","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","ErrorResponseImpl","constructor","status","statusText","internal","isRouteErrorResponse","validMutationMethodsArr","validMutationMethods","validRequestMethodsArr","validRequestMethods","redirectStatusCodes","redirectPreserveMethodStatusCodes","IDLE_NAVIGATION","formMethod","formAction","formEncType","formData","json","text","IDLE_FETCHER","IDLE_BLOCKER","proceed","reset","ABSOLUTE_URL_REGEX","defaultMapRouteProperties","hasErrorBoundary","Boolean","TRANSITIONS_STORAGE_KEY","createRouter","init","inFlightDataRoutes","initialized","router","pendingNavigationController","routerWindow","isBrowser","createElement","isServer","detectErrorBoundary","dataRoutes","future","v7_fetcherPersist","v7_normalizeFormMethod","v7_partialHydration","v7_prependBasename","unlistenHistory","subscribers","savedScrollPositions","getScrollRestorationKey","getScrollPosition","initialScrollRestored","hydrationData","initialMatches","initialErrors","getInternalRouterError","getShortCircuitMatches","hasLazyRoutes","m","lazy","hasLoaders","loader","errors","hydrate","historyAction","navigation","restoreScrollPosition","preventScrollReset","revalidation","actionData","fetchers","Map","blockers","pendingAction","pendingPreventScrollReset","pendingViewTransitionEnabled","appliedViewTransitions","removePageHideEventListener","isUninterruptedRevalidation","isRevalidationRequired","cancelledDeferredRoutes","cancelledFetcherLoads","fetchControllers","incrementingLoadId","pendingNavigationLoadId","fetchReloadIds","fetchRedirectIds","fetchLoadMatches","activeFetchers","deletedFetchers","activeDeferreds","blockerFunctions","ignoreNextHistoryUpdate","updateState","newState","opts","completedFetchers","deletedFetchersKeys","fetcher","has","subscriber","unstable_viewTransitionOpts","viewTransitionOpts","unstable_flushSync","flushSync","delete","deleteFetcher","completeNavigation","_temp","_location$state","_location$state2","isActionReload","isMutationMethod","_isRedirect","keys","mergeLoaderData","size","k","set","priorPaths","get","currentLocation","nextLocation","toPaths","add","getSavedScrollPosition","navigate","normalizedPath","normalizeTo","fromRouteId","relative","submission","normalizeNavigateOptions","userReplace","blockerKey","shouldBlockNavigation","updateBlocker","startNavigation","pendingError","enableViewTransition","unstable_viewTransition","pendingActionData","abort","startUninterruptedRevalidation","saveScrollPosition","getScrollKey","routesToUse","loadingNavigation","overrideNavigation","notFoundMatches","cancelActiveDeferreds","isHashChangeOnly","AbortController","request","createClientSideRequest","signal","findNearestBoundary","actionOutput","handleAction","shortCircuited","pendingActionError","getLoadingNavigation","Request","handleLoaders","fetcherSubmission","initialHydration","interruptActiveLoads","getSubmittingNavigation","actionMatch","getTargetMatch","callLoaderOrAction","aborted","type","method","routeId","isRedirectResult","startRedirectNavigation","isErrorResult","boundaryMatch","isDeferredResult","activeSubmission","getSubmissionFromNavigation","matchesToLoad","revalidatingFetchers","getMatchesToLoad","updatedFetchers","markFetchRedirectsDone","rf","revalidatingFetcher","getLoadingFetcher","abortFetcher","controller","abortPendingFetchRevalidations","f","results","loaderResults","fetcherResults","callLoadersAndMaybeResolveData","redirect","findRedirect","fetcherKey","processLoaderData","deferredData","subscribe","done","didAbortFetchLoads","abortStaleFetchLoads","shouldUpdateFetchers","handleFetcherAction","requestMatches","setFetcherError","existingFetcher","updateFetcherState","getSubmittingFetcher","abortController","fetchRequest","originatingLoadId","actionResult","getDoneFetcher","revalidationRequest","loadId","loadFetcher","staleKey","r","doneFetcher","handleFetcherLoader","resolveDeferredData","_temp2","revalidate","redirectLocation","isDocumentReload","reloadDocument","redirectHistoryAction","currentMatches","fetchersToLoad","Promise","all","resolveDeferredResults","getFetcher","markFetchersDone","doneKeys","landedId","yeetedKeys","deleteBlocker","newBlocker","blocker","_ref2","entries","Array","blockerFunction","predicate","cancelledRouteIds","dfd","cancel","y","initialize","restoreAppliedTransitions","_window","transitions","sessionPositions","sessionStorage","getItem","parse","v","isArray","_saveAppliedTransitions","persistAppliedTransitions","setItem","enableScrollRestoration","positions","getPosition","getKey","fetch","count","dispose","clear","getBlocker","_internalFetchControllers","_internalActiveDeferreds","_internalSetRoutes","newRoutes","Symbol","prependBasename","contextualMatches","activeRouteMatch","hasNakedIndexQuery","normalizeFormMethod","isFetcher","searchParams","body","isValidMethod","getInvalidBodyError","rawFormMethod","toUpperCase","stripHashFromPath","FormData","URLSearchParams","acc","_ref3","String","convertFormDataToSearchParams","convertSearchParamsToFormData","append","isInitialLoad","values","currentUrl","nextUrl","navigationMatches","boundaryMatches","getLoaderMatchesUntilBoundary","boundaryId","findIndex","isNewLoader","currentLoaderData","currentMatch","isNew","isMissingData","currentRouteMatch","shouldRevalidateLoader","currentParams","nextParams","nextRouteMatch","defaultShouldRevalidate","isNewRouteInstance","fetcherMatches","fetcherMatch","shouldRevalidate","currentPath","loaderMatch","arg","routeChoice","loadLazyRouteModule","lazyRoute","routeToUpdate","routeUpdates","lazyRouteProperty","isPropertyStaticallyDefined","staticRouteValue","resultType","onReject","runHandler","handler","reject","abortPromise","race","context","requestContext","handlerError","catch","isResponse","headers","isStaticRequest","protocol","isSameBasename","isRouteRequest","response","contentType","statusCode","isDeferredData","deferred","resolveData","_result$init","_result$init2","Headers","foundError","loaderHeaders","newLoaderData","mergedLoaderData","eligibleMatches","reverse","find","_temp5","errorMessage","signals","isRevalidatingLoader","then","unwrap","unwrappedData","getAll","DataRouterHook","DataRouterStateHook","_objectWithoutPropertiesLoose","excluded","sourceKeys","defaultEncType","isHtmlElement","object","tagName","_formDataSupportsSubmitter","supportedFormEncTypes","getFormEncType","encType","_excluded","_excluded2","_excluded3","__reactRouterVersion","createBrowserRouter","parseHydrationData","UNSAFE_mapRouteProperties","createHashRouter","__staticRouterHydrationData","deserializeErrors","serialized","val","__type","UNSAFE_ErrorResponseImpl","__subType","ErrorConstructor","stack","ViewTransitionContext","isTransitioning","FetchersContext","startTransitionImpl","flushSyncImpl","flushSyncSafe","cb","Deferred","promise","resolve","reason","RouterProvider","fallbackElement","setStateImpl","pendingState","setPendingState","vtContext","setVtContext","renderDfd","setRenderDfd","transition","setTransition","interruption","setInterruption","fetcherData","v7_startTransition","optInStartTransition","startTransitionSafe","setState","isViewTransitionUnavailable","startViewTransition","skipTransition","t","finished","finally","renderPromise","navigator","dataRouterContext","static","UNSAFE_DataRouterContext","UNSAFE_DataRouterStateContext","Provider","Router","navigationType","DataRoutes","UNSAFE_useRoutesImpl","Link","_ref7","ref","absoluteHref","onClick","UNSAFE_NavigationContext","isExternal","targetUrl","useHref","internalOnClick","useLinkClickHandler","replaceProp","useNavigate","useLocation","useResolvedPath","event","button","metaKey","altKey","ctrlKey","shiftKey","preventDefault","defaultPrevented","NavLink","_ref8","className","ariaCurrentProp","classNameProp","style","styleProp","routerState","useViewTransitionState","UNSAFE_invariant","useDataRouterContext","nextPath","nextLocationPathname","endSlashPosition","isActive","isPending","renderProps","ariaCurrent","hookName","ctx","fetcherId","getUniqueFetcherId","createRoutesFromChildren","element","props","Route","Component","errorElement","ErrorBoundary","AwaitRenderStatus","DataRouterContext","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useInRouterContext","joinedPathname","useIsomorphicLayoutEffect","useNavigateStable","UseNavigateStable","useCurrentRouteId","activeRef","useNavigateUnstable","routePathnamesJson","UNSAFE_getResolveToMatches","OutletContext","useParams","routeMatch","useRoutesImpl","dataRouterState","parentMatches","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","renderedMatches","_renderMatches","_dataRouterState2","_dataRouterState","errorIndex","min","renderFallback","fallbackIndex","HydrateFallback","hydrateFallbackElement","needsToRunLoader","reduceRight","shouldRenderHydrateFallback","defaultErrorElement","warningOnce","alreadyWarned","getChildren","RenderedRoute","routeContext","RenderErrorBoundary","component","useRouteError","_state$errors","useDataRouterState","UseRouteError","fontStyle","padding","backgroundColor","getDerivedStateFromError","getDerivedStateFromProps","componentDidCatch","errorInfo","render","staticContext","_deepestRenderedBoundaryId","thisRoute","useRouteId","UseRouteId","useMatches","UseMatches","UNSAFE_convertRouteMatchToUiMatch","useLoaderData","UseLoaderData","Outlet","_props","_ref5","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","updates"],"mappings":"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"}