{"version":3,"file":"static/js/npm.ant-design+colors@7.0.0.node_modules.098347f3.js","mappings":"gaACIA,EAAU,EAEVC,EAAiB,IAEjBC,EAAkB,IAElBC,EAAkB,IAElBC,EAAkB,IAElBC,EAAkB,EAElBC,EAAiB,EAGjBC,EAAe,CAAC,CAClBC,MAAO,EACPC,QAAS,KACR,CACDD,MAAO,EACPC,QAAS,KACR,CACDD,MAAO,EACPC,QAAS,IACR,CACDD,MAAO,EACPC,QAAS,KACR,CACDD,MAAO,EACPC,QAAS,KACR,CACDD,MAAO,EACPC,QAAS,KACR,CACDD,MAAO,EACPC,QAAS,IACR,CACDD,MAAO,EACPC,QAAS,KACR,CACDD,MAAO,EACPC,QAAS,KACR,CACDD,MAAO,EACPC,QAAS,MAKX,SAASC,EAAMC,GACb,IAAIC,EAAID,EAAKC,EACTC,EAAIF,EAAKE,EACTC,EAAIH,EAAKG,EACTC,GAAM,QAASH,EAAGC,EAAGC,GACzB,MAAO,CACLE,EAAW,IAARD,EAAIC,EACPC,EAAGF,EAAIE,EACPC,EAAGH,EAAIG,EAEX,CAIA,SAASC,EAAMC,GACb,IAAIR,EAAIQ,EAAMR,EACVC,EAAIO,EAAMP,EACVC,EAAIM,EAAMN,EACd,MAAO,IAAIO,QAAO,QAAST,EAAGC,EAAGC,GAAG,GACtC,CAeA,SAASQ,EAAOP,EAAKQ,EAAGC,GACtB,IAAIC,EAcJ,OAXEA,EADEC,KAAKC,MAAMZ,EAAIC,IAAM,IAAMU,KAAKC,MAAMZ,EAAIC,IAAM,IAC5CQ,EAAQE,KAAKC,MAAMZ,EAAIC,GAAKhB,EAAUuB,EAAIG,KAAKC,MAAMZ,EAAIC,GAAKhB,EAAUuB,EAExEC,EAAQE,KAAKC,MAAMZ,EAAIC,GAAKhB,EAAUuB,EAAIG,KAAKC,MAAMZ,EAAIC,GAAKhB,EAAUuB,GAGtE,EACRE,GAAO,IACEA,GAAO,MAChBA,GAAO,KAGFA,CACT,CAEA,SAASG,EAAcb,EAAKQ,EAAGC,GAE7B,OAAc,IAAVT,EAAIC,GAAqB,IAAVD,EAAIE,EACdF,EAAIE,IAMXY,EADEL,EACWT,EAAIE,EAAIhB,EAAiBsB,EAC7BA,IAAMjB,EACFS,EAAIE,EAAIhB,EAERc,EAAIE,EAAIf,EAAkBqB,GAIxB,IACfM,EAAa,GAIXL,GAASD,IAAMlB,GAAmBwB,EAAa,KACjDA,EAAa,IAGXA,EAAa,MACfA,EAAa,KAGRC,OAAOD,EAAWE,QAAQ,KAxBjC,IAAIF,CAyBN,CAEA,SAASG,EAASjB,EAAKQ,EAAGC,GACxB,IAAIS,EAYJ,OATEA,EADET,EACMT,EAAIG,EAAIf,EAAkBoB,EAE1BR,EAAIG,EAAId,EAAkBmB,GAGxB,IACVU,EAAQ,GAGHH,OAAOG,EAAMF,QAAQ,GAC9B,CAEe,SAASG,EAASC,GAK/B,IAJA,IAAIC,EAAOC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAC5EG,EAAW,GACXC,GAAS,QAAWN,GAEfZ,EAAIlB,EAAiBkB,EAAI,EAAGA,GAAK,EAAG,CAC3C,IAAIR,EAAML,EAAM+B,GACZC,EAAcvB,GAAM,QAAW,CACjCH,EAAGM,EAAOP,EAAKQ,GAAG,GAClBN,EAAGW,EAAcb,EAAKQ,GAAG,GACzBL,EAAGc,EAASjB,EAAKQ,GAAG,MAEtBiB,EAASG,KAAKD,EAChB,CAEAF,EAASG,KAAKxB,EAAMsB,IAEpB,IAAK,IAAIG,EAAK,EAAGA,GAAMtC,EAAgBsC,GAAM,EAAG,CAC9C,IAAIC,EAAOnC,EAAM+B,GAEbK,EAAe3B,GAAM,QAAW,CAClCH,EAAGM,EAAOuB,EAAMD,GAChB3B,EAAGW,EAAciB,EAAMD,GACvB1B,EAAGc,EAASa,EAAMD,MAGpBJ,EAASG,KAAKG,EAChB,CAGA,MAAmB,SAAfV,EAAKW,MACAxC,EAAayC,KAAI,SAAUC,GAChC,IA7GOC,EAAMC,EACbC,EA4GI5C,EAAQyC,EAAMzC,MACdC,EAAUwC,EAAMxC,QAEpB,OADsBU,GA/Gf+B,GA+GyB,QAAWd,EAAKiB,iBAAmB,WA/GtDF,GA+GkE,QAAWX,EAAShC,IA9GnG4C,EA8GsH,IAAV3C,EA9G/F,IACP,CACRG,GAAIuC,EAAKvC,EAAIsC,EAAKtC,GAAKwC,EAAIF,EAAKtC,EAChCC,GAAIsC,EAAKtC,EAAIqC,EAAKrC,GAAKuC,EAAIF,EAAKrC,EAChCC,GAAIqC,EAAKrC,EAAIoC,EAAKpC,GAAKsC,EAAIF,EAAKpC,IA4GhC,IAGK0B,CACT,CC9LA,IAAIc,EAAsB,CACxBC,IAAK,UACLC,QAAS,UACTC,OAAQ,UACRC,KAAM,UACNC,OAAQ,UACRC,KAAM,UACNC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,SAAU,UACVC,OAAQ,UACRC,QAAS,UACTC,KAAM,WAEJC,EAAiB,CAAC,EAClBC,EAAqB,CAAC,EAC1BC,OAAOC,KAAKjB,GAAqBkB,SAAQ,SAAUC,GACjDL,EAAeK,GAAOvC,EAASoB,EAAoBmB,IACnDL,EAAeK,GAAKC,QAAUN,EAAeK,GAAK,GAElDJ,EAAmBI,GAAOvC,EAASoB,EAAoBmB,GAAM,CAC3D1B,MAAO,OACPM,gBAAiB,YAEnBgB,EAAmBI,GAAKC,QAAUL,EAAmBI,GAAK,EAC5D,IACA,IAAIlB,EAAMa,EAAeb,IACrBC,EAAUY,EAAeZ,QACzBE,EAAOU,EAAeV,KACtBD,EAASW,EAAeX,OACxBE,EAASS,EAAeT,OACxBC,EAAOQ,EAAeR,KACtBC,EAAQO,EAAeP,MACvBC,EAAOM,EAAeN,KACtBC,EAAOK,EAAeL,KACtBC,EAAWI,EAAeJ,SAC1BC,EAASG,EAAeH,OACxBC,EAAUE,EAAeF,QACzBC,EAAOC,EAAeD,KACtBQ,EAAOP,EAAeD,I","sources":["webpack://@sinsa/web/../../node_modules/.pnpm/@ant-design+colors@7.0.0/node_modules/@ant-design/colors/es/generate.js","webpack://@sinsa/web/../../node_modules/.pnpm/@ant-design+colors@7.0.0/node_modules/@ant-design/colors/es/index.js"],"sourcesContent":["import { inputToRGB, rgbToHex, rgbToHsv } from '@ctrl/tinycolor';\nvar hueStep = 2; // 色相阶梯\n\nvar saturationStep = 0.16; // 饱和度阶梯，浅色部分\n\nvar saturationStep2 = 0.05; // 饱和度阶梯，深色部分\n\nvar brightnessStep1 = 0.05; // 亮度阶梯，浅色部分\n\nvar brightnessStep2 = 0.15; // 亮度阶梯，深色部分\n\nvar lightColorCount = 5; // 浅色数量，主色上\n\nvar darkColorCount = 4; // 深色数量，主色下\n// 暗色主题颜色映射关系表\n\nvar darkColorMap = [{\n  index: 7,\n  opacity: 0.15\n}, {\n  index: 6,\n  opacity: 0.25\n}, {\n  index: 5,\n  opacity: 0.3\n}, {\n  index: 5,\n  opacity: 0.45\n}, {\n  index: 5,\n  opacity: 0.65\n}, {\n  index: 5,\n  opacity: 0.85\n}, {\n  index: 4,\n  opacity: 0.9\n}, {\n  index: 3,\n  opacity: 0.95\n}, {\n  index: 2,\n  opacity: 0.97\n}, {\n  index: 1,\n  opacity: 0.98\n}];\n\n// Wrapper function ported from TinyColor.prototype.toHsv\n// Keep it here because of `hsv.h * 360`\nfunction toHsv(_ref) {\n  var r = _ref.r,\n      g = _ref.g,\n      b = _ref.b;\n  var hsv = rgbToHsv(r, g, b);\n  return {\n    h: hsv.h * 360,\n    s: hsv.s,\n    v: hsv.v\n  };\n} // Wrapper function ported from TinyColor.prototype.toHexString\n// Keep it here because of the prefix `#`\n\n\nfunction toHex(_ref2) {\n  var r = _ref2.r,\n      g = _ref2.g,\n      b = _ref2.b;\n  return \"#\".concat(rgbToHex(r, g, b, false));\n} // Wrapper function ported from TinyColor.prototype.mix, not treeshakable.\n// Amount in range [0, 1]\n// Assume color1 & color2 has no alpha, since the following src code did so.\n\n\nfunction mix(rgb1, rgb2, amount) {\n  var p = amount / 100;\n  var rgb = {\n    r: (rgb2.r - rgb1.r) * p + rgb1.r,\n    g: (rgb2.g - rgb1.g) * p + rgb1.g,\n    b: (rgb2.b - rgb1.b) * p + rgb1.b\n  };\n  return rgb;\n}\n\nfunction getHue(hsv, i, light) {\n  var hue; // 根据色相不同，色相转向不同\n\n  if (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) {\n    hue = light ? Math.round(hsv.h) - hueStep * i : Math.round(hsv.h) + hueStep * i;\n  } else {\n    hue = light ? Math.round(hsv.h) + hueStep * i : Math.round(hsv.h) - hueStep * i;\n  }\n\n  if (hue < 0) {\n    hue += 360;\n  } else if (hue >= 360) {\n    hue -= 360;\n  }\n\n  return hue;\n}\n\nfunction getSaturation(hsv, i, light) {\n  // grey color don't change saturation\n  if (hsv.h === 0 && hsv.s === 0) {\n    return hsv.s;\n  }\n\n  var saturation;\n\n  if (light) {\n    saturation = hsv.s - saturationStep * i;\n  } else if (i === darkColorCount) {\n    saturation = hsv.s + saturationStep;\n  } else {\n    saturation = hsv.s + saturationStep2 * i;\n  } // 边界值修正\n\n\n  if (saturation > 1) {\n    saturation = 1;\n  } // 第一格的 s 限制在 0.06-0.1 之间\n\n\n  if (light && i === lightColorCount && saturation > 0.1) {\n    saturation = 0.1;\n  }\n\n  if (saturation < 0.06) {\n    saturation = 0.06;\n  }\n\n  return Number(saturation.toFixed(2));\n}\n\nfunction getValue(hsv, i, light) {\n  var value;\n\n  if (light) {\n    value = hsv.v + brightnessStep1 * i;\n  } else {\n    value = hsv.v - brightnessStep2 * i;\n  }\n\n  if (value > 1) {\n    value = 1;\n  }\n\n  return Number(value.toFixed(2));\n}\n\nexport default function generate(color) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var patterns = [];\n  var pColor = inputToRGB(color);\n\n  for (var i = lightColorCount; i > 0; i -= 1) {\n    var hsv = toHsv(pColor);\n    var colorString = toHex(inputToRGB({\n      h: getHue(hsv, i, true),\n      s: getSaturation(hsv, i, true),\n      v: getValue(hsv, i, true)\n    }));\n    patterns.push(colorString);\n  }\n\n  patterns.push(toHex(pColor));\n\n  for (var _i = 1; _i <= darkColorCount; _i += 1) {\n    var _hsv = toHsv(pColor);\n\n    var _colorString = toHex(inputToRGB({\n      h: getHue(_hsv, _i),\n      s: getSaturation(_hsv, _i),\n      v: getValue(_hsv, _i)\n    }));\n\n    patterns.push(_colorString);\n  } // dark theme patterns\n\n\n  if (opts.theme === 'dark') {\n    return darkColorMap.map(function (_ref3) {\n      var index = _ref3.index,\n          opacity = _ref3.opacity;\n      var darkColorString = toHex(mix(inputToRGB(opts.backgroundColor || '#141414'), inputToRGB(patterns[index]), opacity * 100));\n      return darkColorString;\n    });\n  }\n\n  return patterns;\n}","import generate from \"./generate\";\nvar presetPrimaryColors = {\n  red: '#F5222D',\n  volcano: '#FA541C',\n  orange: '#FA8C16',\n  gold: '#FAAD14',\n  yellow: '#FADB14',\n  lime: '#A0D911',\n  green: '#52C41A',\n  cyan: '#13C2C2',\n  blue: '#1677FF',\n  geekblue: '#2F54EB',\n  purple: '#722ED1',\n  magenta: '#EB2F96',\n  grey: '#666666'\n};\nvar presetPalettes = {};\nvar presetDarkPalettes = {};\nObject.keys(presetPrimaryColors).forEach(function (key) {\n  presetPalettes[key] = generate(presetPrimaryColors[key]);\n  presetPalettes[key].primary = presetPalettes[key][5]; // dark presetPalettes\n\n  presetDarkPalettes[key] = generate(presetPrimaryColors[key], {\n    theme: 'dark',\n    backgroundColor: '#141414'\n  });\n  presetDarkPalettes[key].primary = presetDarkPalettes[key][5];\n});\nvar red = presetPalettes.red;\nvar volcano = presetPalettes.volcano;\nvar gold = presetPalettes.gold;\nvar orange = presetPalettes.orange;\nvar yellow = presetPalettes.yellow;\nvar lime = presetPalettes.lime;\nvar green = presetPalettes.green;\nvar cyan = presetPalettes.cyan;\nvar blue = presetPalettes.blue;\nvar geekblue = presetPalettes.geekblue;\nvar purple = presetPalettes.purple;\nvar magenta = presetPalettes.magenta;\nvar grey = presetPalettes.grey;\nvar gray = presetPalettes.grey;\nexport { generate, presetPalettes, presetDarkPalettes, presetPrimaryColors, red, volcano, orange, gold, yellow, lime, green, cyan, blue, geekblue, purple, magenta, grey, gray };"],"names":["hueStep","saturationStep","saturationStep2","brightnessStep1","brightnessStep2","lightColorCount","darkColorCount","darkColorMap","index","opacity","toHsv","_ref","r","g","b","hsv","h","s","v","toHex","_ref2","concat","getHue","i","light","hue","Math","round","getSaturation","saturation","Number","toFixed","getValue","value","generate","color","opts","arguments","length","undefined","patterns","pColor","colorString","push","_i","_hsv","_colorString","theme","map","_ref3","rgb1","rgb2","p","backgroundColor","presetPrimaryColors","red","volcano","orange","gold","yellow","lime","green","cyan","blue","geekblue","purple","magenta","grey","presetPalettes","presetDarkPalettes","Object","keys","forEach","key","primary","gray"],"sourceRoot":""}