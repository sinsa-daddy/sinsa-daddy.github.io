{"version":3,"file":"static/js/npm.rc-resize-observer@1.4.0_react-dom@18.2.0_react@18.2.0.9cce064f.js","mappings":"iOACWA,EAAiC,gBAAoB,M,eCC5DC,EAAmB,IAAIC,IAY3B,IAAIC,EAAiB,IAAI,KAXzB,SAAkBC,GAChBA,EAASC,SAAQ,SAAUC,GACzB,IAAIC,EACAC,EAASF,EAAOE,OACuC,QAA1DD,EAAwBN,EAAiBQ,IAAID,UAA+C,IAA1BD,GAAoCA,EAAsBF,SAAQ,SAAUK,GAC7I,OAAOA,EAASF,EAClB,GACF,GACF,I,gDCHIG,EAA0B,SAAUC,IACtC,OAAUD,EAAYC,GACtB,IAAIC,GAAS,OAAaF,GAC1B,SAASA,IAEP,OADA,OAAgBG,KAAMH,GACfE,EAAOE,MAAMD,KAAME,UAC5B,CAOA,OANA,OAAaL,EAAY,CAAC,CACxBM,IAAK,SACLC,MAAO,WACL,OAAOJ,KAAKK,MAAMC,QACpB,KAEKT,CACT,CAd8B,CAc5B,aCdF,SAASU,EAAeF,EAAOG,GAC7B,IAAIF,EAAWD,EAAMC,SACnBG,EAAWJ,EAAMI,SACfC,EAAa,SAAa,MAC1BC,EAAa,SAAa,MAC1BC,EAAqB,aAAiB1B,GAGtC2B,EAAoC,mBAAbP,EACvBQ,EAAiBD,EAAgBP,EAASI,GAAcJ,EAGxDS,EAAU,SAAa,CACzBC,OAAQ,EACRC,QAAS,EACTC,aAAc,EACdC,cAAe,IAIbC,GAAUP,GAA8B,iBAAqBC,KAAmB,QAAWA,GAC3FO,EAAYD,EAASN,EAAeN,IAAM,KAC1Cc,GAAY,QAAcD,EAAWX,GACrCa,EAAS,WACX,IAAIC,EACJ,OAAO,EAAAC,EAAA,GAAYf,EAAWgB,WAE9BhB,EAAWgB,SAA2C,YAAhC,OAAQhB,EAAWgB,UAAwB,EAAAD,EAAA,GAA2D,QAA9CD,EAAsBd,EAAWgB,eAA6C,IAAxBF,OAAiC,EAASA,EAAoBG,eAAiB,QAAS,EAAAF,EAAA,GAAYd,EAAWe,QACrP,EACA,sBAA0BlB,GAAK,WAC7B,OAAOe,GACT,IAGA,IAAIK,EAAW,SAAavB,GAC5BuB,EAASF,QAAUrB,EAGnB,IAAIwB,EAAmB,eAAkB,SAAUnC,GACjD,IAAIoC,EAAoBF,EAASF,QAC/BK,EAAWD,EAAkBC,SAC7BC,EAAOF,EAAkBE,KACvBC,EAAwBvC,EAAOwC,wBACjClB,EAAQiB,EAAsBjB,MAC9BC,EAASgB,EAAsBhB,OAC7BC,EAAcxB,EAAOwB,YACvBC,EAAezB,EAAOyB,aAOpBgB,EAAaC,KAAKC,MAAMrB,GACxBsB,EAAcF,KAAKC,MAAMpB,GAC7B,GAAIF,EAAQW,QAAQV,QAAUmB,GAAcpB,EAAQW,QAAQT,SAAWqB,GAAevB,EAAQW,QAAQR,cAAgBA,GAAeH,EAAQW,QAAQP,eAAiBA,EAAc,CAClL,IAAIoB,EAAO,CACTvB,MAAOmB,EACPlB,OAAQqB,EACRpB,YAAaA,EACbC,aAAcA,GAEhBJ,EAAQW,QAAUa,EAGlB,IAAIC,EAAoBtB,IAAgBkB,KAAKK,MAAMzB,GAASA,EAAQE,EAChEwB,EAAqBvB,IAAiBiB,KAAKK,MAAMxB,GAAUA,EAASE,EACpEwB,GAAW,QAAc,OAAc,CAAC,EAAGJ,GAAO,CAAC,EAAG,CACxDrB,YAAasB,EACbrB,aAAcuB,IAIhB9B,SAAgEA,EAAmB+B,EAAUjD,EAAQsC,GACjGD,GAEFa,QAAQC,UAAUC,MAAK,WACrBf,EAASY,EAAUjD,EACrB,GAEJ,CACF,GAAG,IAcH,OAXA,aAAgB,WACd,IFxEoBqD,EAASC,EEwEzBC,EAAiB1B,IAIrB,OAHI0B,IAAmBxC,IFzEHsC,EE0EVE,EF1EmBD,EE0EHnB,EFzEvB1C,EAAiB+D,IAAIH,KACxB5D,EAAiBgE,IAAIJ,EAAS,IAAIK,KAClC/D,EAAegE,QAAQN,IAEzB5D,EAAiBQ,IAAIoD,GAASO,IAAIN,IEuEzB,WACL,OFtEC,SAAmBD,EAASC,GAC7B7D,EAAiB+D,IAAIH,KACvB5D,EAAiBQ,IAAIoD,GAASQ,OAAOP,GAChC7D,EAAiBQ,IAAIoD,GAASR,OACjClD,EAAemE,UAAUT,GACzB5D,EAAiBoE,OAAOR,IAG9B,CE8DaS,CAAUP,EAAgBpB,EACnC,CACF,GAAG,CAACnB,EAAWgB,QAASjB,IAGJ,gBAAoBZ,EAAY,CAClDW,IAAKG,GACJS,EAAsB,eAAmBN,EAAgB,CAC1DN,IAAKc,IACFR,EACP,CAKA,QAJqC,aAAiBP,GCnGtD,SAASkD,EAAepD,EAAOG,GAC7B,IAAIF,EAAWD,EAAMC,SASrB,OARqC,mBAAbA,EAA0B,CAACA,IAAY,EAAAoD,EAAA,GAAQpD,IAQrDqD,KAAI,SAAUC,EAAOC,GACrC,IAAI1D,GAAOyD,aAAqC,EAASA,EAAMzD,MAAQ,GAAG2D,OAfpD,kBAegF,KAAKA,OAAOD,GAClH,OAAoB,gBAAoB,GAAgB,OAAS,CAAC,EAAGxD,EAAO,CAC1EF,IAAKA,EACLK,IAAe,IAAVqD,EAAcrD,OAAMuD,IACvBH,EACN,GACF,CACA,IAAII,EAAiC,aAAiBP,GAItDO,EAAkBC,WJ3BX,SAAoBC,GACzB,IAAI5D,EAAW4D,EAAK5D,SAClB6D,EAAgBD,EAAKC,cACnBC,EAAc,SAAa,GAC3BC,EAAiB,SAAa,IAC9BzD,EAAqB,aAAiB1B,GACtC6C,EAAW,eAAkB,SAAUQ,EAAMQ,EAASf,GACxDoC,EAAY1C,SAAW,EACvB,IAAI4C,EAAYF,EAAY1C,QAC5B2C,EAAe3C,QAAQ6C,KAAK,CAC1BhC,KAAMA,EACNQ,QAASA,EACTf,KAAMA,IAERY,QAAQC,UAAUC,MAAK,WACjBwB,IAAcF,EAAY1C,UAC5ByC,SAAsDA,EAAcE,EAAe3C,SACnF2C,EAAe3C,QAAU,GAE7B,IAGAd,SAAgEA,EAAmB2B,EAAMQ,EAASf,EACpG,GAAG,CAACmC,EAAevD,IACnB,OAAoB,gBAAoB1B,EAAkBsF,SAAU,CAClEpE,MAAO2B,GACNzB,EACL,EICA,S","sources":["webpack://@sinsa/web/../../node_modules/.pnpm/rc-resize-observer@1.4.0_react-dom@18.2.0_react@18.2.0/node_modules/rc-resize-observer/es/Collection.js","webpack://@sinsa/web/../../node_modules/.pnpm/rc-resize-observer@1.4.0_react-dom@18.2.0_react@18.2.0/node_modules/rc-resize-observer/es/utils/observerUtil.js","webpack://@sinsa/web/../../node_modules/.pnpm/rc-resize-observer@1.4.0_react-dom@18.2.0_react@18.2.0/node_modules/rc-resize-observer/es/SingleObserver/DomWrapper.js","webpack://@sinsa/web/../../node_modules/.pnpm/rc-resize-observer@1.4.0_react-dom@18.2.0_react@18.2.0/node_modules/rc-resize-observer/es/SingleObserver/index.js","webpack://@sinsa/web/../../node_modules/.pnpm/rc-resize-observer@1.4.0_react-dom@18.2.0_react@18.2.0/node_modules/rc-resize-observer/es/index.js"],"sourcesContent":["import * as React from 'react';\nexport var CollectionContext = /*#__PURE__*/React.createContext(null);\n/**\n * Collect all the resize event from children ResizeObserver\n */\nexport function Collection(_ref) {\n  var children = _ref.children,\n    onBatchResize = _ref.onBatchResize;\n  var resizeIdRef = React.useRef(0);\n  var resizeInfosRef = React.useRef([]);\n  var onCollectionResize = React.useContext(CollectionContext);\n  var onResize = React.useCallback(function (size, element, data) {\n    resizeIdRef.current += 1;\n    var currentId = resizeIdRef.current;\n    resizeInfosRef.current.push({\n      size: size,\n      element: element,\n      data: data\n    });\n    Promise.resolve().then(function () {\n      if (currentId === resizeIdRef.current) {\n        onBatchResize === null || onBatchResize === void 0 || onBatchResize(resizeInfosRef.current);\n        resizeInfosRef.current = [];\n      }\n    });\n\n    // Continue bubbling if parent exist\n    onCollectionResize === null || onCollectionResize === void 0 || onCollectionResize(size, element, data);\n  }, [onBatchResize, onCollectionResize]);\n  return /*#__PURE__*/React.createElement(CollectionContext.Provider, {\n    value: onResize\n  }, children);\n}","import ResizeObserver from 'resize-observer-polyfill';\n// =============================== Const ===============================\nvar elementListeners = new Map();\nfunction onResize(entities) {\n  entities.forEach(function (entity) {\n    var _elementListeners$get;\n    var target = entity.target;\n    (_elementListeners$get = elementListeners.get(target)) === null || _elementListeners$get === void 0 || _elementListeners$get.forEach(function (listener) {\n      return listener(target);\n    });\n  });\n}\n\n// Note: ResizeObserver polyfill not support option to measure border-box resize\nvar resizeObserver = new ResizeObserver(onResize);\n\n// Dev env only\nexport var _el = process.env.NODE_ENV !== 'production' ? elementListeners : null; // eslint-disable-line\nexport var _rs = process.env.NODE_ENV !== 'production' ? onResize : null; // eslint-disable-line\n\n// ============================== Observe ==============================\nexport function observe(element, callback) {\n  if (!elementListeners.has(element)) {\n    elementListeners.set(element, new Set());\n    resizeObserver.observe(element);\n  }\n  elementListeners.get(element).add(callback);\n}\nexport function unobserve(element, callback) {\n  if (elementListeners.has(element)) {\n    elementListeners.get(element).delete(callback);\n    if (!elementListeners.get(element).size) {\n      resizeObserver.unobserve(element);\n      elementListeners.delete(element);\n    }\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport * as React from 'react';\n/**\n * Fallback to findDOMNode if origin ref do not provide any dom element\n */\nvar DomWrapper = /*#__PURE__*/function (_React$Component) {\n  _inherits(DomWrapper, _React$Component);\n  var _super = _createSuper(DomWrapper);\n  function DomWrapper() {\n    _classCallCheck(this, DomWrapper);\n    return _super.apply(this, arguments);\n  }\n  _createClass(DomWrapper, [{\n    key: \"render\",\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n  return DomWrapper;\n}(React.Component);\nexport { DomWrapper as default };","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport findDOMNode from \"rc-util/es/Dom/findDOMNode\";\nimport { supportRef, useComposeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { CollectionContext } from \"../Collection\";\nimport { observe, unobserve } from \"../utils/observerUtil\";\nimport DomWrapper from \"./DomWrapper\";\nfunction SingleObserver(props, ref) {\n  var children = props.children,\n    disabled = props.disabled;\n  var elementRef = React.useRef(null);\n  var wrapperRef = React.useRef(null);\n  var onCollectionResize = React.useContext(CollectionContext);\n\n  // =========================== Children ===========================\n  var isRenderProps = typeof children === 'function';\n  var mergedChildren = isRenderProps ? children(elementRef) : children;\n\n  // ============================= Size =============================\n  var sizeRef = React.useRef({\n    width: -1,\n    height: -1,\n    offsetWidth: -1,\n    offsetHeight: -1\n  });\n\n  // ============================= Ref ==============================\n  var canRef = !isRenderProps && /*#__PURE__*/React.isValidElement(mergedChildren) && supportRef(mergedChildren);\n  var originRef = canRef ? mergedChildren.ref : null;\n  var mergedRef = useComposeRef(originRef, elementRef);\n  var getDom = function getDom() {\n    var _elementRef$current;\n    return findDOMNode(elementRef.current) || (\n    // Support `nativeElement` format\n    elementRef.current && _typeof(elementRef.current) === 'object' ? findDOMNode((_elementRef$current = elementRef.current) === null || _elementRef$current === void 0 ? void 0 : _elementRef$current.nativeElement) : null) || findDOMNode(wrapperRef.current);\n  };\n  React.useImperativeHandle(ref, function () {\n    return getDom();\n  });\n\n  // =========================== Observe ============================\n  var propsRef = React.useRef(props);\n  propsRef.current = props;\n\n  // Handler\n  var onInternalResize = React.useCallback(function (target) {\n    var _propsRef$current = propsRef.current,\n      onResize = _propsRef$current.onResize,\n      data = _propsRef$current.data;\n    var _target$getBoundingCl = target.getBoundingClientRect(),\n      width = _target$getBoundingCl.width,\n      height = _target$getBoundingCl.height;\n    var offsetWidth = target.offsetWidth,\n      offsetHeight = target.offsetHeight;\n\n    /**\n     * Resize observer trigger when content size changed.\n     * In most case we just care about element size,\n     * let's use `boundary` instead of `contentRect` here to avoid shaking.\n     */\n    var fixedWidth = Math.floor(width);\n    var fixedHeight = Math.floor(height);\n    if (sizeRef.current.width !== fixedWidth || sizeRef.current.height !== fixedHeight || sizeRef.current.offsetWidth !== offsetWidth || sizeRef.current.offsetHeight !== offsetHeight) {\n      var size = {\n        width: fixedWidth,\n        height: fixedHeight,\n        offsetWidth: offsetWidth,\n        offsetHeight: offsetHeight\n      };\n      sizeRef.current = size;\n\n      // IE is strange, right?\n      var mergedOffsetWidth = offsetWidth === Math.round(width) ? width : offsetWidth;\n      var mergedOffsetHeight = offsetHeight === Math.round(height) ? height : offsetHeight;\n      var sizeInfo = _objectSpread(_objectSpread({}, size), {}, {\n        offsetWidth: mergedOffsetWidth,\n        offsetHeight: mergedOffsetHeight\n      });\n\n      // Let collection know what happened\n      onCollectionResize === null || onCollectionResize === void 0 || onCollectionResize(sizeInfo, target, data);\n      if (onResize) {\n        // defer the callback but not defer to next frame\n        Promise.resolve().then(function () {\n          onResize(sizeInfo, target);\n        });\n      }\n    }\n  }, []);\n\n  // Dynamic observe\n  React.useEffect(function () {\n    var currentElement = getDom();\n    if (currentElement && !disabled) {\n      observe(currentElement, onInternalResize);\n    }\n    return function () {\n      return unobserve(currentElement, onInternalResize);\n    };\n  }, [elementRef.current, disabled]);\n\n  // ============================ Render ============================\n  return /*#__PURE__*/React.createElement(DomWrapper, {\n    ref: wrapperRef\n  }, canRef ? /*#__PURE__*/React.cloneElement(mergedChildren, {\n    ref: mergedRef\n  }) : mergedChildren);\n}\nvar RefSingleObserver = /*#__PURE__*/React.forwardRef(SingleObserver);\nif (process.env.NODE_ENV !== 'production') {\n  RefSingleObserver.displayName = 'SingleObserver';\n}\nexport default RefSingleObserver;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport { warning } from \"rc-util/es/warning\";\nimport SingleObserver from \"./SingleObserver\";\nimport { Collection } from \"./Collection\";\nvar INTERNAL_PREFIX_KEY = 'rc-observer-key';\nimport { _rs } from \"./utils/observerUtil\";\nexport { /** @private Test only for mock trigger resize event */\n_rs };\nfunction ResizeObserver(props, ref) {\n  var children = props.children;\n  var childNodes = typeof children === 'function' ? [children] : toArray(children);\n  if (process.env.NODE_ENV !== 'production') {\n    if (childNodes.length > 1) {\n      warning(false, 'Find more than one child node with `children` in ResizeObserver. Please use ResizeObserver.Collection instead.');\n    } else if (childNodes.length === 0) {\n      warning(false, '`children` of ResizeObserver is empty. Nothing is in observe.');\n    }\n  }\n  return childNodes.map(function (child, index) {\n    var key = (child === null || child === void 0 ? void 0 : child.key) || \"\".concat(INTERNAL_PREFIX_KEY, \"-\").concat(index);\n    return /*#__PURE__*/React.createElement(SingleObserver, _extends({}, props, {\n      key: key,\n      ref: index === 0 ? ref : undefined\n    }), child);\n  });\n}\nvar RefResizeObserver = /*#__PURE__*/React.forwardRef(ResizeObserver);\nif (process.env.NODE_ENV !== 'production') {\n  RefResizeObserver.displayName = 'ResizeObserver';\n}\nRefResizeObserver.Collection = Collection;\nexport default RefResizeObserver;"],"names":["CollectionContext","elementListeners","Map","resizeObserver","entities","forEach","entity","_elementListeners$get","target","get","listener","DomWrapper","_React$Component","_super","this","apply","arguments","key","value","props","children","SingleObserver","ref","disabled","elementRef","wrapperRef","onCollectionResize","isRenderProps","mergedChildren","sizeRef","width","height","offsetWidth","offsetHeight","canRef","originRef","mergedRef","getDom","_elementRef$current","findDOMNode","current","nativeElement","propsRef","onInternalResize","_propsRef$current","onResize","data","_target$getBoundingCl","getBoundingClientRect","fixedWidth","Math","floor","fixedHeight","size","mergedOffsetWidth","round","mergedOffsetHeight","sizeInfo","Promise","resolve","then","element","callback","currentElement","has","set","Set","observe","add","delete","unobserve","ResizeObserver","toArray","map","child","index","concat","undefined","RefResizeObserver","Collection","_ref","onBatchResize","resizeIdRef","resizeInfosRef","currentId","push","Provider"],"sourceRoot":""}