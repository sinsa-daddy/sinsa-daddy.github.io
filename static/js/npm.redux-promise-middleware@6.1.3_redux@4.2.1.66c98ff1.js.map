{"version":3,"file":"static/js/npm.redux-promise-middleware@6.1.3_redux@4.2.1.66c98ff1.js","mappings":"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","sources":["webpack://@sinsa/web/../../node_modules/.pnpm/redux-promise-middleware@6.1.3_redux@4.2.1/node_modules/redux-promise-middleware/dist/es/isPromise.js","webpack://@sinsa/web/../../node_modules/.pnpm/redux-promise-middleware@6.1.3_redux@4.2.1/node_modules/redux-promise-middleware/dist/es/index.js"],"sourcesContent":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nexport default function isPromise(value) {\n  if (value !== null && _typeof(value) === 'object') {\n    return value && typeof value.then === 'function';\n  }\n\n  return false;\n}","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport isPromise from './isPromise.js';\n/**\n * For TypeScript support: Remember to check and make sure\n * that `index.d.ts` is also up to date with the implementation.\n */\n\nexport var ActionType = {\n  Pending: 'PENDING',\n  Fulfilled: 'FULFILLED',\n  Rejected: 'REJECTED'\n};\n/**\n * Function: createPromise\n * Description: The main createPromise accepts a configuration\n * object and returns the middleware.\n */\n\nexport function createPromise() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var defaultTypes = [ActionType.Pending, ActionType.Fulfilled, ActionType.Rejected];\n  var PROMISE_TYPE_SUFFIXES = config.promiseTypeSuffixes || defaultTypes;\n  var PROMISE_TYPE_DELIMITER = config.promiseTypeDelimiter === undefined ? '_' : config.promiseTypeDelimiter;\n  return function (ref) {\n    var dispatch = ref.dispatch;\n    return function (next) {\n      return function (action) {\n        /**\n         * Instantiate variables to hold:\n         * (1) the promise\n         * (2) the data for optimistic updates\n         */\n        var promise;\n        var data;\n        /**\n         * There are multiple ways to dispatch a promise. The first step is to\n         * determine if the promise is defined:\n         * (a) explicitly (action.payload.promise is the promise)\n         * (b) implicitly (action.payload is the promise)\n         * (c) as an async function (returns a promise when called)\n         *\n         * If the promise is not defined in one of these three ways, we don't do\n         * anything and move on to the next middleware in the middleware chain.\n         */\n        // Step 1a: Is there a payload?\n\n        if (action.payload) {\n          var PAYLOAD = action.payload; // Step 1.1: Is the promise implicitly defined?\n\n          if (isPromise(PAYLOAD)) {\n            promise = PAYLOAD;\n          } // Step 1.2: Is the promise explicitly defined?\n          else if (isPromise(PAYLOAD.promise)) {\n              promise = PAYLOAD.promise;\n              data = PAYLOAD.data;\n            } // Step 1.3: Is the promise returned by an async function?\n            else if (typeof PAYLOAD === 'function' || typeof PAYLOAD.promise === 'function') {\n                promise = PAYLOAD.promise ? PAYLOAD.promise() : PAYLOAD();\n                data = PAYLOAD.promise ? PAYLOAD.data : undefined; // Step 1.3.1: Is the return of action.payload a promise?\n\n                if (!isPromise(promise)) {\n                  // If not, move on to the next middleware.\n                  return next(_objectSpread({}, action, {\n                    payload: promise\n                  }));\n                }\n              } // Step 1.4: If there's no promise, move on to the next middleware.\n              else {\n                  return next(action);\n                } // Step 1b: If there's no payload, move on to the next middleware.\n\n        } else {\n          return next(action);\n        }\n        /**\n         * Instantiate and define constants for:\n         * (1) the action type\n         * (2) the action meta\n         */\n\n\n        var TYPE = action.type;\n        var META = action.meta;\n        /**\n         * Instantiate and define constants for the action type suffixes.\n         * These are appended to the end of the action type.\n         */\n\n        var _PROMISE_TYPE_SUFFIXE = _slicedToArray(PROMISE_TYPE_SUFFIXES, 3),\n            PENDING = _PROMISE_TYPE_SUFFIXE[0],\n            FULFILLED = _PROMISE_TYPE_SUFFIXE[1],\n            REJECTED = _PROMISE_TYPE_SUFFIXE[2];\n        /**\n         * Function: getAction\n         * Description: This function constructs and returns a rejected\n         * or fulfilled action object. The action object is based off the Flux\n         * Standard Action (FSA).\n         *\n         * Given an original action with the type FOO:\n         *\n         * The rejected object model will be:\n         * {\n         *   error: true,\n         *   type: 'FOO_REJECTED',\n         *   payload: ...,\n         *   meta: ... (optional)\n         * }\n         *\n         * The fulfilled object model will be:\n         * {\n         *   type: 'FOO_FULFILLED',\n         *   payload: ...,\n         *   meta: ... (optional)\n         * }\n         */\n\n\n        var getAction = function getAction(newPayload, isRejected) {\n          return _objectSpread({\n            // Concatenate the type string property.\n            type: [TYPE, isRejected ? REJECTED : FULFILLED].join(PROMISE_TYPE_DELIMITER)\n          }, newPayload === null || typeof newPayload === 'undefined' ? {} : {\n            payload: newPayload\n          }, {}, META !== undefined ? {\n            meta: META\n          } : {}, {}, isRejected ? {\n            error: true\n          } : {});\n        };\n        /**\n         * Function: handleReject\n         * Calls: getAction to construct the rejected action\n         * Description: This function dispatches the rejected action and returns\n         * the original Error object. Please note the developer is responsible\n         * for constructing and throwing an Error object. The middleware does not\n         * construct any Errors.\n         */\n\n\n        var handleReject = function handleReject(reason) {\n          var rejectedAction = getAction(reason, true);\n          dispatch(rejectedAction);\n          throw reason;\n        };\n        /**\n         * Function: handleFulfill\n         * Calls: getAction to construct the fullfilled action\n         * Description: This function dispatches the fulfilled action and\n         * returns the success object. The success object should\n         * contain the value and the dispatched action.\n         */\n\n\n        var handleFulfill = function handleFulfill() {\n          var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n          var resolvedAction = getAction(value, false);\n          dispatch(resolvedAction);\n          return {\n            value: value,\n            action: resolvedAction\n          };\n        };\n        /**\n         * First, dispatch the pending action:\n         * This object describes the pending state of a promise and will include\n         * any data (for optimistic updates) and/or meta from the original action.\n         */\n\n\n        next(_objectSpread({\n          // Concatenate the type string.\n          type: [TYPE, PENDING].join(PROMISE_TYPE_DELIMITER)\n        }, data !== undefined ? {\n          payload: data\n        } : {}, {}, META !== undefined ? {\n          meta: META\n        } : {}));\n        /**\n         * Second, dispatch a rejected or fulfilled action and move on to the\n         * next middleware.\n         */\n\n        return promise.then(handleFulfill, handleReject);\n      };\n    };\n  };\n}\nexport default function middleware() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      dispatch = _ref.dispatch;\n\n  if (typeof dispatch === 'function') {\n    return createPromise()({\n      dispatch: dispatch\n    });\n  }\n\n  if (process && process.env && process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line no-console\n    console.warn(\"Redux Promise Middleware: As of version 6.0.0, the middleware library supports both preconfigured and custom configured middleware. To use a custom configuration, use the \\\"createPromise\\\" export and call this function with your configuration property. To use a preconfiguration, use the default export. For more help, check the upgrading guide: https://docs.psb.design/redux-promise-middleware/upgrade-guides/v6\\n\\nFor custom configuration:\\nimport { createPromise } from 'redux-promise-middleware';\\nconst promise = createPromise({ promiseTypeSuffixes: ['LOADING', 'SUCCESS', 'ERROR'] });\\napplyMiddleware(promise);\\n\\nFor preconfiguration:\\nimport promise from 'redux-promise-middleware';\\napplyMiddleware(promise);\\n    \");\n  }\n\n  return null;\n}"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","isPromise","value","then","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","Object","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","_iterableToArrayLimit","TypeError","_nonIterableRest","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread","target","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","configurable","writable","ActionType","Pending","Fulfilled","Rejected","createPromise","config","defaultTypes","PROMISE_TYPE_SUFFIXES","promiseTypeSuffixes","PROMISE_TYPE_DELIMITER","promiseTypeDelimiter","ref","dispatch","action","promise","data","payload","PAYLOAD","TYPE","type","META","meta","_PROMISE_TYPE_SUFFIXE","PENDING","FULFILLED","REJECTED","getAction","newPayload","isRejected","join","error","resolvedAction","reason","rejectedAction"],"sourceRoot":""}