{"version":3,"file":"static/js/async/tools/team-builder/page.5df1bef4.js","sources":["webpack://@sinsa/web/./src/components/AurorianSelector/InnerAurorianSelector/Box/index.tsx","webpack://@sinsa/web/./src/components/AurorianSelector/InnerAurorianSelector/Detail/index.tsx","webpack://@sinsa/web/./src/components/AurorianSelector/InnerAurorianSelector/Filter/index.tsx","webpack://@sinsa/web/./src/components/AurorianSelector/InnerAurorianSelector/index.tsx","webpack://@sinsa/web/./src/components/AurorianSelector/index.tsx","webpack://@sinsa/web/./src/routes/tools/team-builder/page.tsx"],"sourcesContent":["import { useModel } from '@modern-js/runtime/model';\nimport type { GridChildComponentProps } from 'react-window';\nimport { FixedSizeGrid } from 'react-window';\nimport {\n  chunk,\n  filter as filterAll,\n  find,\n  findKey,\n  sortBy,\n  toArray,\n} from 'lodash-es';\nimport { useCallback, useMemo } from 'react';\nimport type { AurorianNextType } from '@sinsa/schema';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { produce } from 'immer';\nimport type { InnerAurorianSelectorFilterValue } from '../Filter/types';\nimport styles from './styles.module.less';\nimport { AuroriansModel } from '@/models/aurorians';\nimport { AdaptiveAurorianCard } from '@/components/AdaptiveAurorianCard';\n\nconst MULTI_LABELS = [1, 2, 3, 4, 5] as const;\nconst SINGLE_LABELS = [1] as const;\ntype ArrayElement<ArrayType extends readonly unknown[]> =\n  ArrayType extends readonly (infer ElementType)[] ? ElementType : never;\n\ninterface AurorianSelectorBoxProps {\n  filter: InnerAurorianSelectorFilterValue;\n  column?: number;\n  selected: Record<number, AurorianNextType['aurorian_id'] | undefined>;\n  setSelected: React.Dispatch<\n    React.SetStateAction<\n      Record<number, AurorianNextType['aurorian_id'] | undefined>\n    >\n  >;\n  activeArurorianId: string | null;\n  setActiveArurorianId: React.Dispatch<React.SetStateAction<string | null>>;\n  multi?: boolean;\n}\n\ninterface CellContext {\n  selected: Record<number, AurorianNextType['aurorian_id'] | undefined>;\n  dataSource: AurorianNextType[][];\n  setSelected: React.Dispatch<\n    React.SetStateAction<\n      Record<number, AurorianNextType['aurorian_id'] | undefined>\n    >\n  >;\n  activeArurorianId: string | null;\n  setActiveArurorianId: React.Dispatch<React.SetStateAction<string | null>>;\n  getNextLabel: () => ArrayElement<\n    typeof MULTI_LABELS | typeof SINGLE_LABELS\n  > | null;\n}\n\nconst Cell: React.FC<GridChildComponentProps<CellContext>> = ({\n  columnIndex,\n  rowIndex,\n  style,\n  data: ctx,\n}) => {\n  const targetData = ctx.dataSource?.[rowIndex]?.[columnIndex];\n  if (targetData) {\n    const targetLabel = findKey(\n      ctx.selected,\n      value => value === targetData.aurorian_id,\n    );\n    return (\n      <div style={style} className={styles.CellContainer}>\n        <div\n          className={styles.CardContainer}\n          onClick={e => {\n            e.stopPropagation();\n\n            // 选择已有的\n            if (typeof targetLabel === 'string') {\n              ctx.setSelected(prev =>\n                produce(prev, draft => {\n                  delete draft[targetLabel as any];\n                }),\n              );\n              ctx.setActiveArurorianId(null);\n\n              return;\n            }\n\n            const nextLabel = ctx.getNextLabel();\n            if (typeof nextLabel === 'number') {\n              ctx.setSelected(prev => ({\n                ...prev,\n                [nextLabel]: targetData.aurorian_id,\n              }));\n              ctx.setActiveArurorianId(targetData.aurorian_id);\n            }\n          }}\n        >\n          <AdaptiveAurorianCard readOnly aurorianId={targetData.aurorian_id} />\n          {typeof targetLabel === 'string' ? (\n            <div className={styles.SelectedSingle}>{targetLabel}</div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n  return null;\n};\n\nexport const AurorianSelectorBox: React.FC<AurorianSelectorBoxProps> = ({\n  filter,\n  column = 3,\n  selected,\n  setSelected,\n  activeArurorianId,\n  setActiveArurorianId,\n  multi,\n}) => {\n  const [{ auroriansMap }] = useModel(AuroriansModel);\n\n  const dataSource = useMemo(() => {\n    const filtered =\n      filter.element === 'all'\n        ? toArray(auroriansMap)\n        : filterAll(\n            auroriansMap,\n            a =>\n              a.primary_element === filter.element ||\n              typeof find(selected, value => value === a.aurorian_id) ===\n                'string',\n          );\n\n    const sorted = sortBy(filtered, a => {\n      return (\n        -a.rarity -\n        (typeof find(selected, value => value === a.aurorian_id) === 'string' &&\n        filter.element !== 'all' &&\n        a.primary_element !== filter.element\n          ? 100\n          : 0)\n      );\n    });\n\n    const chunked = chunk(sorted, column);\n\n    return chunked;\n  }, [auroriansMap, filter.element, column, selected]);\n\n  const getNextLabel = useCallback((): ArrayElement<\n    typeof SINGLE_LABELS | typeof MULTI_LABELS\n  > | null => {\n    for (const label of multi ? MULTI_LABELS : SINGLE_LABELS) {\n      const target = selected[label];\n      if (typeof target === 'string') {\n        if (!multi) {\n          return label;\n        }\n      } else {\n        return label;\n      }\n    }\n\n    // 都找到说明已经满了\n    return null;\n  }, [selected, multi]);\n\n  const context = useMemo(() => {\n    return {\n      selected,\n      dataSource,\n      setSelected,\n      getNextLabel,\n      activeArurorianId,\n      setActiveArurorianId,\n    };\n  }, [dataSource, selected, getNextLabel, activeArurorianId]);\n\n  return (\n    <div className={styles.BoxContainer}>\n      <AutoSizer>\n        {({ height, width }) => {\n          return (\n            <FixedSizeGrid<CellContext>\n              columnCount={column}\n              columnWidth={(column >= 4 ? width - 16 : width) / column}\n              height={height}\n              rowCount={dataSource.length}\n              rowHeight={130 + 8}\n              width={width}\n              itemData={context}\n            >\n              {Cell}\n            </FixedSizeGrid>\n          );\n        }}\n      </AutoSizer>\n    </div>\n  );\n};\n","interface AurorianSelectorDetailProps {}\n\nexport const AurorianSelectorDetail: React.FC<\n  AurorianSelectorDetailProps\n> = () => {\n  return <div>detail</div>;\n};\n","import { Segmented } from 'antd';\nimport { AurorianAttributeType } from '@sinsa/schema';\nimport type { SegmentedOptions } from 'antd/es/segmented';\nimport { produce } from 'immer';\nimport type { InnerAurorianSelectorFilterValue } from './types';\nimport styles from './styles.module.less';\nimport { ElementURLMapper } from '@/components/AdaptiveAurorianCard/constants';\n\ninterface InnerAurorianSelectorFilterProps {\n  value: InnerAurorianSelectorFilterValue;\n  onChange: (v: InnerAurorianSelectorFilterValue) => void;\n}\n\nconst FilterElementOptions: SegmentedOptions<AurorianAttributeType | 'all'> = [\n  {\n    label: '全部',\n    value: 'all',\n  },\n  {\n    label: '水',\n    value: AurorianAttributeType.Water,\n    icon: (\n      <img\n        className={styles.FilterElementIcon}\n        alt={AurorianAttributeType.Water}\n        src={ElementURLMapper[AurorianAttributeType.Water]}\n      />\n    ),\n  },\n  {\n    label: '火',\n    value: AurorianAttributeType.Fire,\n    icon: (\n      <img\n        className={styles.FilterElementIcon}\n        alt={AurorianAttributeType.Fire}\n        src={ElementURLMapper[AurorianAttributeType.Fire]}\n      />\n    ),\n  },\n  {\n    label: '森',\n    value: AurorianAttributeType.Forest,\n    icon: (\n      <img\n        className={styles.FilterElementIcon}\n        alt={AurorianAttributeType.Forest}\n        src={ElementURLMapper[AurorianAttributeType.Forest]}\n      />\n    ),\n  },\n  {\n    label: '雷',\n    value: AurorianAttributeType.Thunder,\n    icon: (\n      <img\n        className={styles.FilterElementIcon}\n        alt={AurorianAttributeType.Thunder}\n        src={ElementURLMapper[AurorianAttributeType.Thunder]}\n      />\n    ),\n  },\n];\n\nexport const InnerAurorianSelectorFilter: React.FC<\n  InnerAurorianSelectorFilterProps\n> = ({ value, onChange }) => {\n  return (\n    <>\n      <Segmented\n        size=\"large\"\n        value={value.element}\n        options={FilterElementOptions}\n        onChange={nextElement => {\n          onChange(\n            produce(value, draft => {\n              draft.element = nextElement;\n            }),\n          );\n        }}\n      />\n    </>\n  );\n};\n","import { Flex, Grid } from 'antd';\nimport { useState } from 'react';\nimport type { AurorianNextType } from '@sinsa/schema';\nimport { InnerAurorianSelectorFilter } from './Filter';\nimport type { InnerAurorianSelectorFilterValue } from './Filter/types';\nimport { AurorianSelectorBox } from './Box';\nimport { AurorianSelectorDetail } from './Detail';\n\nexport interface InnerAurorianSelectorProps {\n  // 是否是快速编队\n  multi?: boolean;\n}\n\nexport const InnerAurorianSelector: React.FC<InnerAurorianSelectorProps> = ({\n  multi,\n}) => {\n  const screen = Grid.useBreakpoint();\n\n  const [filterValue, setFilterValue] =\n    useState<InnerAurorianSelectorFilterValue>(() => ({\n      element: 'all',\n    }));\n\n  const [selected, setSelected] = useState<\n    Record<number, AurorianNextType['aurorian_id'] | undefined>\n  >(() => ({}));\n  const [activeArurorianId, setActiveArurorianId] = useState<\n    AurorianNextType['aurorian_id'] | null\n  >(null);\n\n  console.log(\n    'selected',\n    selected,\n    activeArurorianId,\n    multi ? 'multi' : undefined,\n  );\n\n  return !screen.md ? (\n    <Flex vertical gap={8}>\n      <InnerAurorianSelectorFilter\n        value={filterValue}\n        onChange={setFilterValue}\n      />\n      <AurorianSelectorBox\n        selected={selected}\n        setSelected={setSelected}\n        filter={filterValue}\n        activeArurorianId={activeArurorianId}\n        setActiveArurorianId={setActiveArurorianId}\n        multi={multi}\n      />\n      <AurorianSelectorDetail />\n    </Flex>\n  ) : (\n    <Flex wrap=\"nowrap\" gap={8}>\n      <Flex vertical gap={8} style={{ flexBasis: 0, flexGrow: 1 }}>\n        <InnerAurorianSelectorFilter\n          value={filterValue}\n          onChange={setFilterValue}\n        />\n        <AurorianSelectorBox\n          selected={selected}\n          setSelected={setSelected}\n          column={!screen.lg ? 4 : 6}\n          filter={filterValue}\n          activeArurorianId={activeArurorianId}\n          setActiveArurorianId={setActiveArurorianId}\n          multi={multi}\n        />\n      </Flex>\n      <div style={{ width: '320px' }}>\n        <AurorianSelectorDetail />\n      </div>\n    </Flex>\n  );\n};\n","import { antdModalV5, create, useModal } from '@ebay/nice-modal-react';\nimport { Modal } from 'antd';\nimport type { InnerAurorianSelectorProps } from './InnerAurorianSelector';\nimport { InnerAurorianSelector } from './InnerAurorianSelector';\n\ninterface AurorianSelectorProps extends InnerAurorianSelectorProps {}\n\nexport const AurorianSelector = create<AurorianSelectorProps>(({ multi }) => {\n  const modal = useModal();\n  return (\n    <Modal\n      {...antdModalV5(modal)}\n      title={multi ? '快速编队' : '选择光灵'}\n      onOk={e => {\n        e.stopPropagation();\n        modal.resolve('hello');\n        modal.hide();\n      }}\n      width={'1000px'}\n    >\n      <InnerAurorianSelector multi={multi} />\n    </Modal>\n  );\n});\n","import { PageContainer } from '@ant-design/pro-components';\nimport { useModal } from '@ebay/nice-modal-react';\nimport { Button } from 'antd';\nimport { AurorianSelector } from '@/components/AurorianSelector';\n\nconst TeamBuilder: React.FC = () => {\n  const modal = useModal(AurorianSelector);\n  return (\n    <PageContainer title=\"编队分享\">\n      <div>\n        <Button\n          onClick={() => {\n            modal\n              .show({\n                multi: true,\n              })\n              .then(data => {\n                console.log('resolved', data);\n              });\n          }}\n        >\n          快速编队\n        </Button>\n        <Button\n          onClick={() => {\n            modal.show({}).then(data => {\n              console.log('resolved', data);\n            });\n          }}\n        >\n          替换光灵\n        </Button>\n      </div>\n    </PageContainer>\n  );\n};\n\nexport default TeamBuilder;\n"],"names":["MULTI_LABELS","SINGLE_LABELS","Cell","columnIndex","rowIndex","style","data","ctx","targetData","dataSource","targetLabel","findKey","selected","value","aurorian_id","className","onClick","e","stopPropagation","setSelected","prev","produce","draft","setActiveArurorianId","nextLabel","getNextLabel","AdaptiveAurorianCard","readOnly","aurorianId","AurorianSelectorBox","filter","column","activeArurorianId","multi","auroriansMap","useModel","AuroriansModel","useMemo","filtered","element","toArray","a","primary_element","find","sorted","sortBy","rarity","chunk","useCallback","label","context","height","width","FixedSizeGrid","columnCount","columnWidth","rowCount","length","rowHeight","itemData","AurorianSelectorDetail","FilterElementOptions","AurorianAttributeType","icon","alt","src","ElementURLMapper","InnerAurorianSelectorFilter","onChange","Segmented","size","options","nextElement","InnerAurorianSelector","screen","Grid","filterValue","setFilterValue","useState","console","log","undefined","md","Flex","wrap","gap","vertical","flexBasis","flexGrow","lg","AurorianSelector","create","modal","useModal","Modal","antdModalV5","title","onOk","resolve","hide","PageContainer","Button","show","then"],"mappings":"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"}