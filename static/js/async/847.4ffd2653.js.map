{"version":3,"file":"static/js/async/847.4ffd2653.js","sources":["webpack://@sinsa/web/./src/components/AurorianSelector/InnerAurorianSelector/Box/index.tsx","webpack://@sinsa/web/./src/components/AurorianSelector/InnerAurorianSelector/Detail/index.tsx","webpack://@sinsa/web/./src/components/AurorianSelector/InnerAurorianSelector/Filter/index.tsx","webpack://@sinsa/web/./src/components/AurorianSelector/index.tsx","webpack://@sinsa/web/./src/components/UploadForm/AurorianTallCard/constants.ts","webpack://@sinsa/web/./src/components/UploadForm/AurorianTallCard/utils/getDefaultBreakthrough.ts","webpack://@sinsa/web/./src/components/UploadForm/CopilotSelector/utils/getDefaultBreakthrough.ts"],"sourcesContent":["import { useModel } from '@modern-js/runtime/model';\nimport type { GridChildComponentProps } from 'react-window';\nimport { FixedSizeGrid } from 'react-window';\nimport {\n  chunk,\n  filter as filterAll,\n  find,\n  findKey,\n  sortBy,\n  toArray,\n} from 'lodash-es';\nimport { useCallback, useMemo } from 'react';\nimport type { AurorianNextType, AurorianRequirementType } from '@sinsa/schema';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { produce } from 'immer';\nimport type { InnerAurorianSelectorFilterValue } from '../Filter/types';\nimport styles from './styles.module.less';\nimport { AuroriansModel } from '@/models/aurorians';\nimport { AdaptiveAurorianCard } from '@/components/AdaptiveAurorianCard';\n\nconst MULTI_LABELS = [1, 2, 3, 4, 5] as const;\nconst SINGLE_LABELS = [1] as const;\ntype ArrayElement<ArrayType extends readonly unknown[]> =\n  ArrayType extends readonly (infer ElementType)[] ? ElementType : never;\n\ninterface AurorianSelectorBoxProps {\n  filter: InnerAurorianSelectorFilterValue;\n  column?: number;\n  selected: Record<number, AurorianNextType['aurorian_id'] | undefined>;\n  setSelected: React.Dispatch<\n    React.SetStateAction<\n      Record<number, AurorianNextType['aurorian_id'] | undefined>\n    >\n  >;\n  activeArurorianId: string | null;\n  setActiveArurorianId: React.Dispatch<React.SetStateAction<string | null>>;\n  multi?: boolean;\n  requireMap: Record<string, AurorianRequirementType | undefined>;\n}\n\ninterface CellContext {\n  selected: Record<number, AurorianNextType['aurorian_id'] | undefined>;\n  dataSource: AurorianNextType[][];\n  setSelected: React.Dispatch<\n    React.SetStateAction<\n      Record<number, AurorianNextType['aurorian_id'] | undefined>\n    >\n  >;\n  activeArurorianId: string | null;\n  setActiveArurorianId: React.Dispatch<React.SetStateAction<string | null>>;\n  getNextLabel: () => ArrayElement<\n    typeof MULTI_LABELS | typeof SINGLE_LABELS\n  > | null;\n  requireMap: Record<string, AurorianRequirementType | undefined>;\n}\n\nconst Cell: React.FC<GridChildComponentProps<CellContext>> = ({\n  columnIndex,\n  rowIndex,\n  style,\n  data: ctx,\n}) => {\n  const targetData = ctx.dataSource?.[rowIndex]?.[columnIndex];\n  if (targetData) {\n    const targetLabel = findKey(\n      ctx.selected,\n      value => value === targetData.aurorian_id,\n    );\n    const targetRequire = ctx.requireMap[targetData.aurorian_id];\n    return (\n      <div style={style} className={styles.CellContainer}>\n        <div\n          className={styles.CardContainer}\n          onClick={e => {\n            e.stopPropagation();\n\n            // 选择已有的\n            if (typeof targetLabel === 'string') {\n              ctx.setSelected(prev =>\n                produce(prev, draft => {\n                  delete draft[targetLabel as any];\n                }),\n              );\n              ctx.setActiveArurorianId(null);\n\n              return;\n            }\n\n            const nextLabel = ctx.getNextLabel();\n            if (typeof nextLabel === 'number') {\n              ctx.setSelected(prev => ({\n                ...prev,\n                [nextLabel]: targetData.aurorian_id,\n              }));\n              ctx.setActiveArurorianId(targetData.aurorian_id);\n            }\n          }}\n        >\n          <AdaptiveAurorianCard\n            readOnly\n            aurorianId={targetData.aurorian_id}\n            remark={targetRequire?.remark}\n            breakthrough={targetRequire?.breakthrough}\n          />\n          {typeof targetLabel === 'string' ? (\n            <div className={styles.SelectedSingle}>{targetLabel}</div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n  return null;\n};\n\nexport const AurorianSelectorBox: React.FC<AurorianSelectorBoxProps> = ({\n  filter,\n  column = 3,\n  selected,\n  setSelected,\n  activeArurorianId,\n  setActiveArurorianId,\n  multi,\n  requireMap,\n}) => {\n  const [{ auroriansMap }] = useModel(AuroriansModel);\n\n  const dataSource = useMemo(() => {\n    const filtered =\n      filter.element === 'all'\n        ? toArray(auroriansMap)\n        : filterAll(\n            auroriansMap,\n            a =>\n              a.primary_element === filter.element ||\n              typeof find(selected, value => value === a.aurorian_id) ===\n                'string',\n          );\n\n    const sorted = sortBy(filtered, a => {\n      return (\n        -a.rarity -\n        (typeof find(selected, value => value === a.aurorian_id) === 'string' &&\n        filter.element !== 'all' &&\n        a.primary_element !== filter.element\n          ? 100\n          : 0)\n      );\n    });\n\n    const chunked = chunk(sorted, column);\n\n    return chunked;\n  }, [auroriansMap, filter.element, column, selected]);\n\n  const getNextLabel = useCallback((): ArrayElement<\n    typeof SINGLE_LABELS | typeof MULTI_LABELS\n  > | null => {\n    for (const label of multi ? MULTI_LABELS : SINGLE_LABELS) {\n      const target = selected[label];\n      if (typeof target === 'string') {\n        if (!multi) {\n          return label;\n        }\n      } else {\n        return label;\n      }\n    }\n\n    // 都找到说明已经满了\n    return null;\n  }, [selected, multi]);\n\n  const context = useMemo(() => {\n    return {\n      selected,\n      dataSource,\n      setSelected,\n      getNextLabel,\n      activeArurorianId,\n      setActiveArurorianId,\n      requireMap,\n    };\n  }, [dataSource, selected, getNextLabel, activeArurorianId, requireMap]);\n\n  return (\n    <div className={styles.BoxContainer}>\n      <AutoSizer>\n        {({ height, width }) => {\n          return (\n            <FixedSizeGrid<CellContext>\n              columnCount={column}\n              columnWidth={(column >= 4 ? width - 16 : width) / column}\n              height={height}\n              rowCount={dataSource.length}\n              rowHeight={130 + 8}\n              width={width}\n              itemData={context}\n            >\n              {Cell}\n            </FixedSizeGrid>\n          );\n        }}\n      </AutoSizer>\n    </div>\n  );\n};\n","import { useModel } from '@modern-js/runtime/model';\nimport type { AurorianNextType, AurorianRequirementType } from '@sinsa/schema';\nimport { useEffect, useMemo } from 'react';\nimport { Form, InputNumber, Radio, Rate, Result, Slider } from 'antd';\nimport { produce } from 'immer';\nimport { SmilingFace } from '@icon-park/react';\nimport styles from './styles.module.less';\nimport { AuroriansModel } from '@/models/aurorians';\nimport { AdaptiveAurorianCard } from '@/components/AdaptiveAurorianCard';\nimport { getDefaultBreakthrough } from '@/components/UploadForm/CopilotSelector/utils/getDefaultBreakthrough';\nimport { getDefaultTooltips } from '@/components/UploadForm/AurorianTallCard/utils/getDefaultBreakthrough';\nimport {\n  LEVEL_MARKS,\n  RFN_OPTIONS,\n} from '@/components/UploadForm/AurorianTallCard/constants';\n\ninterface AurorianSelectorDetailProps {\n  activeArurorianId: string | null;\n  value: Record<\n    AurorianNextType['aurorian_id'],\n    AurorianRequirementType | undefined\n  >;\n  onChange: React.Dispatch<\n    React.SetStateAction<Record<string, AurorianRequirementType | undefined>>\n  >;\n}\n\nexport const AurorianSelectorDetail: React.FC<AurorianSelectorDetailProps> = ({\n  value,\n  onChange,\n  activeArurorianId,\n}) => {\n  const [{ auroriansMap }] = useModel(AuroriansModel);\n  const aurorian = useMemo(\n    () =>\n      typeof activeArurorianId === 'string'\n        ? auroriansMap[activeArurorianId]\n        : undefined,\n    [auroriansMap, activeArurorianId],\n  );\n\n  const targetRequire =\n    (activeArurorianId && value[activeArurorianId]) ||\n    ({\n      aurorian_id: activeArurorianId,\n      breakthrough: aurorian ? getDefaultBreakthrough(aurorian.rarity) : 0,\n    } as AurorianRequirementType);\n\n  useEffect(() => {\n    if (activeArurorianId && aurorian?.rarity) {\n      const target = value[activeArurorianId];\n      if (\n        aurorian.rarity >= 4 &&\n        Object.keys(target?.remark?.level ?? {}).length === 0\n      ) {\n        onChange({\n          ...value,\n          [activeArurorianId]: {\n            ...targetRequire,\n            remark: {\n              level: {\n                asc: 3,\n                lv: 80,\n                eq: 0,\n                rfn: 0,\n                aff: 0,\n              },\n            },\n          },\n        });\n      } else {\n        onChange({\n          ...value,\n          [activeArurorianId]: {\n            ...targetRequire,\n          },\n        });\n      }\n    }\n  }, [activeArurorianId, value, aurorian?.rarity]);\n\n  if (!activeArurorianId) {\n    return (\n      <Result\n        icon={<SmilingFace size={48} />}\n        title=\"欢迎使用\"\n        subTitle=\"请从光灵列表中选择一个光灵以配置\"\n      />\n    );\n  }\n\n  return aurorian ? (\n    <div className={styles.Container}>\n      <div className={styles.CardContainer}>\n        <AdaptiveAurorianCard\n          readOnly\n          aurorianId={activeArurorianId}\n          remark={targetRequire.remark}\n          breakthrough={targetRequire.breakthrough}\n        />\n      </div>\n      <Form>\n        <Form.Item label=\"突破数\">\n          <Rate\n            value={targetRequire.breakthrough}\n            count={aurorian.rarity}\n            onChange={newBk => {\n              onChange?.({\n                ...value,\n                [activeArurorianId]: produce(targetRequire, draft => {\n                  draft.breakthrough = newBk;\n                }),\n              });\n            }}\n            tooltips={getDefaultTooltips(aurorian.rarity)}\n          />\n        </Form.Item>\n        {aurorian?.rarity && aurorian.rarity >= 4 ? (\n          <Form.Item\n            label=\"光灵等级\"\n            extra={\n              <InputNumber\n                prefix=\"Lv.\"\n                className={styles.LvInput}\n                value={targetRequire.remark?.level?.lv}\n                min={1}\n                max={80}\n                onChange={newLv => {\n                  onChange?.({\n                    ...value,\n                    [activeArurorianId]: {\n                      ...targetRequire,\n                      remark: produce(targetRequire.remark ?? {}, draft => {\n                        if (draft.level && typeof newLv === 'number') {\n                          draft.level.lv = newLv;\n                          if (newLv < 80) {\n                            draft.level.rfn = 0;\n                          }\n                        }\n                      }),\n                    },\n                  });\n                }}\n              />\n            }\n          >\n            <Slider\n              value={targetRequire.remark?.level?.lv}\n              min={1}\n              max={80}\n              marks={LEVEL_MARKS}\n              onChange={newLv => {\n                onChange?.({\n                  ...value,\n                  [activeArurorianId]: {\n                    ...targetRequire,\n                    remark: produce(targetRequire.remark ?? {}, draft => {\n                      if (draft.level) {\n                        draft.level.lv = newLv;\n                        if (newLv < 80) {\n                          draft.level.rfn = 0;\n                        }\n                      }\n                    }),\n                  },\n                });\n              }}\n              step={null}\n            />\n          </Form.Item>\n        ) : null}\n        {targetRequire.remark?.level?.lv === 80 ? (\n          <Form.Item label=\"装备精炼\">\n            <Radio.Group\n              optionType=\"button\"\n              value={targetRequire.remark?.level?.rfn ?? 0}\n              options={RFN_OPTIONS}\n              onChange={e => {\n                onChange?.({\n                  ...value,\n                  [activeArurorianId]: {\n                    ...targetRequire,\n                    remark: produce(targetRequire.remark ?? {}, draft => {\n                      if (draft.level) {\n                        draft.level.rfn = e.target.value;\n                      }\n                    }),\n                  },\n                });\n              }}\n            />\n          </Form.Item>\n        ) : null}\n      </Form>\n    </div>\n  ) : (\n    <div>未找到 {activeArurorianId} 的光灵</div>\n  );\n};\n","import { Segmented } from 'antd';\nimport { AurorianAttributeType } from '@sinsa/schema';\nimport type { SegmentedOptions } from 'antd/es/segmented';\nimport { produce } from 'immer';\nimport type { InnerAurorianSelectorFilterValue } from './types';\nimport styles from './styles.module.less';\nimport { ElementURLMapper } from '@/components/AdaptiveAurorianCard/constants';\n\ninterface InnerAurorianSelectorFilterProps {\n  value: InnerAurorianSelectorFilterValue;\n  onChange: (v: InnerAurorianSelectorFilterValue) => void;\n}\n\nconst FilterElementOptions: SegmentedOptions<AurorianAttributeType | 'all'> = [\n  {\n    label: '全部',\n    value: 'all',\n  },\n  {\n    label: '水',\n    value: AurorianAttributeType.Water,\n    icon: (\n      <img\n        className={styles.FilterElementIcon}\n        alt={AurorianAttributeType.Water}\n        src={ElementURLMapper[AurorianAttributeType.Water]}\n      />\n    ),\n  },\n  {\n    label: '火',\n    value: AurorianAttributeType.Fire,\n    icon: (\n      <img\n        className={styles.FilterElementIcon}\n        alt={AurorianAttributeType.Fire}\n        src={ElementURLMapper[AurorianAttributeType.Fire]}\n      />\n    ),\n  },\n  {\n    label: '森',\n    value: AurorianAttributeType.Forest,\n    icon: (\n      <img\n        className={styles.FilterElementIcon}\n        alt={AurorianAttributeType.Forest}\n        src={ElementURLMapper[AurorianAttributeType.Forest]}\n      />\n    ),\n  },\n  {\n    label: '雷',\n    value: AurorianAttributeType.Thunder,\n    icon: (\n      <img\n        className={styles.FilterElementIcon}\n        alt={AurorianAttributeType.Thunder}\n        src={ElementURLMapper[AurorianAttributeType.Thunder]}\n      />\n    ),\n  },\n];\n\nexport const InnerAurorianSelectorFilter: React.FC<\n  InnerAurorianSelectorFilterProps\n> = ({ value, onChange }) => {\n  return (\n    <>\n      <Segmented\n        size=\"large\"\n        value={value.element}\n        options={FilterElementOptions}\n        onChange={nextElement => {\n          onChange(\n            produce(value, draft => {\n              draft.element = nextElement;\n            }),\n          );\n        }}\n      />\n    </>\n  );\n};\n","import { antdDrawerV5, create, useModal } from '@ebay/nice-modal-react';\nimport { Flex, Grid, Drawer, Space, Button, Select } from 'antd';\nimport type { AurorianNextType, AurorianRequirementType } from '@sinsa/schema';\nimport { useMemo, useState } from 'react';\nimport { useModel } from '@modern-js/runtime/model';\nimport { last } from 'lodash-es';\nimport { AurorianSelectorBox } from './InnerAurorianSelector/Box';\nimport { AurorianSelectorDetail } from './InnerAurorianSelector/Detail';\nimport { InnerAurorianSelectorFilter } from './InnerAurorianSelector/Filter';\nimport type { InnerAurorianSelectorFilterValue } from './InnerAurorianSelector/Filter/types';\nimport { AuroriansModel, filterAuroriansOption } from '@/models/aurorians';\n\ninterface AurorianSelectorProps {\n  // 是否是快速编队\n  multi?: boolean;\n  initialValue?: AurorianRequirementType[];\n}\n\nfunction getResolve(\n  selected: Record<number, string | undefined>,\n  requireMap: Record<string, AurorianRequirementType | undefined>,\n): AurorianRequirementType[] {\n  const order = Object.entries(selected)\n    .toSorted((a, b) => Number(a[0]) - Number(b[0]))\n    .filter(item => typeof item[1] === 'string')\n    .map(item => item[1]!)\n    .map(aid => requireMap[aid])\n    .filter((item): item is AurorianRequirementType => Boolean(item));\n  return order;\n}\n\nexport const AurorianSelector = create<AurorianSelectorProps>(\n  ({ multi, initialValue }) => {\n    const modal = useModal();\n\n    const screen = Grid.useBreakpoint();\n\n    const [filterValue, setFilterValue] =\n      useState<InnerAurorianSelectorFilterValue>(() => ({\n        element: 'all',\n      }));\n\n    const [selected, setSelected] = useState<\n      Record<number, AurorianNextType['aurorian_id'] | undefined>\n    >(() => {\n      const result: Record<\n        number,\n        AurorianNextType['aurorian_id'] | undefined\n      > = {};\n      if (initialValue) {\n        for (let i = 0; i < initialValue.length ?? 0; i++) {\n          result[i + 1] = initialValue[i].aurorian_id;\n        }\n      }\n      return result;\n    });\n    const [requireMap, setRequireMap] = useState<\n      Record<\n        AurorianNextType['aurorian_id'],\n        AurorianRequirementType | undefined\n      >\n    >(() => {\n      const result: Record<\n        AurorianNextType['aurorian_id'],\n        AurorianRequirementType | undefined\n      > = {};\n      if (initialValue) {\n        for (const rq of initialValue) {\n          result[rq.aurorian_id] = rq;\n        }\n      }\n      return result;\n    });\n    const [activeArurorianId, setActiveArurorianId] = useState<\n      AurorianNextType['aurorian_id'] | null\n    >(null);\n\n    const isLarge = screen.md;\n\n    const resolvedValue = useMemo(() => {\n      return getResolve(selected, requireMap);\n    }, [selected, requireMap]);\n    const [{ auroriansOptions }] = useModel(AuroriansModel);\n\n    const inputContent = (\n      <Select\n        mode=\"multiple\"\n        options={auroriansOptions}\n        placeholder=\"支持按拼音搜索, 比如 ad 可以搜到 安顿\"\n        showSearch\n        allowClear={false}\n        value={resolvedValue?.map(item => item.aurorian_id)}\n        filterOption={filterAuroriansOption}\n        onChange={newVal => {\n          setSelected(\n            newVal.slice(0, 5).reduce((acc, next, index) => {\n              return {\n                ...acc,\n                [index + 1]: next,\n              };\n            }, {}),\n          );\n\n          const lastEle = last(newVal);\n          if (lastEle) {\n            setActiveArurorianId(lastEle);\n          }\n        }}\n      />\n    );\n\n    return (\n      <Drawer\n        {...antdDrawerV5(modal)}\n        bodyStyle={{ padding: 0 }}\n        placement=\"bottom\"\n        title={multi ? '快速编队' : '选择光灵'}\n        // onOk={e => {\n        //   e.stopPropagation();\n        //   const resolveValue = getResolve(selected, requireMap);\n        //   modal.resolve(resolveValue);\n        //   modal.hide();\n        // }}\n        height={isLarge ? 'calc(50vh + 120px)' : '95vh'}\n        extra={\n          <Space>\n            <Button\n              type=\"primary\"\n              onClick={e => {\n                e.stopPropagation();\n                modal.resolve(resolvedValue);\n                modal.hide();\n              }}\n            >\n              完成\n            </Button>\n          </Space>\n        }\n        // width={'1080px'}\n      >\n        {!isLarge ? (\n          <Flex vertical gap={8}>\n            {inputContent}\n            <InnerAurorianSelectorFilter\n              value={filterValue}\n              onChange={setFilterValue}\n            />\n            <AurorianSelectorBox\n              selected={selected}\n              setSelected={setSelected}\n              filter={filterValue}\n              activeArurorianId={activeArurorianId}\n              setActiveArurorianId={setActiveArurorianId}\n              multi={multi}\n              requireMap={requireMap}\n            />\n            <AurorianSelectorDetail\n              activeArurorianId={activeArurorianId}\n              value={requireMap}\n              onChange={setRequireMap}\n            />\n          </Flex>\n        ) : (\n          <Flex wrap=\"nowrap\" gap={8}>\n            <Flex vertical gap={8} style={{ flexBasis: 0, flexGrow: 1 }}>\n              {inputContent}\n              <InnerAurorianSelectorFilter\n                value={filterValue}\n                onChange={setFilterValue}\n              />\n              <AurorianSelectorBox\n                selected={selected}\n                setSelected={setSelected}\n                column={!screen.lg ? 4 : 6}\n                filter={filterValue}\n                activeArurorianId={activeArurorianId}\n                setActiveArurorianId={setActiveArurorianId}\n                multi={multi}\n                requireMap={requireMap}\n              />\n            </Flex>\n            <div style={{ width: '400px' }}>\n              <AurorianSelectorDetail\n                activeArurorianId={activeArurorianId}\n                value={requireMap}\n                onChange={setRequireMap}\n              />\n            </div>\n          </Flex>\n        )}\n      </Drawer>\n    );\n  },\n);\n","export const ASC_OPTIONS = [\n  { label: '觉醒三', value: 3 },\n  { label: '觉醒二', value: 2 },\n  { label: '觉醒一', value: 1 },\n  { label: '未觉醒', value: 0 },\n];\n\nexport const RFN_OPTIONS = [\n  { label: '未精炼', value: 0 },\n  { label: '精炼Ⅰ', value: 1 },\n  { label: '精炼Ⅱ', value: 2 },\n  { label: '精炼Ⅲ', value: 3 },\n];\n\nexport const LEVEL_MARKS = {\n  1: '1',\n  10: '10',\n  20: '20',\n  30: '30',\n  40: '40',\n  50: '50',\n  60: '60',\n  80: '80',\n};\n","import { memoize } from 'lodash-es';\n\nexport const getDefaultTooltips = memoize((rarity: number) => {\n  switch (rarity) {\n    case 6:\n      return ['零', '零', '一', '一', '一', '满'].map(txt => `${txt}破`);\n    case 5:\n      return ['零', '一', '一', '一', '满'].map(txt => `${txt}破`);\n    case 4:\n      return ['零', '零', '零', '满'].map(txt => `${txt}破`);\n    case 3:\n      return ['零', '零', '满'].map(txt => `${txt}破`);\n    case 2:\n      return ['零', '满'].map(txt => `${txt}破`);\n    case 1:\n      return ['满'].map(txt => `${txt}破`);\n    default:\n      return [];\n  }\n});\n","import { memoize } from 'lodash-es';\n\nexport const getDefaultBreakthrough = memoize((rarity: number) => {\n  switch (rarity) {\n    case 6:\n      return 2;\n    case 5:\n      return 1;\n    case 4:\n      return 4;\n    case 3:\n      return 3;\n    case 2:\n      return 2;\n    case 1:\n      return 1;\n    default:\n      return 0;\n  }\n});\n"],"names":["MULTI_LABELS","SINGLE_LABELS","Cell","columnIndex","rowIndex","style","data","ctx","targetData","dataSource","targetLabel","findKey","selected","value","aurorian_id","targetRequire","requireMap","className","onClick","e","stopPropagation","setSelected","prev","produce","draft","setActiveArurorianId","nextLabel","getNextLabel","AdaptiveAurorianCard","readOnly","aurorianId","remark","breakthrough","AurorianSelectorBox","filter","column","activeArurorianId","multi","auroriansMap","useModel","AuroriansModel","useMemo","filtered","element","toArray","a","primary_element","find","sorted","sortBy","rarity","chunk","useCallback","label","context","height","width","FixedSizeGrid","columnCount","columnWidth","rowCount","length","rowHeight","itemData","AurorianSelectorDetail","onChange","aurorian","undefined","getDefaultBreakthrough","useEffect","target","Object","keys","level","asc","lv","eq","rfn","aff","Form","Rate","count","newBk","tooltips","getDefaultTooltips","extra","InputNumber","prefix","min","max","newLv","Slider","marks","LEVEL_MARKS","step","Radio","optionType","options","RFN_OPTIONS","Result","icon","SmilingFace","size","title","subTitle","FilterElementOptions","AurorianAttributeType","alt","src","ElementURLMapper","InnerAurorianSelectorFilter","Segmented","nextElement","AurorianSelector","create","initialValue","modal","useModal","screen","Grid","filterValue","setFilterValue","useState","result","i","setRequireMap","rq","isLarge","md","resolvedValue","entries","toSorted","b","Number","item","map","aid","Boolean","auroriansOptions","inputContent","Select","mode","placeholder","showSearch","allowClear","filterOption","filterAuroriansOption","newVal","slice","reduce","acc","next","index","lastEle","last","Drawer","antdDrawerV5","bodyStyle","padding","placement","Space","Button","type","resolve","hide","Flex","wrap","gap","vertical","flexBasis","flexGrow","lg","ASC_OPTIONS","memoize","txt"],"mappings":"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"}