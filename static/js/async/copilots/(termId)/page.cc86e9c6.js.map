{"version":3,"file":"static/js/async/copilots/(termId)/page.cc86e9c6.js","sources":["./src/routes/copilots/[termId]/page.tsx","./src/views/CopilotsView/CopilotListView/index.tsx","./src/views/CopilotsView/index.tsx"],"sourcesContent":["/* eslint-disable no-nested-ternary */\nimport { useRequest } from 'ahooks';\nimport { PageContainer } from '@ant-design/pro-components';\nimport { useMemo } from 'react';\nimport { TermNotFound } from '@/components/TermNotFound';\nimport { TermChanger, useTargetTermFromParams } from '@/components/TermChanger';\nimport { getCopilots } from '@/services/http';\nimport { RoutePath } from '@/views/GlobalLayout/constants';\nimport { CopilotsView } from '@/views/CopilotsView';\n\nconst CopilotsPage: React.FC = () => {\n  const { targetTerm: currentTerm } = useTargetTermFromParams();\n\n  const { data, error, loading } = useRequest(\n    () =>\n      currentTerm?.term_id\n        ? getCopilots(currentTerm.term_id)\n        : (Promise.resolve({}) as ReturnType<typeof getCopilots>),\n    {\n      ready: Boolean(currentTerm?.term_id),\n      refreshDeps: [currentTerm?.term_id],\n    },\n  );\n\n  const copilots = useMemo(() => Object.values(data ?? []), [data]);\n\n  return (\n    <PageContainer\n      content={<TermChanger pathFn={RoutePath.Copilots} />}\n      title=\"作业全览\"\n      loading={loading}\n    >\n      {error ? (\n        <TermNotFound />\n      ) : currentTerm ? (\n        <CopilotsView currentTerm={currentTerm} copilots={copilots} />\n      ) : (\n        <TermNotFound />\n      )}\n    </PageContainer>\n  );\n};\n\nexport default CopilotsPage;\n","import { useMemo, useRef, useState } from 'react';\nimport { Card, List } from 'antd';\nimport type { CopilotNextType, TermNextType } from '@sinsa/schema';\nimport styles from './styles.module.less';\nimport { CopilotBlock } from '@/components/SolutionCard/CopilotBlock';\n\nconst getRowKey = (c: CopilotNextType) => c.copilot_id;\n\ninterface CopilotListViewProps {\n  currentTerm: TermNextType;\n  dataSource: CopilotNextType[];\n}\n\nexport const CopilotListView: React.FC<CopilotListViewProps> = ({\n  currentTerm,\n  dataSource,\n}) => {\n  const inViewRef = useRef<HTMLDivElement>(null);\n  const [current, setCurrent] = useState(1);\n\n  const pagination = useMemo(() => {\n    return {\n      align: 'center' as const,\n      defaultPageSize: 5,\n      current,\n      onChange(page: number) {\n        setCurrent(page);\n        window.scrollTo({\n          top: inViewRef.current!.offsetTop,\n          behavior: 'smooth',\n        });\n      },\n      showSizeChanger: false,\n      showTotal(total: number): string {\n        return `总共 ${total} 条作业`;\n      },\n    };\n  }, [current]);\n\n  return (\n    <>\n      <div className={styles.Mount} ref={inViewRef} />\n      <Card className={styles.CopilotCard}>\n        <List<CopilotNextType>\n          dataSource={dataSource}\n          pagination={pagination}\n          rowKey={getRowKey}\n          renderItem={item => (\n            <CopilotBlock\n              className={styles.ControlledCopilotBlock}\n              copilot={item}\n              currentTerm={currentTerm}\n              readOnly\n            />\n          )}\n        />\n      </Card>\n    </>\n  );\n};\n","import { Flex } from 'antd';\nimport type { CopilotNextType, TermNextType } from '@sinsa/schema';\nimport { CopilotListView } from './CopilotListView';\n\ninterface CopilotsViewProps {\n  copilots: CopilotNextType[];\n  currentTerm: TermNextType;\n}\n\nexport const CopilotsView: React.FC<CopilotsViewProps> = ({\n  copilots,\n  currentTerm,\n}) => {\n  return (\n    <Flex vertical gap=\"middle\">\n      <CopilotListView dataSource={copilots} currentTerm={currentTerm} />\n    </Flex>\n  );\n};\n"],"names":["targetTerm","currentTerm","useTargetTermFromParams","data","error","loading","useRequest","term_id","getCopilots","Promise","resolve","ready","Boolean","refreshDeps","copilots","useMemo","Object","values","PageContainer","content","TermChanger","pathFn","RoutePath","title","TermNotFound","CopilotsView","getRowKey","c","copilot_id","CopilotListView","dataSource","inViewRef","useRef","current","setCurrent","useState","pagination","align","defaultPageSize","onChange","page","window","scrollTo","top","offsetTop","behavior","showSizeChanger","showTotal","total","className","ref","Card","List","rowKey","renderItem","item","CopilotBlock","copilot","readOnly","Flex","vertical","gap"],"mappings":";ujBA2CA,EAjC+B,KAC7B,GAAM,CAAEA,WAAYC,CAAW,CAAE,CAAG,KAAAC,uBAAA,IAE9B,CAAEC,KAAAA,CAAI,CAAEC,MAAAA,CAAK,CAAEC,QAAAA,CAAO,CAAE,CAAG,KAAAC,UAAA,EAC/B,IACEL,GAAaM,QACT,KAAAC,WAAA,EAAYP,EAAYM,OAAO,EAC9BE,QAAQC,OAAO,CAAC,CAAC,GACxB,CACEC,MAAOC,CAAAA,CAAQX,GAAaM,QAC5BM,YAAa,CAACZ,GAAaM,QAAQ,AACrC,GAGIO,EAAW,KAAAC,OAAA,EAAQ,IAAMC,OAAOC,MAAM,CAACd,GAAQ,EAAE,EAAG,CAACA,EAAK,EAEhE,MACE,UAAC,EAAAe,aAAa,EACZC,QAAS,UAAC,EAAAC,WAAW,EAACC,OAAQ,EAAAC,SAAA,SAAkB,GAChDC,MAAM,2BACNlB,QAASA,WAERD,EACC,UAAC,EAAAoB,YAAY,KACXvB,EACF,UAAC,EAAAwB,YAAY,EAACxB,YAAaA,EAAaa,SAAUA,IAElD,UAAC,EAAAU,YAAY,MAIrB,sKCnCA,IAAME,EAAY,AAACC,GAAuBA,EAAEC,UAAU,CAOzCC,EAAkD,AAAC,QAC9D5B,YAAAA,CAAW,CACX6B,WAAAA,CAAU,CACX,GACOC,EAAY,KAAAC,MAAA,EAAuB,MACnC,CAACC,EAASC,EAAW,CAAG,KAAAC,QAAA,EAAS,GAEjCC,EAAa,KAAArB,OAAA,EAAQ,IAClB,EACLsB,MAAO,SACPC,gBAAiB,EACjBL,QAAAA,EACAM,SAASC,CAAY,EACnBN,EAAWM,GACXC,OAAOC,QAAQ,CAAC,CACdC,IAAKZ,EAAUE,OAAO,CAAEW,SAAS,CACjCC,SAAU,QACZ,EACF,EACAC,gBAAiB,GACjBC,UAAAA,AAAUC,GACD,CAAC,iBAAG,EAAEA,EAAM,yBAAI,CAAC,AAE5B,GACC,CAACf,EAAQ,EAEZ,MACE,iCACE,UAAC,OAAIgB,UAAW,OAAY,CAAEC,IAAKnB,IACnC,UAAC,EAAAoB,IAAI,EAACF,UAAW,aAAkB,UACjC,UAAC,EAAAG,IAAI,EACHtB,WAAYA,EACZM,WAAYA,EACZiB,OAAQ3B,EACR4B,WAAY,AAAAC,GACV,UAAC,EAAAC,YAAY,EACXP,UAAW,wBAA6B,CACxCQ,QAASF,EACTtD,YAAaA,EACbyD,SAAQ,WAOtB,uIClDO,IAAMjC,EAA4C,AAAC,QACxDX,SAAAA,CAAQ,CACRb,YAAAA,CAAW,CACZ,GACC,MACE,UAAC,EAAA0D,IAAI,EAACC,SAAQ,GAACC,IAAI,kBACjB,UAAC,EAAAhC,eAAe,EAACC,WAAYhB,EAAUb,YAAaA,KAG1D"}