{"version":3,"file":"static/js/async/copilots/(termId)/page.bddd6e31.js","sources":["./src/components/BossCard/index.tsx","./src/routes/copilots/[termId]/page.tsx","./src/views/CopilotsView/CopilotListView/CopilotSortContext/index.tsx","./src/views/CopilotsView/CopilotListView/CopilotSortContext/select.tsx","./src/views/CopilotsView/CopilotListView/index.tsx","./src/views/CopilotsView/index.tsx","./src/services/matchup.ts","./src/views/CopilotsView/CopilotListView/CopilotSortContext/types.ts"],"sourcesContent":["import type { TermNextType } from '@sinsa/schema';\nimport { Card, Flex } from 'antd';\nimport React, { useMemo } from 'react';\nimport { RelativeTimeText } from '../RelativeTimeText';\nimport { ElementURLMapper } from '../AdaptiveAurorianCard/constants';\nimport styles from './styles.module.less';\nimport { REVERSED_MATCH_UP } from '@/services/matchup';\n\nexport interface BossCardProps {\n  term: TermNextType;\n}\n\nexport const BossCard = React.memo<BossCardProps>(\n  ({ term }) => {\n    const { boss_name, features, end_time, boss_element } = term;\n\n    const reversedMatchedElement = useMemo(() => {\n      return REVERSED_MATCH_UP[boss_element];\n    }, [boss_element]);\n\n    return (\n      <Card className={styles.Card}>\n        <Flex vertical={true} gap={4}>\n          <Flex align=\"center\" gap={4} wrap=\"nowrap\">\n            <span className={styles.BossName}>{boss_name}</span>\n            <img\n              className={styles.MetaFirstAttribute}\n              alt={boss_element}\n              src={ElementURLMapper[boss_element]}\n            />\n          </Flex>\n          <span className={styles.EndTimeContainer}>\n            <RelativeTimeText time={end_time} />\n            结束\n          </span>\n          <ul className={styles.FeaturesContainer}>\n            <li key={'matchup'}>\n              <img\n                className={styles.FeatureElement}\n                alt={reversedMatchedElement}\n                src={ElementURLMapper[reversedMatchedElement]}\n              />\n              {'  '}\n              属性克制伤害增加 100%\n            </li>\n            {features.split('\\n').map(text => {\n              return <li key={text}>{text}</li>;\n            })}\n          </ul>\n        </Flex>\n      </Card>\n    );\n  },\n  (a, b) => a.term.term_id === b.term.term_id,\n);\n","/* eslint-disable no-nested-ternary */\nimport { useRequest } from 'ahooks';\nimport { PageContainer } from '@ant-design/pro-components';\nimport { useMemo } from 'react';\nimport { Flex, Space } from 'antd';\nimport { TermNotFound } from '@/components/TermNotFound';\nimport { TermChanger, useTargetTermFromParams } from '@/components/TermChanger';\nimport { getCopilots } from '@/services/http';\nimport { RoutePath } from '@/views/GlobalLayout/constants';\nimport { CopilotsView } from '@/views/CopilotsView';\nimport { CopilotSorterProvider } from '@/views/CopilotsView/CopilotListView/CopilotSortContext';\nimport { CopilotSelect } from '@/views/CopilotsView/CopilotListView/CopilotSortContext/select';\nimport { BossCard } from '@/components/BossCard';\n\nconst CopilotsPage: React.FC = () => {\n  const { targetTerm: currentTerm } = useTargetTermFromParams();\n\n  const { data, error, loading } = useRequest(\n    () =>\n      currentTerm?.term_id\n        ? getCopilots(currentTerm.term_id)\n        : (Promise.resolve({}) as ReturnType<typeof getCopilots>),\n    {\n      ready: Boolean(currentTerm?.term_id),\n      refreshDeps: [currentTerm?.term_id],\n    },\n  );\n\n  const copilots = useMemo(() => Object.values(data ?? []), [data]);\n\n  return (\n    <CopilotSorterProvider>\n      <PageContainer\n        content={\n          <Space>\n            <TermChanger pathFn={RoutePath.Copilots} />\n            <CopilotSelect />\n          </Space>\n        }\n        title=\"作业全览\"\n        loading={loading}\n      >\n        <Flex vertical gap=\"middle\">\n          {currentTerm ? <BossCard term={currentTerm} /> : null}\n          {error ? (\n            <TermNotFound />\n          ) : currentTerm ? (\n            <CopilotsView currentTerm={currentTerm} copilots={copilots} />\n          ) : (\n            <TermNotFound />\n          )}\n        </Flex>\n      </PageContainer>\n    </CopilotSorterProvider>\n  );\n};\n\nexport default CopilotsPage;\n","import constate from 'constate';\nimport { useState } from 'react';\nimport { CopilotSorter } from './types';\n\nexport const [CopilotSorterProvider, useCopilotSorter] = constate(() => {\n  const [sorter, setSorter] = useState(CopilotSorter.UploadTime);\n\n  return {\n    sorter,\n    setSorter,\n  };\n});\n","import { Select } from 'antd';\nimport type React from 'react';\nimport { CopilotSorter } from './types';\nimport { useCopilotSorter } from '.';\n\nconst CopilotSorterOptions = [\n  { label: '按最近上传时间', value: CopilotSorter.UploadTime },\n  { label: '按分数高至低', value: CopilotSorter.Score },\n  { label: '按分数低至高', value: CopilotSorter.ReversedScore },\n];\n\nexport const CopilotSelect: React.FC = () => {\n  const { sorter, setSorter } = useCopilotSorter();\n  return (\n    <Select\n      options={CopilotSorterOptions}\n      value={sorter}\n      onChange={setSorter}\n    />\n  );\n};\n","import { useMemo, useRef, useState } from 'react';\nimport { Card, List } from 'antd';\nimport type { CopilotNextType, TermNextType } from '@sinsa/schema';\nimport styles from './styles.module.less';\nimport { useCopilotSorter } from './CopilotSortContext';\nimport { CopilotSorter } from './CopilotSortContext/types';\nimport { CopilotBlock } from '@/components/SolutionCard/CopilotBlock';\n\nconst getRowKey = (c: CopilotNextType) => c.copilot_id;\n\ninterface CopilotListViewProps {\n  currentTerm: TermNextType;\n  dataSource: CopilotNextType[];\n}\n\nexport const CopilotListView: React.FC<CopilotListViewProps> = ({\n  currentTerm,\n  dataSource,\n}) => {\n  const inViewRef = useRef<HTMLDivElement>(null);\n  const [current, setCurrent] = useState(1);\n  const { sorter } = useCopilotSorter();\n\n  const displayDataSource = useMemo(() => {\n    switch (sorter) {\n      case CopilotSorter.UploadTime:\n        return dataSource;\n      case CopilotSorter.Score:\n        return Array.from(dataSource).sort((a, b) => b.score - a.score);\n      case CopilotSorter.ReversedScore:\n        return Array.from(dataSource).sort((a, b) => a.score - b.score);\n      default:\n        return dataSource;\n    }\n  }, [dataSource, sorter]);\n\n  const pagination = useMemo(() => {\n    return {\n      align: 'center' as const,\n      defaultPageSize: 5,\n      current,\n      onChange(page: number) {\n        setCurrent(page);\n        window.scrollTo({\n          top: inViewRef.current!.offsetTop,\n          behavior: 'smooth',\n        });\n      },\n      showSizeChanger: false,\n      showTotal(total: number): string {\n        return `总共 ${total} 条作业`;\n      },\n    };\n  }, [current]);\n\n  return (\n    <>\n      <div className={styles.Mount} ref={inViewRef} />\n      <Card className={styles.CopilotCard}>\n        <List<CopilotNextType>\n          dataSource={displayDataSource}\n          pagination={pagination}\n          rowKey={getRowKey}\n          renderItem={item => (\n            <CopilotBlock\n              className={styles.ControlledCopilotBlock}\n              copilot={item}\n              currentTerm={currentTerm}\n              readOnly\n            />\n          )}\n        />\n      </Card>\n    </>\n  );\n};\n","import type { CopilotNextType, TermNextType } from '@sinsa/schema';\nimport { CopilotListView } from './CopilotListView';\n\ninterface CopilotsViewProps {\n  copilots: CopilotNextType[];\n  currentTerm: TermNextType;\n}\n\nexport const CopilotsView: React.FC<CopilotsViewProps> = ({\n  copilots,\n  currentTerm,\n}) => {\n  return <CopilotListView dataSource={copilots} currentTerm={currentTerm} />;\n};\n","import { AurorianAttributeType } from '@sinsa/schema';\n\n/**\n * 克制链\n */\nexport const MATCH_UP: Record<AurorianAttributeType, AurorianAttributeType> = {\n  [AurorianAttributeType.Water]: AurorianAttributeType.Fire,\n  [AurorianAttributeType.Fire]: AurorianAttributeType.Forest,\n  [AurorianAttributeType.Forest]: AurorianAttributeType.Thunder,\n  [AurorianAttributeType.Thunder]: AurorianAttributeType.Water,\n};\n\n/**\n * 被克制链\n */\nexport const REVERSED_MATCH_UP: Record<\n  AurorianAttributeType,\n  AurorianAttributeType\n> = {\n  [AurorianAttributeType.Forest]: AurorianAttributeType.Fire,\n  [AurorianAttributeType.Thunder]: AurorianAttributeType.Forest,\n  [AurorianAttributeType.Water]: AurorianAttributeType.Thunder,\n  [AurorianAttributeType.Fire]: AurorianAttributeType.Water,\n};\n","export enum CopilotSorter {\n  UploadTime = 'UploadTime',\n  Score = 'Score',\n  ReversedScore = 'ReversedScore',\n}\n"],"names":["BossCard","term","boss_name","features","end_time","boss_element","reversedMatchedElement","useMemo","REVERSED_MATCH_UP","Card","className","Flex","vertical","gap","align","wrap","alt","src","ElementURLMapper","RelativeTimeText","time","split","map","text","a","b","term_id","targetTerm","currentTerm","useTargetTermFromParams","data","error","loading","useRequest","getCopilots","Promise","resolve","ready","Boolean","refreshDeps","copilots","Object","values","CopilotSorterProvider","PageContainer","content","Space","TermChanger","pathFn","RoutePath","CopilotSelect","title","TermNotFound","CopilotsView","useCopilotSorter","sorter","setSorter","useState","CopilotSorter","CopilotSorterOptions","label","value","Select","options","onChange","getRowKey","c","copilot_id","CopilotListView","dataSource","inViewRef","useRef","current","setCurrent","displayDataSource","Array","from","sort","score","pagination","defaultPageSize","page","window","scrollTo","top","offsetTop","behavior","showSizeChanger","showTotal","total","ref","List","rowKey","renderItem","item","CopilotBlock","copilot","readOnly","AurorianAttributeType"],"mappings":"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"}