{"version":3,"file":"static/js/async/copilots/(termId)/page.3fd8f559.js","sources":["webpack://@sinsa/web/./src/components/BossCard/index.tsx","webpack://@sinsa/web/./src/components/SolutionCard/CopilotBlock/constants.ts?2987","webpack://@sinsa/web/./src/components/SolutionCard/CopilotBlock/index.tsx?40f0","webpack://@sinsa/web/./src/components/TermChanger.tsx?8d45","webpack://@sinsa/web/./src/components/TermNotFound.tsx?4053","webpack://@sinsa/web/./src/routes/copilots/[termId]/page.tsx","webpack://@sinsa/web/./src/services/matchup.ts","webpack://@sinsa/web/./src/services/real-random-rules.ts?6ecc","webpack://@sinsa/web/./src/services/real-random.ts?1a62","webpack://@sinsa/web/./src/views/CopilotsView/CopilotListView/CopilotSortContext/index.tsx","webpack://@sinsa/web/./src/views/CopilotsView/CopilotListView/CopilotSortContext/select.tsx","webpack://@sinsa/web/./src/views/CopilotsView/CopilotListView/CopilotSortContext/types.ts","webpack://@sinsa/web/./src/views/CopilotsView/CopilotListView/index.tsx","webpack://@sinsa/web/./src/views/CopilotsView/index.tsx"],"sourcesContent":["import type { TermNextType } from '@sinsa/schema';\nimport { Card, Flex } from 'antd';\nimport React, { useMemo } from 'react';\nimport { RelativeTimeText } from '../RelativeTimeText';\nimport { ElementURLMapper } from '../AdaptiveAurorianCard/constants';\nimport styles from './styles.module.less';\nimport { REVERSED_MATCH_UP } from '@/services/matchup';\n\nexport interface BossCardProps {\n  term: TermNextType;\n}\n\nexport const BossCard = React.memo<BossCardProps>(\n  ({ term }) => {\n    const { boss_name, features, end_time, boss_element } = term;\n\n    const reversedMatchedElement = useMemo(() => {\n      return REVERSED_MATCH_UP[boss_element];\n    }, [boss_element]);\n\n    return (\n      <Card className={styles.Card}>\n        <Flex vertical={true} gap={4}>\n          <Flex align=\"center\" gap={4} wrap=\"nowrap\">\n            <span className={styles.BossName}>{boss_name}</span>\n            <img\n              className={styles.MetaFirstAttribute}\n              alt={boss_element}\n              src={ElementURLMapper[boss_element]}\n            />\n          </Flex>\n          <span className={styles.EndTimeContainer}>\n            <RelativeTimeText time={end_time} />\n            结束\n          </span>\n          <ul className={styles.FeaturesContainer}>\n            <li key={'matchup'}>\n              <img\n                className={styles.FeatureElement}\n                alt={reversedMatchedElement}\n                src={ElementURLMapper[reversedMatchedElement]}\n              />\n              {'  '}\n              属性克制伤害增加 100%\n            </li>\n            {features.split('\\n').map(text => {\n              return <li key={text}>{text}</li>;\n            })}\n          </ul>\n        </Flex>\n      </Card>\n    );\n  },\n  (a, b) => a.term.term_id === b.term.term_id,\n);\n","import type { CopilotNextAssetType } from '@sinsa/schema';\n\nexport const AssetTypeTextMapper: Record<CopilotNextAssetType['type'], string> =\n  {\n    script33: '三十三号脚本',\n  };\n","import { clsx } from 'clsx';\nimport {\n  Button,\n  Dropdown,\n  Flex,\n  Popconfirm,\n  Space,\n  Tag,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport React, { useCallback, useMemo } from 'react';\nimport numeral from 'numeral';\nimport { useBreakpoint } from '@ant-design/pro-components';\nimport {\n  MessageOne,\n  More,\n  Paperclip,\n  PreviewCloseOne,\n  Bug,\n  Caution,\n} from '@icon-park/react';\nimport type {\n  AurorianNextType,\n  CopilotNextType,\n  TermNextType,\n} from '@sinsa/schema';\nimport { AdaptiveAuroriansTeam } from './AdaptiveAuroriansTeam';\nimport styles from './styles.module.less';\nimport { AssetTypeTextMapper } from './constants';\nimport { RelativeTimeText } from '@/components/RelativeTimeText';\nimport { trimTitle } from '@/components/utils';\nimport { useSolutionResultContext } from '@/views/SolutionView/context';\nimport { QueryFormAction } from '@/views/SolutionView/hooks/use-trigger-form-action/constants';\nimport { realRandomService } from '@/services/real-random';\n\ninterface CopilotBlockProps {\n  copilot: CopilotNextType;\n  currentTerm: TermNextType;\n  className?: string;\n\n  readOnly?: boolean;\n}\n\nenum MenuKey {\n  IgnoreCopilot = 'IgnoreCopilot',\n}\n\nfunction useLarge() {\n  const screen = useBreakpoint();\n  const isLarge = useMemo(\n    () => screen === 'lg' || screen === 'xl' || screen === 'xxl',\n    [screen],\n  );\n\n  return isLarge;\n}\n\nexport const CopilotBlock = React.memo<CopilotBlockProps>(\n  ({ copilot, currentTerm, className, readOnly }) => {\n    const isLarge = useLarge();\n    const hasAsset = useMemo(() => {\n      return Array.isArray(copilot.assets);\n    }, [copilot.assets]);\n\n    const displayTitle = useMemo(\n      () => trimTitle(copilot.title),\n      [copilot.title],\n    );\n\n    const { triggerFormAction } = useSolutionResultContext();\n\n    const handleClickMenu = useCallback(\n      (info: { key: string }) => {\n        switch (info.key) {\n          case MenuKey.IgnoreCopilot:\n            triggerFormAction({\n              type: QueryFormAction.IgnoreCopilot,\n              copilot,\n            });\n            break;\n          default:\n            break;\n        }\n      },\n      [copilot.copilot_id],\n    );\n\n    const handleReplace = useCallback(\n      (_aurorian: AurorianNextType) => {\n        triggerFormAction({\n          type: QueryFormAction.ReplaceAurorian,\n          aurorian: _aurorian,\n          copilot,\n          currentTerm,\n        });\n      },\n      [copilot.copilot_id, currentTerm.term_id],\n    );\n\n    const realRandomResult = useMemo(() => {\n      return realRandomService.isRealRandom(copilot);\n    }, [copilot.copilot_id]);\n\n    return (\n      <div className={clsx(styles.CopilotBlock, className)}>\n        <AdaptiveAuroriansTeam\n          aurorianRequirements={copilot.aurorian_requirements}\n          readOnly={readOnly}\n          onReplace={handleReplace}\n        />\n        <div className={styles.PaddingContainer}>\n          <Flex className={styles.Header} wrap=\"nowrap\" align=\"center\">\n            <span className={styles.Score}>\n              {numeral(copilot.score).format('0,0')}\n            </span>\n            <Flex className={styles.Author} align=\"center\" gap={4}>\n              <Space.Compact size=\"small\">\n                {!readOnly ? (\n                  <Dropdown\n                    menu={{\n                      items: [\n                        {\n                          key: MenuKey.IgnoreCopilot,\n                          label: (\n                            <span>\n                              <PreviewCloseOne /> 排除此作业\n                            </span>\n                          ),\n                        },\n                      ],\n                      onClick: handleClickMenu,\n                    }}\n                  >\n                    <Button icon={<More />} />\n                  </Dropdown>\n                ) : null}\n\n                <Button\n                  icon={\n                    <Tooltip title=\"报告收录错误\">\n                      <Bug />\n                    </Tooltip>\n                  }\n                  onClick={e => {\n                    e.stopPropagation();\n                    const params = {\n                      有收录问题的作业所在荒典期数: copilot.term_id,\n                      有收录问题的作业视频链接: `${copilot.author_name} ${copilot.title} https://www.bilibili.com/video/${copilot.href}`,\n                    };\n\n                    const queryString = Object.entries(params)\n                      .map(\n                        ([key, value]) =>\n                          `prefill_${window.encodeURIComponent(\n                            key,\n                          )}=${window.encodeURIComponent(value)}`,\n                      )\n                      .join('&');\n                    window.open(\n                      `https://fwf92qm5h53.feishu.cn/share/base/form/shrcnFMYfIOulCFwcl5ELDfGCVf?${queryString}`,\n                      '_blank',\n                    );\n                  }}\n                />\n              </Space.Compact>\n              <RelativeTimeText time={copilot.upload_time} />\n\n              {copilot.description && !isLarge ? (\n                <Tooltip title={copilot.description}>\n                  {copilot.description ? <MessageOne size={18} /> : null}\n                </Tooltip>\n              ) : null}\n\n              <span\n                className={clsx(\n                  styles.AuthorName,\n                  !isLarge && styles.AuthorSmall,\n                )}\n              >\n                {copilot.author_name}\n              </span>\n            </Flex>\n          </Flex>\n          <div className={styles.Title}>\n            <Typography.Link\n              href={`https://www.bilibili.com/video/${copilot.href}`}\n              target=\"_blank\"\n              className={clsx(\n                realRandomResult.isRealRandomResult && styles.NotWritableTitle,\n              )}\n              title={copilot.title}\n              ellipsis={true}\n              onClick={e => {\n                e.stopPropagation();\n                window.browserClient.sendEvent?.({\n                  name: 'go_to_copilot',\n                  metrics: {\n                    score: copilot.score,\n                  },\n                  categories: {\n                    copilot_source: copilot.source_type,\n                    author: copilot.author_id,\n                    author_name: copilot.author_name,\n                    term_id: copilot.term_id,\n                    href: copilot.href,\n                    copilot_id: copilot.copilot_id,\n                    title: copilot.title,\n                  },\n                });\n              }}\n            >\n              {currentTerm?.term_id &&\n              copilot.term_id !== currentTerm.term_id ? (\n                <Tooltip title={`复刻 ${copilot.term_id} 期荒典`}>\n                  <Tag color=\"red\">复刻</Tag>\n                </Tooltip>\n              ) : null}\n              {displayTitle}\n            </Typography.Link>\n          </div>\n          {realRandomResult.isRealRandomResult ? (\n            <>\n              <Typography.Text type=\"secondary\" strong>\n                <Caution /> 此作业抄不了：\n                <Tooltip\n                  title={realRandomResult.stack.map(i => i.reason).join('、')}\n                >\n                  <span className={styles.ReasonText}>查看原因</span>\n                </Tooltip>{' '}\n                <Typography.Link\n                  onClick={e => {\n                    e.stopPropagation();\n                    handleClickMenu({\n                      key: MenuKey.IgnoreCopilot,\n                    });\n                  }}\n                >\n                  排除此作业\n                </Typography.Link>\n              </Typography.Text>\n            </>\n          ) : null}\n          {copilot.description && isLarge ? (\n            <Typography.Paragraph type=\"secondary\">\n              {copilot.description}\n            </Typography.Paragraph>\n          ) : null}\n          {hasAsset && isLarge\n            ? copilot.assets?.map((asset, index) => (\n                <Popconfirm\n                  // eslint-disable-next-line react/no-array-index-key\n                  key={`${asset.type}${index}`}\n                  okText=\"确认\"\n                  title=\"此资源仅为临时存档。是否开始下载？\"\n                  onConfirm={() => {\n                    const el = document.createElement('a');\n                    el.href = asset.script33.link;\n                    el.click();\n                  }}\n                >\n                  <Typography.Link>\n                    <Paperclip /> {AssetTypeTextMapper[asset.type]}\n                    存档\n                  </Typography.Link>\n                </Popconfirm>\n              ))\n            : null}\n        </div>\n      </div>\n    );\n  },\n  (prev, next) =>\n    prev.className === next.className &&\n    prev.copilot.copilot_id === next.copilot.copilot_id &&\n    prev.currentTerm.term_id === next.currentTerm.term_id,\n);\n","import { useModel } from '@modern-js/runtime/model';\nimport { Select } from 'antd';\nimport { useNavigate, useParams } from '@modern-js/runtime/router';\nimport { useMemo } from 'react';\nimport { TermsModel } from '@/models/terms';\nimport type { RoutePath } from '@/views/GlobalLayout/constants';\n\nexport function useTargetTermFromParams() {\n  const params = useParams<{ termId: string | 'latest' }>();\n  const [{ termsMap, latestTerm }] = useModel(TermsModel);\n\n  const targetTerm = useMemo(() => {\n    if (!params.termId) {\n      return undefined;\n    }\n    return params.termId === 'latest' ? latestTerm : termsMap[params.termId];\n  }, [params.termId, latestTerm?.term_id]);\n\n  return {\n    targetTerm,\n  };\n}\n\nexport const TermChanger: React.FC<{\n  pathFn: typeof RoutePath.Copilots | typeof RoutePath.Solutions;\n}> = ({ pathFn }) => {\n  const [terms] = useModel(TermsModel);\n  const { targetTerm } = useTargetTermFromParams();\n  const navigate = useNavigate();\n\n  return (\n    <Select\n      value={targetTerm?.term_id}\n      options={terms.termsOptions}\n      placeholder=\"荒典期数\"\n      onChange={nextTerm => {\n        navigate(\n          pathFn(nextTerm === terms.latestTerm?.term_id ? 'latest' : nextTerm),\n        );\n      }}\n    />\n  );\n};\n","import { useModel } from '@modern-js/runtime/model';\nimport { Button, Result } from 'antd';\nimport { Link } from '@modern-js/runtime/router';\nimport { TermsModel } from '@/models/terms';\nimport { RoutePath } from '@/views/GlobalLayout/constants';\n\nexport const TermNotFound: React.FC = () => {\n  const [{ latestTerm }] = useModel(TermsModel);\n\n  return (\n    <Result\n      title=\"暂时没有这期荒典作业\"\n      subTitle=\"检查链接是否正确或返回最近荒典作业\"\n      icon={\n        <img\n          alt=\"未找到作业\"\n          src={`https://s2.loli.net/2024/04/27/BAlKp9ERMiDo8cN.png`}\n        />\n      }\n      extra={\n        latestTerm ? (\n          <Link to={RoutePath.Copilots('latest')}>\n            <Button type=\"primary\">返回最近作业</Button>\n          </Link>\n        ) : (\n          <Link to={RoutePath.Home}>\n            <Button type=\"primary\">返回首页</Button>\n          </Link>\n        )\n      }\n    />\n  );\n};\n","/* eslint-disable no-nested-ternary */\nimport { useRequest } from 'ahooks';\nimport { PageContainer } from '@ant-design/pro-components';\nimport { useMemo } from 'react';\nimport { Flex, Space } from 'antd';\nimport { TermNotFound } from '@/components/TermNotFound';\nimport { TermChanger, useTargetTermFromParams } from '@/components/TermChanger';\nimport { getCopilots } from '@/services/http';\nimport { RoutePath } from '@/views/GlobalLayout/constants';\nimport { CopilotsView } from '@/views/CopilotsView';\nimport { CopilotSorterProvider } from '@/views/CopilotsView/CopilotListView/CopilotSortContext';\nimport { CopilotSelect } from '@/views/CopilotsView/CopilotListView/CopilotSortContext/select';\nimport { BossCard } from '@/components/BossCard';\n\nconst CopilotsPage: React.FC = () => {\n  const { targetTerm: currentTerm } = useTargetTermFromParams();\n\n  const { data, error, loading } = useRequest(\n    () =>\n      currentTerm?.term_id\n        ? getCopilots(currentTerm.term_id)\n        : (Promise.resolve({}) as ReturnType<typeof getCopilots>),\n    {\n      ready: Boolean(currentTerm?.term_id),\n      refreshDeps: [currentTerm?.term_id],\n    },\n  );\n\n  const copilots = useMemo(() => Object.values(data ?? []), [data]);\n\n  return (\n    <CopilotSorterProvider>\n      <PageContainer\n        content={\n          <Space>\n            <TermChanger pathFn={RoutePath.Copilots} />\n            <CopilotSelect />\n          </Space>\n        }\n        title=\"作业全览\"\n        loading={loading}\n      >\n        <Flex vertical gap=\"middle\">\n          {currentTerm ? <BossCard term={currentTerm} /> : null}\n          {error || !copilots?.length ? (\n            <TermNotFound />\n          ) : currentTerm ? (\n            <CopilotsView currentTerm={currentTerm} copilots={copilots} />\n          ) : (\n            <TermNotFound />\n          )}\n        </Flex>\n      </PageContainer>\n    </CopilotSorterProvider>\n  );\n};\n\nexport default CopilotsPage;\n","import { AurorianAttributeType } from '@sinsa/schema';\n\n/**\n * 克制链\n */\nexport const MATCH_UP: Record<AurorianAttributeType, AurorianAttributeType> = {\n  [AurorianAttributeType.Water]: AurorianAttributeType.Fire,\n  [AurorianAttributeType.Fire]: AurorianAttributeType.Forest,\n  [AurorianAttributeType.Forest]: AurorianAttributeType.Thunder,\n  [AurorianAttributeType.Thunder]: AurorianAttributeType.Water,\n};\n\n/**\n * 被克制链\n */\nexport const REVERSED_MATCH_UP: Record<\n  AurorianAttributeType,\n  AurorianAttributeType\n> = {\n  [AurorianAttributeType.Forest]: AurorianAttributeType.Fire,\n  [AurorianAttributeType.Thunder]: AurorianAttributeType.Forest,\n  [AurorianAttributeType.Water]: AurorianAttributeType.Thunder,\n  [AurorianAttributeType.Fire]: AurorianAttributeType.Water,\n};\n","import type { CopilotNextType } from '@sinsa/schema';\n\nexport interface RealRandomMessage {\n  level: 'error';\n  reason: string;\n}\n\nexport type RealRandomRule = (\n  c: CopilotNextType,\n) => RealRandomMessage | undefined;\n\nexport const REAL_RANDOM_RULES: RealRandomRule[] = [\n  // 莱莎一破深色格真随机\n  function RyzaOneBk(c) {\n    const ryza = c.aurorian_requirements.find(a => a.aurorian_id === 'ryza');\n\n    if (typeof ryza?.breakthrough === 'number' && ryza.breakthrough >= 3) {\n      return {\n        level: 'error',\n        reason: '光灵莱莎一破深色格效果',\n      };\n    }\n  },\n];\n","import type { CopilotNextType } from '@sinsa/schema';\nimport { REAL_RANDOM_RULES } from './real-random-rules';\nimport type { RealRandomMessage } from './real-random-rules';\n\nexport interface IsRealRandomResultType {\n  stack: RealRandomMessage[];\n  isRealRandomResult: boolean;\n}\n\nexport class RealRandomService {\n  private static instance: RealRandomService | null = null;\n\n  public static getInstance(): RealRandomService {\n    if (RealRandomService.instance === null) {\n      RealRandomService.instance = new RealRandomService();\n    }\n    return RealRandomService.instance;\n  }\n\n  private cache: Map<CopilotNextType['copilot_id'], IsRealRandomResultType>;\n\n  protected constructor() {\n    this.cache = new Map();\n  }\n\n  isRealRandom(copilot: CopilotNextType): IsRealRandomResultType {\n    const cacheResult = this.cache.get(copilot.copilot_id);\n    if (cacheResult) {\n      return cacheResult;\n    }\n    const result: RealRandomMessage[] = [];\n    for (const fn of REAL_RANDOM_RULES) {\n      const r = fn(copilot);\n      if (r) {\n        result.push(r);\n      }\n    }\n\n    return {\n      stack: result,\n      isRealRandomResult: result.some(r => r.level === 'error'),\n    };\n  }\n}\n\nexport const realRandomService = RealRandomService.getInstance();\n","import constate from 'constate';\nimport { useState } from 'react';\nimport { CopilotSorter } from './types';\n\nexport const [CopilotSorterProvider, useCopilotSorter] = constate(() => {\n  const [sorter, setSorter] = useState(CopilotSorter.UploadTime);\n\n  return {\n    sorter,\n    setSorter,\n  };\n});\n","import { Select } from 'antd';\nimport type React from 'react';\nimport { CopilotSorter } from './types';\nimport { useCopilotSorter } from '.';\n\nconst CopilotSorterOptions = [\n  { label: '按最近上传时间', value: CopilotSorter.UploadTime },\n  { label: '按分数高至低', value: CopilotSorter.Score },\n  { label: '按分数低至高', value: CopilotSorter.ReversedScore },\n];\n\nexport const CopilotSelect: React.FC = () => {\n  const { sorter, setSorter } = useCopilotSorter();\n  return (\n    <Select\n      options={CopilotSorterOptions}\n      value={sorter}\n      onChange={setSorter}\n    />\n  );\n};\n","export enum CopilotSorter {\n  UploadTime = 'UploadTime',\n  Score = 'Score',\n  ReversedScore = 'ReversedScore',\n}\n","import { useMemo, useRef, useState } from 'react';\nimport { Card, List } from 'antd';\nimport type { CopilotNextType, TermNextType } from '@sinsa/schema';\nimport styles from './styles.module.less';\nimport { useCopilotSorter } from './CopilotSortContext';\nimport { CopilotSorter } from './CopilotSortContext/types';\nimport { CopilotBlock } from '@/components/SolutionCard/CopilotBlock';\n\nconst getRowKey = (c: CopilotNextType) => c.copilot_id;\n\ninterface CopilotListViewProps {\n  currentTerm: TermNextType;\n  dataSource: CopilotNextType[];\n}\n\nexport const CopilotListView: React.FC<CopilotListViewProps> = ({\n  currentTerm,\n  dataSource,\n}) => {\n  const inViewRef = useRef<HTMLDivElement>(null);\n  const [current, setCurrent] = useState(1);\n  const { sorter } = useCopilotSorter();\n\n  const displayDataSource = useMemo(() => {\n    switch (sorter) {\n      case CopilotSorter.UploadTime:\n        return dataSource;\n      case CopilotSorter.Score:\n        return Array.from(dataSource).sort((a, b) => b.score - a.score);\n      case CopilotSorter.ReversedScore:\n        return Array.from(dataSource).sort((a, b) => a.score - b.score);\n      default:\n        return dataSource;\n    }\n  }, [dataSource, sorter]);\n\n  const pagination = useMemo(() => {\n    return {\n      align: 'center' as const,\n      defaultPageSize: 5,\n      current,\n      onChange(page: number) {\n        setCurrent(page);\n        window.scrollTo({\n          top: inViewRef.current!.offsetTop,\n          behavior: 'smooth',\n        });\n      },\n      showSizeChanger: false,\n      showTotal(total: number): string {\n        return `总共 ${total} 条作业`;\n      },\n    };\n  }, [current]);\n\n  return (\n    <>\n      <div className={styles.Mount} ref={inViewRef} />\n      <Card className={styles.CopilotCard}>\n        <List<CopilotNextType>\n          dataSource={displayDataSource}\n          pagination={pagination}\n          rowKey={getRowKey}\n          renderItem={item => (\n            <CopilotBlock\n              className={styles.ControlledCopilotBlock}\n              copilot={item}\n              currentTerm={currentTerm}\n              readOnly\n            />\n          )}\n        />\n      </Card>\n    </>\n  );\n};\n","import type { CopilotNextType, TermNextType } from '@sinsa/schema';\nimport { CopilotListView } from './CopilotListView';\n\ninterface CopilotsViewProps {\n  copilots: CopilotNextType[];\n  currentTerm: TermNextType;\n}\n\nexport const CopilotsView: React.FC<CopilotsViewProps> = ({\n  copilots,\n  currentTerm,\n}) => {\n  return <CopilotListView dataSource={copilots} currentTerm={currentTerm} />;\n};\n"],"names":["BossCard","term","boss_name","features","end_time","boss_element","reversedMatchedElement","useMemo","REVERSED_MATCH_UP","Card","className","Flex","vertical","gap","align","wrap","alt","src","ElementURLMapper","RelativeTimeText","time","split","map","text","a","b","term_id","AssetTypeTextMapper","script33","MenuKey","CopilotBlock","copilot","currentTerm","readOnly","isLarge","useLarge","screen","useBreakpoint","hasAsset","Array","isArray","assets","displayTitle","trimTitle","title","triggerFormAction","useSolutionResultContext","handleClickMenu","useCallback","info","key","type","QueryFormAction","copilot_id","handleReplace","_aurorian","aurorian","realRandomResult","realRandomService","clsx","AdaptiveAuroriansTeam","aurorianRequirements","aurorian_requirements","onReplace","score","format","Space","size","Dropdown","menu","items","label","PreviewCloseOne","onClick","Button","icon","More","Tooltip","Bug","e","stopPropagation","queryString","Object","entries","author_name","href","value","window","encodeURIComponent","join","open","upload_time","description","MessageOne","Typography","target","isRealRandomResult","ellipsis","browserClient","sendEvent","name","metrics","categories","copilot_source","source_type","author","author_id","Tag","color","strong","Caution","stack","i","reason","asset","index","Popconfirm","okText","onConfirm","el","document","createElement","link","click","Paperclip","prev","next","useTargetTermFromParams","params","useParams","termsMap","latestTerm","useModel","TermsModel","targetTerm","termId","TermChanger","pathFn","terms","navigate","useNavigate","Select","options","termsOptions","placeholder","onChange","nextTerm","TermNotFound","Result","subTitle","extra","Link","to","RoutePath","data","error","loading","useRequest","getCopilots","Promise","resolve","ready","Boolean","refreshDeps","copilots","values","CopilotSorterProvider","PageContainer","content","CopilotSelect","length","CopilotsView","AurorianAttributeType","REAL_RANDOM_RULES","c","ryza","find","aurorian_id","breakthrough","level","RealRandomService","getInstance","instance","isRealRandom","cacheResult","cache","get","result","fn","r","push","some","Map","useCopilotSorter","sorter","setSorter","useState","CopilotSorter","CopilotSorterOptions","getRowKey","CopilotListView","dataSource","inViewRef","useRef","current","setCurrent","displayDataSource","from","sort","pagination","defaultPageSize","page","scrollTo","top","offsetTop","behavior","showSizeChanger","showTotal","total","ref","List","rowKey","renderItem","item"],"mappings":"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"}