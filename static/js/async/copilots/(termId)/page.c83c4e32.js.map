{"version":3,"file":"static/js/async/copilots/(termId)/page.c83c4e32.js","sources":["./src/components/BossCard/index.tsx","./src/routes/copilots/[termId]/page.tsx","./src/views/CopilotsView/CopilotListView/index.tsx","./src/views/CopilotsView/index.tsx"],"sourcesContent":["import type { TermNextType } from '@sinsa/schema';\nimport { Card, Flex } from 'antd';\nimport React from 'react';\nimport { RelativeTimeText } from '../RelativeTimeText';\nimport { ElementURLMapper } from '../AdaptiveAurorianCard/constants';\nimport styles from './styles.module.less';\n\nexport interface BossCardProps {\n  term: TermNextType;\n}\n\nexport const BossCard = React.memo<BossCardProps>(\n  ({ term }) => {\n    const { boss_name, features, end_time, boss_element } = term;\n\n    return (\n      <Card className={styles.Card}>\n        <Flex vertical={true} gap={4}>\n          <Flex align=\"center\" gap={4} wrap=\"nowrap\">\n            <span className={styles.BossName}>{boss_name}</span>\n            <img\n              className={styles.MetaFirstAttribute}\n              alt={boss_element}\n              src={ElementURLMapper[boss_element]}\n            />\n          </Flex>\n          <span className={styles.EndTimeContainer}>\n            <RelativeTimeText time={end_time} />\n            结束\n          </span>\n          <ul className={styles.FeaturesContainer}>\n            {features.split('\\n').map(text => {\n              return <li key={text}>{text}</li>;\n            })}\n          </ul>\n        </Flex>\n      </Card>\n    );\n  },\n  (a, b) => a.term.term_id === b.term.term_id,\n);\n","/* eslint-disable no-nested-ternary */\nimport { useRequest } from 'ahooks';\nimport { PageContainer } from '@ant-design/pro-components';\nimport { useMemo } from 'react';\nimport { TermNotFound } from '@/components/TermNotFound';\nimport { TermChanger, useTargetTermFromParams } from '@/components/TermChanger';\nimport { getCopilots } from '@/services/http';\nimport { RoutePath } from '@/views/GlobalLayout/constants';\nimport { CopilotsView } from '@/views/CopilotsView';\n\nconst CopilotsPage: React.FC = () => {\n  const { targetTerm: currentTerm } = useTargetTermFromParams();\n\n  const { data, error, loading } = useRequest(\n    () =>\n      currentTerm?.term_id\n        ? getCopilots(currentTerm.term_id)\n        : (Promise.resolve({}) as ReturnType<typeof getCopilots>),\n    {\n      ready: Boolean(currentTerm?.term_id),\n      refreshDeps: [currentTerm?.term_id],\n    },\n  );\n\n  const copilots = useMemo(() => Object.values(data ?? []), [data]);\n\n  return (\n    <PageContainer\n      content={<TermChanger pathFn={RoutePath.Copilots} />}\n      title=\"作业全览\"\n      loading={loading}\n    >\n      {error ? (\n        <TermNotFound />\n      ) : currentTerm ? (\n        <CopilotsView currentTerm={currentTerm} copilots={copilots} />\n      ) : (\n        <TermNotFound />\n      )}\n    </PageContainer>\n  );\n};\n\nexport default CopilotsPage;\n","import { useMemo, useRef, useState } from 'react';\nimport { Card, List } from 'antd';\nimport type { CopilotNextType, TermNextType } from '@sinsa/schema';\nimport styles from './styles.module.less';\nimport { CopilotBlock } from '@/components/SolutionCard/CopilotBlock';\n\nconst getRowKey = (c: CopilotNextType) => c.copilot_id;\n\ninterface CopilotListViewProps {\n  currentTerm: TermNextType;\n  dataSource: CopilotNextType[];\n}\n\nexport const CopilotListView: React.FC<CopilotListViewProps> = ({\n  currentTerm,\n  dataSource,\n}) => {\n  const inViewRef = useRef<HTMLDivElement>(null);\n  const [current, setCurrent] = useState(1);\n\n  const pagination = useMemo(() => {\n    return {\n      align: 'center' as const,\n      defaultPageSize: 5,\n      current,\n      onChange(page: number) {\n        setCurrent(page);\n        window.scrollTo({\n          top: inViewRef.current!.offsetTop,\n          behavior: 'smooth',\n        });\n      },\n      showSizeChanger: false,\n      showTotal(total: number): string {\n        return `总共 ${total} 条作业`;\n      },\n    };\n  }, [current]);\n\n  return (\n    <>\n      <div className={styles.Mount} ref={inViewRef} />\n      <Card className={styles.CopilotCard}>\n        <List<CopilotNextType>\n          dataSource={dataSource}\n          pagination={pagination}\n          rowKey={getRowKey}\n          renderItem={item => (\n            <CopilotBlock\n              className={styles.ControlledCopilotBlock}\n              copilot={item}\n              currentTerm={currentTerm}\n              readOnly\n            />\n          )}\n        />\n      </Card>\n    </>\n  );\n};\n","import { Flex } from 'antd';\nimport type { CopilotNextType, TermNextType } from '@sinsa/schema';\nimport { CopilotListView } from './CopilotListView';\nimport { BossCard } from '@/components/BossCard';\n\ninterface CopilotsViewProps {\n  copilots: CopilotNextType[];\n  currentTerm: TermNextType;\n}\n\nexport const CopilotsView: React.FC<CopilotsViewProps> = ({\n  copilots,\n  currentTerm,\n}) => {\n  return (\n    <Flex vertical gap=\"middle\">\n      <BossCard term={currentTerm} />\n      <CopilotListView dataSource={copilots} currentTerm={currentTerm} />\n    </Flex>\n  );\n};\n"],"names":["BossCard","term","boss_name","features","end_time","boss_element","Card","className","Flex","vertical","gap","align","wrap","alt","src","ElementURLMapper","RelativeTimeText","time","split","map","text","a","b","term_id","targetTerm","currentTerm","useTargetTermFromParams","data","error","loading","useRequest","getCopilots","Promise","resolve","ready","Boolean","refreshDeps","copilots","useMemo","Object","values","PageContainer","content","TermChanger","pathFn","RoutePath","title","TermNotFound","CopilotsView","getRowKey","c","copilot_id","CopilotListView","dataSource","inViewRef","useRef","current","setCurrent","useState","pagination","defaultPageSize","onChange","page","window","scrollTo","top","offsetTop","behavior","showSizeChanger","showTotal","total","ref","List","rowKey","renderItem","item","CopilotBlock","copilot","readOnly"],"mappings":"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"}