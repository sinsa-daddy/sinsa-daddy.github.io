{"version":3,"file":"static/js/async/copilots/(term)/page.95b68b03.js","mappings":"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","sources":["webpack://@sinsa/web/./src/utils/swr.ts","webpack://@sinsa/web/./src/containers/TermNotFound.tsx","webpack://@sinsa/web/./src/containers/CopilotHeader.tsx","webpack://@sinsa/web/./src/features/backtrack/helpers/box-without-aurorians-in-copilot.ts","webpack://@sinsa/web/./src/features/backtrack/helpers/can-use-copilot.ts","webpack://@sinsa/web/./src/components/AurorianCard/styles.module.less","webpack://@sinsa/web/./src/components/AurorianCard/index.tsx","webpack://@sinsa/web/./src/components/AuroriansTeam/styles.module.less","webpack://@sinsa/web/./src/components/AuroriansTeam/index.tsx","webpack://@sinsa/web/./src/components/CopilotsTable/columns.tsx","webpack://@sinsa/web/./src/components/CopilotsTable/index.tsx","webpack://@sinsa/web/./src/components/SolutionScenarioCard/index.tsx","webpack://@sinsa/web/./src/components/ExcludeAurorianFormList/index.tsx","webpack://@sinsa/web/./src/containers/CopilotSolution.tsx","webpack://@sinsa/web/./src/features/backtrack/calculate-all-scenarios-and-scores.ts","webpack://@sinsa/web/./src/routes/copilots/[term]/page.tsx"],"sourcesContent":["export function fetcher(url: string) {\n  return fetch(url).then(r => r.json());\n}\n","import { useModel } from '@modern-js/runtime/model';\nimport { Button, Result } from 'antd';\nimport { Link } from '@modern-js/runtime/router';\nimport { TermsModel } from '@/models/terms';\nimport { RoutePath } from '@/components/MyLayout/constants';\n\nexport const TermNotFound: React.FC = () => {\n  const [{ firstTerm }] = useModel(TermsModel);\n\n  return (\n    <Result\n      status=\"404\"\n      title=\"荒典作业不见了\"\n      subTitle=\"检查链接是否正确或返回最近荒典作业\"\n      extra={\n        firstTerm ? (\n          <Link to={RoutePath.Copilots(firstTerm.term)}>\n            <Button type=\"primary\">返回最近作业</Button>\n          </Link>\n        ) : (\n          <Link to={RoutePath.Home}>\n            <Button type=\"primary\">返回首页</Button>\n          </Link>\n        )\n      }\n    />\n  );\n};\n","import { useModel } from '@modern-js/runtime/model';\nimport { Select } from 'antd';\nimport { useNavigate, useParams } from '@modern-js/runtime/router';\nimport { TermsModel } from '@/models/terms';\nimport { RoutePath } from '@/components/MyLayout/constants';\n\nexport const CopilotHeader: React.FC = () => {\n  const params = useParams<{ term: `${number}` }>();\n  const [terms] = useModel(TermsModel);\n  const navigate = useNavigate();\n  return (\n    <Select\n      value={params.term && Number.parseInt(params.term, 10)}\n      options={terms.termsOptions}\n      placeholder=\"荒典期数\"\n      onChange={(nextTerm: number) => {\n        navigate(RoutePath.Copilots(nextTerm));\n      }}\n    />\n  );\n};\n","import type { CopilotType, MyBoxType } from '@sinsa/schema';\nimport { produce } from 'immer';\nimport { CalcOptions } from '../types';\n\nexport function boxWithoutAuroriansInCopilot(\n  myBox: MyBoxType['aurorian_summaries'],\n  copilot: CopilotType,\n  { disalbeAlternative }: CalcOptions,\n) {\n  return produce(myBox, draft => {\n    for (const aurorianInCopilot of copilot.aurorian_summaries) {\n      // 0. 如果作业中的光灵本身是可替换的，则跳过此光灵判断\n      if (!disalbeAlternative && aurorianInCopilot.is_replaceable) {\n        continue;\n      }\n\n      delete draft[aurorianInCopilot.aurorian_name];\n    }\n  });\n}\n","import type {\n  CopilotType,\n  MyBoxType,\n  AurorianSummaryType,\n} from '@sinsa/schema';\nimport { CalcOptions } from '../types';\n\n/**\n * 我的 Box 能否抄这个作业\n * @param copilot 作业\n * @param myBox 我的 Box\n * @returns 我的 Box 能否抄这个作业\n */\nexport function canUseCopilot(\n  myBox: MyBoxType['aurorian_summaries'],\n  copilot: CopilotType,\n  { disalbeAlternative }: CalcOptions,\n): boolean {\n  for (const aurorianInCopilot of copilot.aurorian_summaries) {\n    // 0. 如果作业中的光灵本身是可替换的，则跳过此光灵判断\n    if (!disalbeAlternative && aurorianInCopilot.is_replaceable) {\n      continue;\n    }\n\n    const aurorianInMyBox = myBox[aurorianInCopilot.aurorian_name] as\n      | AurorianSummaryType\n      | undefined;\n\n    // 1. 光灵本身不存在于我的 box\n    if (!aurorianInMyBox) {\n      return false;\n    }\n\n    // 2. 如果我的 box 光灵突破低于作业要求突破\n    if (aurorianInMyBox.breakthrough < aurorianInCopilot.breakthrough) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"AurorianCard\":\"AurorianCard-Xue7wW\",\"aurorianCard\":\"AurorianCard-Xue7wW\",\"SameSize\":\"SameSize-ttH5Jw\",\"sameSize\":\"SameSize-ttH5Jw\",\"Skin\":\"Skin-ZCSfLL\",\"skin\":\"Skin-ZCSfLL\",\"BlackContainer\":\"BlackContainer-KqzHeu\",\"blackContainer\":\"BlackContainer-KqzHeu\",\"MetaContainer\":\"MetaContainer-VBs_Be\",\"metaContainer\":\"MetaContainer-VBs_Be\",\"SameSizeMeta\":\"SameSizeMeta-jxMufu\",\"sameSizeMeta\":\"SameSizeMeta-jxMufu\",\"MetaAttributeContainer\":\"MetaAttributeContainer-oaQn6c\",\"metaAttributeContainer\":\"MetaAttributeContainer-oaQn6c\",\"MetaClass\":\"MetaClass-oogC_v\",\"metaClass\":\"MetaClass-oogC_v\",\"MetaFirstAttribute\":\"MetaFirstAttribute-bRrn32\",\"metaFirstAttribute\":\"MetaFirstAttribute-bRrn32\",\"MetaSecondAttribute\":\"MetaSecondAttribute-C0kSzr\",\"metaSecondAttribute\":\"MetaSecondAttribute-C0kSzr\",\"NameContainer\":\"NameContainer-zUDWby\",\"nameContainer\":\"NameContainer-zUDWby\",\"BreakThrough\":\"BreakThrough-eMpTUR\",\"breakThrough\":\"BreakThrough-eMpTUR\"};","import React, { useEffect, useMemo, useRef } from 'react';\nimport { useModel } from '@modern-js/runtime/model';\nimport { type AurorianType } from '@sinsa/schema';\nimport { Badge, ConfigProvider, Rate } from 'antd';\nimport { clsx } from 'clsx';\nimport styles from './styles.module.less';\nimport { ClassURLMapper, ElementURLMapper, RarityMapper } from './constants';\nimport { AuroriansModel } from '@/models/aurorians';\n\ninterface AurorianCardProps {\n  name: string;\n  breakthrough?: number;\n  isReplaceable?: boolean;\n  sameSize?: boolean;\n}\n\nexport const AurorianCard = React.memo<AurorianCardProps>(\n  ({ name, breakthrough, isReplaceable, sameSize }) => {\n    const [{ auroriansMap }] = useModel(AuroriansModel);\n    const aurorian = useMemo(\n      () => auroriansMap[name] as AurorianType | undefined,\n      [auroriansMap, name],\n    );\n\n    const cardRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n      if (aurorian?.aurorian_name) {\n        import(`@/assets/skins/${aurorian.aurorian_name}.webp`)\n          .then(esm => {\n            if (typeof esm?.default === 'string') {\n              if (cardRef.current) {\n                cardRef.current.style.backgroundImage = `url(${esm.default})`;\n              }\n            }\n          })\n          .catch(() => {\n            // ignore\n          });\n      }\n    }, [aurorian?.aurorian_name]);\n\n    return (\n      <Badge.Ribbon\n        style={{\n          fontSize: '12px',\n          display: isReplaceable ? 'block' : 'none',\n          zIndex: 10000,\n        }}\n        text={isReplaceable ? '可替' : undefined}\n      >\n        <div\n          className={clsx(styles.AurorianCard, sameSize && styles.SameSize)}\n          ref={cardRef}\n        >\n          {aurorian?.class && aurorian?.attribute ? (\n            <div\n              className={clsx(\n                styles.MetaContainer,\n                sameSize && styles.SameSizeMeta,\n              )}\n            >\n              <img\n                className={styles.MetaClass}\n                alt={aurorian.class}\n                src={ClassURLMapper[aurorian.class]}\n              />\n              <div className={styles.MetaAttributeContainer}>\n                <img\n                  className={styles.MetaFirstAttribute}\n                  alt={aurorian.attribute}\n                  src={ElementURLMapper[aurorian.attribute]}\n                />\n                {aurorian.secondary_attribute ? (\n                  <img\n                    className={styles.MetaSecondAttribute}\n                    alt={aurorian.secondary_attribute}\n                    src={ElementURLMapper[aurorian.secondary_attribute]}\n                  />\n                ) : null}\n              </div>\n            </div>\n          ) : null}\n          <div className={styles.NameContainer}>\n            <div title={aurorian?.aurorian_name}>\n              {aurorian?.aurorian_cn_name}\n            </div>\n\n            {typeof breakthrough === 'number' && aurorian?.rarity ? (\n              <ConfigProvider\n                theme={{\n                  components: {\n                    Rate: {\n                      starBg: 'white',\n                      starSize: 10,\n                    },\n                  },\n                }}\n              >\n                <Rate\n                  className={styles.BreakThrough}\n                  disabled\n                  value={breakthrough}\n                  count={RarityMapper[aurorian.rarity]}\n                />\n              </ConfigProvider>\n            ) : null}\n          </div>\n        </div>\n      </Badge.Ribbon>\n    );\n  },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"AuroriansTeam\":\"AuroriansTeam-bW_gmF\",\"auroriansTeam\":\"AuroriansTeam-bW_gmF\"};","import type { CopilotType } from '@sinsa/schema';\nimport React from 'react';\nimport { AurorianCard } from '../AurorianCard';\nimport styles from './styles.module.less';\n\ninterface AuroriansTeamProps {\n  aurorianSummaries: CopilotType['aurorian_summaries'];\n}\n\nexport const AuroriansTeam: React.FC<AuroriansTeamProps> = ({\n  aurorianSummaries,\n}) => {\n  return (\n    <div className={styles.AuroriansTeam}>\n      {aurorianSummaries.map(\n        ({ aurorian_name, breakthrough, is_replaceable }) => {\n          return (\n            <AurorianCard\n              key={aurorian_name}\n              name={aurorian_name}\n              breakthrough={breakthrough}\n              isReplaceable={is_replaceable}\n            />\n          );\n        },\n      )}\n    </div>\n  );\n};\n","import type { ProColumns } from '@ant-design/pro-components';\nimport type { CopilotType } from '@sinsa/schema';\nimport { Tooltip, Typography } from 'antd';\nimport { AuroriansTeam } from '../AuroriansTeam';\n\nexport interface TableParams {\n  title?: CopilotType['title'];\n  author?: CopilotType['author'];\n  term?: `${number}`;\n}\n\nexport const copilotsColumns: ProColumns<CopilotType>[] = [\n  {\n    title: '光灵配置',\n    dataIndex: 'aurorian_summaries',\n    hideInSearch: true,\n    render(_, entity) {\n      return <AuroriansTeam aurorianSummaries={entity.aurorian_summaries} />;\n    },\n    width: 80 * 5 + 48,\n  },\n  {\n    title: '结算分数',\n    dataIndex: 'score',\n    valueType: 'digit',\n    width: 130,\n    hideInSearch: true,\n  },\n  {\n    title: '作者',\n    dataIndex: 'author',\n    valueType: 'select',\n    hideInSearch: true,\n    ellipsis: true,\n    width: 160,\n    renderText(dom, entity) {\n      return (\n        <>\n          {dom}\n          <Tooltip title={entity.description}>\n            {entity.description ? '🗒' : null}\n          </Tooltip>\n        </>\n      );\n    },\n  },\n  {\n    title: '标题',\n    dataIndex: 'title',\n    ellipsis: true,\n    render(dom, entity) {\n      return (\n        <Typography.Link\n          href={`https://b23.tv/${entity.bv}`}\n          target=\"_blank\"\n          title={entity.title}\n        >\n          {entity.title}\n        </Typography.Link>\n      );\n    },\n  },\n  {\n    title: '上传时间',\n    dataIndex: 'upload_time',\n    valueType: 'dateTime',\n    width: 160,\n  },\n];\n","import { useCallback, useMemo, useRef } from 'react';\nimport type { ActionType } from '@ant-design/pro-components';\nimport { ProTable } from '@ant-design/pro-components';\nimport type { CopilotType } from '@sinsa/schema';\nimport { type TableParams, copilotsColumns } from './columns';\n\ninterface CopilotsTableProps {\n  dataSource: CopilotType[];\n  term?: `${number}`;\n}\n\nexport function copilotRowKey(c: CopilotType) {\n  return c.bv;\n}\n\nconst TABLE_CONST_PROPS = {\n  pagination: {\n    pageSize: 5,\n    size: 'default',\n    position: ['bottomCenter'] as any,\n  },\n  scroll: { x: 'max-content', scrollToFirstRowOnChange: true },\n  toolbar: { title: '收录作业' },\n} as const;\n\nexport const CopilotsTable: React.FC<CopilotsTableProps> = ({\n  dataSource,\n  term,\n}) => {\n  const actionRef = useRef<ActionType>();\n\n  const deps = useMemo((): TableParams => ({ term }), [term]);\n\n  const request = useCallback(async (params: TableParams) => {\n    return {\n      data: dataSource.filter(item => {\n        let ok = true;\n        if (params.title) {\n          ok = item.title.includes(params.title);\n        }\n        return ok;\n      }),\n      success: true,\n    };\n  }, []);\n\n  return (\n    <ProTable<CopilotType, TableParams>\n      rowKey={copilotRowKey}\n      actionRef={actionRef}\n      columns={copilotsColumns}\n      params={deps}\n      request={request}\n      {...TABLE_CONST_PROPS}\n    />\n  );\n};\n","import { ProTable } from '@ant-design/pro-components';\nimport { CopilotType } from '@sinsa/schema';\nimport { useCallback, useMemo } from 'react';\nimport { produce } from 'immer';\nimport { copilotRowKey } from '../CopilotsTable';\nimport { copilotsColumns } from '../CopilotsTable/columns';\nimport type { SolutionScenario } from '@/features/backtrack/types';\n\ninterface SolutionScenarioCardProps {\n  solution: SolutionScenario;\n  title: string;\n}\n\nexport const SolutionScenarioCard: React.FC<SolutionScenarioCardProps> = ({\n  solution,\n  title,\n}) => {\n  const request = useCallback(async () => {\n    return {\n      data: produce(solution.copilots, draft => {\n        draft.sort((a, b) => Number(b.score - a.score));\n      }),\n      success: true,\n    };\n  }, []);\n\n  const toolbar = useMemo(() => ({ title, settings: [] }), [title]);\n\n  const scroll = useMemo(() => ({ x: 'max-content' }), []);\n\n  return (\n    <ProTable<CopilotType>\n      toolbar={toolbar}\n      rowKey={copilotRowKey}\n      columns={copilotsColumns}\n      request={request}\n      search={false}\n      pagination={false}\n      size=\"small\"\n      scroll={scroll}\n    />\n  );\n};\n","import {\n  ProForm,\n  ProFormDependency,\n  ProFormList,\n  ProFormRate,\n  ProFormSelect,\n  ProFormSwitch,\n} from '@ant-design/pro-components';\nimport { useModel } from '@modern-js/runtime/model';\nimport { RarityMapper } from '../AurorianCard/constants';\nimport { AurorianCard } from '../AurorianCard';\nimport { AuroriansModel } from '@/models/aurorians';\n\ninterface ExcludeFormListProps {\n  name: string;\n}\n\nexport const ExcludeAurorianFormList: React.FC<ExcludeFormListProps> = ({\n  name,\n  ...props\n}) => {\n  const [{ auroriansOptions, auroriansMap }] = useModel(AuroriansModel);\n  return (\n    <ProFormList\n      {...props}\n      creatorButtonProps={{\n        creatorButtonText: '添加排除的光灵',\n      }}\n      name={name}\n      alwaysShowItemLabel\n    >\n      {() => {\n        return (\n          <ProForm.Group>\n            <ProFormSelect\n              label=\"排除的光灵\"\n              name={'aurorianName'}\n              options={auroriansOptions}\n              allowClear\n              showSearch\n              width={'sm'}\n              rules={[{ required: true }]}\n            />\n            <ProFormDependency\n              key=\"excludeBreakthroughOnly\"\n              name={['aurorianName']}\n            >\n              {({ aurorianName }) => {\n                if (aurorianName) {\n                  return <AurorianCard sameSize name={aurorianName} />;\n                }\n                return null;\n              }}\n            </ProFormDependency>\n            <ProFormDependency\n              key=\"excludeBreakthroughOnly\"\n              name={['aurorianName']}\n            >\n              {({ aurorianName }) => {\n                if (aurorianName) {\n                  return (\n                    <ProFormSwitch\n                      label=\"仅排除突破\"\n                      name=\"excludeBreakthroughOnly\"\n                    />\n                  );\n                }\n                return null;\n              }}\n            </ProFormDependency>\n\n            <ProFormDependency\n              key=\"excludeBreakthrough\"\n              name={['aurorianName', 'excludeBreakthroughOnly']}\n            >\n              {({ aurorianName, excludeBreakthroughOnly }) => {\n                const targetAurorian = auroriansMap[aurorianName];\n                if (excludeBreakthroughOnly && targetAurorian) {\n                  return (\n                    <ProFormRate\n                      name=\"excludeBreakthrough\"\n                      label=\"排除突破数\"\n                      fieldProps={{\n                        count: RarityMapper[targetAurorian.rarity],\n                        allowHalf: false,\n                      }}\n                      tooltip=\"此突破数以上的光灵会被排除，但不会排除零破的此光灵\"\n                    />\n                  );\n                }\n                return null;\n              }}\n            </ProFormDependency>\n          </ProForm.Group>\n        );\n      }}\n    </ProFormList>\n  );\n};\n","import {\n  ProForm,\n  ProFormDependency,\n  ProFormRadio,\n  ProFormSwitch,\n} from '@ant-design/pro-components';\nimport { CopilotType } from '@sinsa/schema';\nimport { Divider, List, Typography, message } from 'antd';\nimport { useState } from 'react';\nimport { useModel } from '@modern-js/runtime/model';\nimport numeral from 'numeral';\nimport { produce } from 'immer';\nimport { calculateAllScenariosAndScores } from '@/features/backtrack/calculate-all-scenarios-and-scores';\nimport { AuroriansModel } from '@/models/aurorians';\nimport { SolutionResult } from '@/features/backtrack/types';\nimport { SolutionScenarioCard } from '@/components/SolutionScenarioCard';\nimport { ExcludeAurorianFormList } from '@/components/ExcludeAurorianFormList';\n\ninterface CopilotSolutionProps {\n  dataSource: CopilotType[];\n}\n\ninterface QueryParams {\n  k: number;\n  box: 'whole' | 'my-box';\n  disalbeAlternative?: boolean;\n  enableExclude?: boolean;\n  exclude?: {\n    aurorianName: string;\n    excludeBreakthrough?: number;\n    excludeBreakthroughOnly?: boolean;\n  }[];\n}\n\nexport const CopilotSolution: React.FC<CopilotSolutionProps> = ({\n  dataSource,\n}) => {\n  const [{ WHOLE_BOX }] = useModel(AuroriansModel);\n  const [solutionResult, setSolutionResult] = useState<SolutionResult>();\n\n  return (\n    <>\n      <Typography.Title level={3}>寻找队伍方案</Typography.Title>\n      <ProForm<QueryParams>\n        onFinish={async params => {\n          let filterBox = WHOLE_BOX.aurorian_summaries;\n          if (params.exclude) {\n            filterBox = produce(WHOLE_BOX.aurorian_summaries, draft => {\n              for (const aurorianInExclude of params.exclude!) {\n                if (!aurorianInExclude.excludeBreakthroughOnly) {\n                  delete draft[aurorianInExclude.aurorianName];\n                } else if (\n                  typeof aurorianInExclude.excludeBreakthrough === 'number' &&\n                  aurorianInExclude.excludeBreakthrough >= 1\n                ) {\n                  draft[aurorianInExclude.aurorianName].breakthrough =\n                    aurorianInExclude.excludeBreakthrough - 1;\n                }\n              }\n            });\n          }\n\n          const result = calculateAllScenariosAndScores(\n            {\n              copilots: dataSource,\n              availableBox: filterBox,\n            },\n            params.k,\n            { disalbeAlternative: params.disalbeAlternative },\n          );\n\n          if (result.scenarios?.length) {\n            message.success(\n              `已为您找到 ${result?.scenarios?.length} 个队伍方案，总分数由高至低排列`,\n            );\n          }\n\n          setSolutionResult(result);\n        }}\n        // sub=\"寻找队伍方案\"\n        initialValues={{ k: 3, box: 'whole' }}\n        layout=\"vertical\"\n        submitter={{ searchConfig: { submitText: '寻找队伍方案' } }}\n      >\n        <ProForm.Group>\n          <ProFormRadio.Group\n            name=\"k\"\n            label=\"队伍数量\"\n            rules={[{ required: true }]}\n            options={[\n              { label: '两支队伍', value: 2 },\n              { label: '三支队伍', value: 3 },\n              { label: '四支队伍', value: 4 },\n            ]}\n            allowClear={false}\n            radioType=\"button\"\n          />\n          <ProFormRadio.Group\n            name=\"box\"\n            label=\"Box 匹配\"\n            options={[\n              { label: '全图鉴满突破 Box', value: 'whole' },\n              { label: '我的自定义 Box', value: 'my-box', disabled: true },\n            ]}\n            allowClear={false}\n            radioType=\"button\"\n            rules={[{ required: true }]}\n          />\n          <ProFormSwitch\n            name={'disalbeAlternative'}\n            label=\"不考虑可替自由位\"\n            tooltip=\"开启后，计算的队伍方案中绝对不会出现重复光灵，满足图鉴大佬的强迫症\"\n          />\n          <ProForm.Group>\n            <ProFormSwitch\n              name=\"enableExclude\"\n              label=\"额外排除光灵\"\n              tooltip=\"排除光灵会忽略可替自由位\"\n            />\n            <ProFormDependency name={['enableExclude']}>\n              {({ enableExclude }) => {\n                if (enableExclude) {\n                  return <ExcludeAurorianFormList name={'exclude'} />;\n                }\n                return null;\n              }}\n            </ProFormDependency>\n          </ProForm.Group>\n        </ProForm.Group>\n      </ProForm>\n      <Divider />\n      <List\n        dataSource={solutionResult?.scenarios}\n        pagination={{ align: 'center' }}\n        rowKey={sc => sc.copilots.map(c => c.bv).join('')}\n        renderItem={item => {\n          return (\n            <div\n              key={item.copilots.map(c => c.bv).join('')}\n              style={{ marginBottom: '1rem' }}\n            >\n              <SolutionScenarioCard\n                solution={item}\n                title={`方案: ${numeral(item.totalScore).format('0,0')} 分`}\n              />\n            </div>\n          );\n        }}\n      />\n    </>\n  );\n};\n","import type { CopilotType } from '@sinsa/schema';\nimport { boxWithoutAuroriansInCopilot } from './helpers/box-without-aurorians-in-copilot';\nimport { canUseCopilot } from './helpers/can-use-copilot';\nimport type { CalcOptions, SolutionContext, SolutionResult } from './types';\n\ninterface StackContext {\n  currentCopilotIndex: number;\n  currentScenario: CopilotType[];\n  remainingBox: SolutionContext['availableBox'];\n  count: number;\n}\n\n/**\n * 计算所有的队伍方案和具体分数\n * @param context 解决方案上下文\n * @param k 队伍数量\n */\nexport function calculateAllScenariosAndScores(\n  context: SolutionContext,\n  k = 3,\n  { disalbeAlternative }: CalcOptions = {},\n): SolutionResult {\n  const result: SolutionResult = {\n    scenarios: [],\n  };\n\n  const stack: StackContext[] = [\n    {\n      currentCopilotIndex: 0,\n      currentScenario: [],\n      remainingBox: context.availableBox,\n      count: k,\n    },\n  ];\n\n  while (stack.length > 0) {\n    const { currentCopilotIndex, currentScenario, remainingBox, count } =\n      stack.pop()!;\n\n    if (count === 0 || currentCopilotIndex === context.copilots.length) {\n      if (currentScenario.length >= k) {\n        result.scenarios.push({\n          copilots: [...currentScenario],\n          totalScore: currentScenario.reduce(\n            (score, next) => score + BigInt(next.score),\n            BigInt(0),\n          ),\n        });\n      }\n    } else {\n      const currentCopilot = context.copilots[currentCopilotIndex];\n      if (canUseCopilot(remainingBox, currentCopilot, { disalbeAlternative })) {\n        const newRemainingBox = boxWithoutAuroriansInCopilot(\n          remainingBox,\n          currentCopilot,\n          { disalbeAlternative },\n        );\n        stack.push({\n          currentCopilotIndex: currentCopilotIndex + 1,\n          currentScenario: [...currentScenario, currentCopilot],\n          remainingBox: newRemainingBox,\n          count: count - 1,\n        });\n      }\n\n      stack.push({\n        currentCopilotIndex: currentCopilotIndex + 1,\n        currentScenario,\n        remainingBox,\n        count,\n      });\n    }\n  }\n\n  result.scenarios.sort((a, b) => Number(b.totalScore - a.totalScore));\n\n  return result;\n}\n","import { useParams } from '@modern-js/runtime/router';\nimport useSWR from 'swr';\nimport { PageContainer } from '@ant-design/pro-components';\nimport type { CopilotType } from '@sinsa/schema';\nimport { useMemo } from 'react';\nimport { fetcher } from '@/utils/swr';\nimport { TermNotFound } from '@/containers/TermNotFound';\nimport { CopilotHeader } from '@/containers/CopilotHeader';\nimport { CopilotSolution } from '@/containers/CopilotSolution';\nimport { CopilotsTable } from '@/components/CopilotsTable';\n\nconst CopilotPage: React.FC = () => {\n  const params = useParams<{ term: `${number}` }>();\n\n  const { data, error, isLoading } = useSWR<\n    Record<CopilotType['bv'], CopilotType>\n  >(`/api/copilots/${params.term}.json`, fetcher);\n\n  const copilots = useMemo(() => Object.values(data ?? []), [data]);\n\n  if (error) {\n    return <TermNotFound />;\n  }\n\n  return (\n    <PageContainer\n      content={<CopilotHeader />}\n      title=\"荒典作业\"\n      loading={isLoading}\n    >\n      <CopilotsTable term={params.term} dataSource={copilots} />\n      <CopilotSolution dataSource={copilots} />\n    </PageContainer>\n  );\n};\n\nexport default CopilotPage;\n"],"names":["fetcher","url","fetch","then","r","json","TermNotFound","firstTerm","useModel","TermsModel","_jsx","Result","status","title","subTitle","extra","Link","to","RoutePath","Copilots","term","children","Button","type","Home","CopilotHeader","params","useParams","terms","navigate","useNavigate","Select","value","Number","parseInt","options","termsOptions","placeholder","onChange","nextTerm","boxWithoutAuroriansInCopilot","myBox","copilot","disalbeAlternative","produce","draft","aurorianInCopilot","aurorian_summaries","is_replaceable","aurorian_name","canUseCopilot","aurorianInMyBox","breakthrough","AurorianCard","React","name","isReplaceable","sameSize","auroriansMap","AuroriansModel","aurorian","useMemo","cardRef","useRef","useEffect","esm","default","current","style","backgroundImage","catch","Badge","Ribbon","fontSize","display","zIndex","text","undefined","_jsxs","className","clsx","styles","ref","class","attribute","alt","src","ClassURLMapper","ElementURLMapper","secondary_attribute","aurorian_cn_name","rarity","ConfigProvider","theme","components","Rate","starBg","starSize","disabled","count","RarityMapper","AuroriansTeam","aurorianSummaries","map","copilotsColumns","dataIndex","hideInSearch","render","_","entity","width","valueType","ellipsis","renderText","dom","_Fragment","Tooltip","description","Typography","href","bv","target","copilotRowKey","c","TABLE_CONST_PROPS","pagination","pageSize","size","position","scroll","x","scrollToFirstRowOnChange","toolbar","CopilotsTable","dataSource","actionRef","deps","request","useCallback","async","data","filter","item","ok","includes","success","ProTable","rowKey","columns","SolutionScenarioCard","solution","copilots","sort","a","b","score","settings","search","ExcludeAurorianFormList","props","auroriansOptions","ProFormList","creatorButtonProps","creatorButtonText","alwaysShowItemLabel","ProForm","Group","ProFormSelect","label","allowClear","showSearch","rules","required","ProFormDependency","aurorianName","ProFormSwitch","excludeBreakthroughOnly","targetAurorian","ProFormRate","fieldProps","allowHalf","tooltip","CopilotSolution","WHOLE_BOX","solutionResult","setSolutionResult","useState","Title","level","onFinish","filterBox","exclude","aurorianInExclude","excludeBreakthrough","result","context","k","scenarios","stack","currentCopilotIndex","currentScenario","remainingBox","availableBox","length","pop","push","totalScore","reduce","next","BigInt","currentCopilot","newRemainingBox","calculateAllScenariosAndScores","message","initialValues","box","layout","submitter","searchConfig","submitText","ProFormRadio","radioType","enableExclude","Divider","List","align","sc","join","renderItem","marginBottom","numeral","format","CopilotPage","error","isLoading","useSWR","Object","values","PageContainer","content","loading"],"sourceRoot":""}