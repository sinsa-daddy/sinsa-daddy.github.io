{"version":3,"file":"static/js/async/copilots/(term)/page.849fdf70.js","sources":["./src/components/AurorianCard/index.tsx","./src/components/AuroriansTeam/index.tsx","./src/components/CopilotsTable/columns.tsx","./src/components/CopilotsTable/index.tsx","./src/components/SolutionScenarioCard/index.tsx","./src/containers/CopilotHeader.tsx","./src/containers/CopilotSolution.tsx","./src/containers/TermNotFound.tsx","./src/routes/copilots/[term]/page.tsx","./src/features/backtrack/calculate-all-scenarios-and-scores.ts","./src/features/backtrack/helpers/box-without-aurorians-in-copilot.ts","./src/features/backtrack/helpers/can-use-copilot.ts","./src/utils/swr.ts"],"sourcesContent":["import React, { useEffect, useMemo, useRef } from 'react';\nimport { useModel } from '@modern-js/runtime/model';\nimport { type AurorianType } from '@sinsa/schema';\nimport { Badge, ConfigProvider, Rate } from 'antd';\nimport styles from './styles.module.less';\nimport { ClassURLMapper, ElementURLMapper, RarityMapper } from './constants';\nimport { AuroriansModel } from '@/models/aurorians';\n\ninterface AurorianCardProps {\n  name: string;\n  breakthrough: number;\n  isReplaceable?: boolean;\n}\n\nexport const AurorianCard = React.memo<AurorianCardProps>(\n  ({ name, breakthrough, isReplaceable }) => {\n    const [{ auroriansMap }] = useModel(AuroriansModel);\n    const aurorian = useMemo(\n      () => auroriansMap[name] as AurorianType | undefined,\n      [auroriansMap, name],\n    );\n\n    const cardRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n      if (aurorian?.aurorian_name) {\n        import(`@/assets/skins/${aurorian.aurorian_name}.webp`)\n          .then(esm => {\n            if (typeof esm?.default === 'string') {\n              if (cardRef.current) {\n                cardRef.current.style.backgroundImage = `url(${esm.default})`;\n                console.log(\n                  cardRef.current,\n                  cardRef.current.style,\n                  `url(${esm.default})`,\n                );\n              }\n            }\n          })\n          .catch(() => {\n            // ignore\n          });\n      }\n    }, [aurorian?.aurorian_name]);\n\n    return (\n      <Badge.Ribbon\n        style={{\n          fontSize: '12px',\n          display: isReplaceable ? 'block' : 'none',\n          zIndex: 10000,\n        }}\n        text={isReplaceable ? '可替' : undefined}\n      >\n        <div className={styles.AurorianCard} ref={cardRef}>\n          {aurorian?.class && aurorian?.attribute ? (\n            <div className={styles.MetaContainer}>\n              <img\n                className={styles.MetaClass}\n                alt={aurorian.class}\n                src={ClassURLMapper[aurorian.class]}\n              />\n              <div className={styles.MetaAttributeContainer}>\n                <img\n                  className={styles.MetaFirstAttribute}\n                  alt={aurorian.attribute}\n                  src={ElementURLMapper[aurorian.attribute]}\n                />\n                {aurorian.secondary_attribute ? (\n                  <img\n                    className={styles.MetaSecondAttribute}\n                    alt={aurorian.secondary_attribute}\n                    src={ElementURLMapper[aurorian.secondary_attribute]}\n                  />\n                ) : null}\n              </div>\n            </div>\n          ) : null}\n          <div className={styles.NameContainer}>\n            <div title={aurorian?.aurorian_name}>\n              {aurorian?.aurorian_cn_name}\n            </div>\n\n            {aurorian?.rarity ? (\n              <ConfigProvider\n                theme={{\n                  components: {\n                    Rate: {\n                      starBg: 'white',\n                      starSize: 10,\n                    },\n                  },\n                }}\n              >\n                <Rate\n                  className={styles.BreakThrough}\n                  disabled\n                  value={breakthrough}\n                  count={RarityMapper[aurorian.rarity]}\n                />\n              </ConfigProvider>\n            ) : null}\n          </div>\n        </div>\n      </Badge.Ribbon>\n    );\n  },\n);\n","import type { CopilotType } from '@sinsa/schema';\nimport React from 'react';\nimport { AurorianCard } from '../AurorianCard';\nimport styles from './styles.module.less';\n\ninterface AuroriansTeamProps {\n  aurorianSummaries: CopilotType['aurorian_summaries'];\n}\n\nexport const AuroriansTeam: React.FC<AuroriansTeamProps> = ({\n  aurorianSummaries,\n}) => {\n  return (\n    <div className={styles.AuroriansTeam}>\n      {aurorianSummaries.map(\n        ({ aurorian_name, breakthrough, is_replaceable }) => {\n          return (\n            <AurorianCard\n              key={aurorian_name}\n              name={aurorian_name}\n              breakthrough={breakthrough}\n              isReplaceable={is_replaceable}\n            />\n          );\n        },\n      )}\n    </div>\n  );\n};\n","import type { ProColumns } from '@ant-design/pro-table';\nimport type { CopilotType } from '@sinsa/schema';\nimport { Typography } from 'antd';\nimport { AuroriansTeam } from '../AuroriansTeam';\n\nexport interface TableParams {\n  title?: CopilotType['title'];\n  author?: CopilotType['author'];\n  term?: `${number}`;\n}\n\nexport const copilotsColumns: ProColumns<CopilotType>[] = [\n  {\n    title: '光灵配置',\n    dataIndex: 'aurorian_summaries',\n    hideInSearch: true,\n    render(_, entity) {\n      return <AuroriansTeam aurorianSummaries={entity.aurorian_summaries} />;\n    },\n    width: 80 * 5 + 48,\n  },\n  {\n    title: '结算分数',\n    dataIndex: 'score',\n    valueType: 'digit',\n    width: 130,\n    hideInSearch: true,\n  },\n  {\n    title: '作者',\n    dataIndex: 'author',\n    valueType: 'select',\n    hideInSearch: true,\n    ellipsis: true,\n    width: 150,\n  },\n  {\n    title: '标题',\n    dataIndex: 'title',\n    ellipsis: true,\n    render(dom, entity) {\n      return (\n        <Typography.Link\n          href={`https://b23.tv/${entity.bv}`}\n          target=\"_blank\"\n          title={entity.title}\n        >\n          {entity.title}\n        </Typography.Link>\n      );\n    },\n  },\n  {\n    title: '上传时间',\n    dataIndex: 'upload_time',\n    valueType: 'dateTime',\n    width: 160,\n  },\n];\n","import { useCallback, useMemo, useRef } from 'react';\nimport type { ActionType } from '@ant-design/pro-table';\nimport { ProTable } from '@ant-design/pro-table';\nimport type { CopilotType } from '@sinsa/schema';\nimport { type TableParams, copilotsColumns } from './columns';\n\ninterface CopilotsTableProps {\n  dataSource: CopilotType[];\n  term?: `${number}`;\n}\n\nexport function copilotRowKey(c: CopilotType) {\n  return c.bv;\n}\n\nexport const CopilotsTable: React.FC<CopilotsTableProps> = ({\n  dataSource,\n  term,\n}) => {\n  const actionRef = useRef<ActionType>();\n\n  const deps = useMemo((): TableParams => ({ term }), [term]);\n\n  const request = useCallback(async (params: TableParams) => {\n    return {\n      data: dataSource.filter(item => {\n        let ok = true;\n        if (params.title) {\n          ok = item.title.includes(params.title);\n        }\n        return ok;\n      }),\n      success: true,\n    };\n  }, []);\n\n  return (\n    <ProTable<CopilotType, TableParams>\n      toolbar={{ title: '收录作业' }}\n      rowKey={copilotRowKey}\n      actionRef={actionRef}\n      columns={copilotsColumns}\n      params={deps}\n      request={request}\n      pagination={{ pageSize: 5, size: 'default', position: ['bottomCenter'] }}\n    />\n  );\n};\n","import { ProTable } from '@ant-design/pro-table';\nimport { CopilotType } from '@sinsa/schema';\nimport { useCallback } from 'react';\nimport { produce } from 'immer';\nimport { copilotRowKey } from '../CopilotsTable';\nimport { copilotsColumns } from '../CopilotsTable/columns';\nimport type { SolutionScenario } from '@/features/backtrack/types';\n\ninterface SolutionScenarioCardProps {\n  solution: SolutionScenario;\n  title: string;\n}\n\nexport const SolutionScenarioCard: React.FC<SolutionScenarioCardProps> = ({\n  solution,\n  title,\n}) => {\n  const request = useCallback(async () => {\n    return {\n      data: produce(solution.copilots, draft => {\n        draft.sort((a, b) => Number(b.score - a.score));\n      }),\n      success: true,\n    };\n  }, []);\n\n  return (\n    <ProTable<CopilotType>\n      toolbar={{ title, settings: [] }}\n      rowKey={copilotRowKey}\n      columns={copilotsColumns}\n      request={request}\n      search={false}\n      pagination={false}\n      size=\"small\"\n    />\n  );\n};\n","import { useModel } from '@modern-js/runtime/model';\nimport { Select } from 'antd';\nimport { useNavigate, useParams } from '@modern-js/runtime/router';\nimport { TermsModel } from '@/models/terms';\nimport { RoutePath } from '@/components/MyLayout/constants';\n\nexport const CopilotHeader: React.FC = () => {\n  const params = useParams<{ term: `${number}` }>();\n  const [terms] = useModel(TermsModel);\n  const navigate = useNavigate();\n  return (\n    <Select\n      value={params.term && Number.parseInt(params.term, 10)}\n      options={terms.termsOptions}\n      placeholder=\"荒典期数\"\n      onChange={(nextTerm: number) => {\n        navigate(RoutePath.Copilots(nextTerm));\n      }}\n    />\n  );\n};\n","import { ProFormRadio, QueryFilter } from '@ant-design/pro-form';\nimport { CopilotType } from '@sinsa/schema';\nimport { List, Typography } from 'antd';\nimport { useState } from 'react';\nimport { useModel } from '@modern-js/runtime/model';\nimport numeral from 'numeral';\nimport { calculateAllScenariosAndScores } from '@/features/backtrack/calculate-all-scenarios-and-scores';\nimport { AuroriansModel } from '@/models/aurorians';\nimport { SolutionResult } from '@/features/backtrack/types';\nimport { SolutionScenarioCard } from '@/components/SolutionScenarioCard';\n\ninterface CopilotSolutionProps {\n  dataSource: CopilotType[];\n}\n\ninterface QueryParams {\n  k: number;\n  box: 'whole' | 'my-box';\n}\n\nexport const CopilotSolution: React.FC<CopilotSolutionProps> = ({\n  dataSource,\n}) => {\n  const [{ WHOLE_BOX }] = useModel(AuroriansModel);\n  const [solutionResult, setSolutionResult] = useState<SolutionResult>();\n\n  return (\n    <>\n      <Typography.Title level={3}>寻找队伍方案</Typography.Title>\n      <QueryFilter<QueryParams>\n        defaultCollapsed\n        onFinish={async params => {\n          const result = calculateAllScenariosAndScores(\n            {\n              copilots: dataSource,\n              availableBox: WHOLE_BOX.aurorian_summaries,\n            },\n            params.k,\n          );\n\n          setSolutionResult(result);\n        }}\n        searchText=\"寻找队伍方案\"\n        initialValues={{ k: 3, box: 'whole' }}\n      >\n        <ProFormRadio.Group\n          name=\"k\"\n          label=\"队伍数量\"\n          rules={[{ required: true }]}\n          options={[\n            { label: '两支队伍', value: 2 },\n            { label: '三支队伍', value: 3 },\n            { label: '四支队伍', value: 4 },\n          ]}\n          allowClear={false}\n          radioType=\"button\"\n        />\n        <ProFormRadio.Group\n          name=\"box\"\n          label=\"Box 匹配\"\n          options={[\n            { label: '全图鉴满突破 Box', value: 'whole' },\n            { label: '我的自定义 Box', value: 'my-box', disabled: true },\n          ]}\n          allowClear={false}\n          radioType=\"button\"\n          rules={[{ required: true }]}\n        />\n      </QueryFilter>\n      {solutionResult?.scenarios.length ? (\n        <Typography.Paragraph>\n          已为您找到 {solutionResult?.scenarios.length}{' '}\n          个队伍方案，总分数由高至低排列\n        </Typography.Paragraph>\n      ) : null}\n      <List\n        dataSource={solutionResult?.scenarios}\n        pagination={{ align: 'center' }}\n        rowKey={sc => sc.copilots.map(c => c.bv).join('')}\n        renderItem={item => {\n          return (\n            <div\n              key={item.copilots.map(c => c.bv).join('')}\n              style={{ marginBottom: '1rem' }}\n            >\n              <SolutionScenarioCard\n                solution={item}\n                title={`方案: ${numeral(item.totalScore).format('0,0')} 分`}\n              />\n            </div>\n          );\n        }}\n      />\n    </>\n  );\n};\n","import { useModel } from '@modern-js/runtime/model';\nimport { Button, Result } from 'antd';\nimport { Link } from '@modern-js/runtime/router';\nimport { TermsModel } from '@/models/terms';\nimport { RoutePath } from '@/components/MyLayout/constants';\n\nexport const TermNotFound: React.FC = () => {\n  const [{ firstTerm }] = useModel(TermsModel);\n\n  return (\n    <Result\n      status=\"404\"\n      title=\"荒典作业不见了\"\n      subTitle=\"检查链接是否正确或返回最近荒典作业\"\n      extra={\n        firstTerm ? (\n          <Link to={RoutePath.Copilots(firstTerm.term)}>\n            <Button type=\"primary\">返回最近作业</Button>\n          </Link>\n        ) : (\n          <Link to={RoutePath.Home}>\n            <Button type=\"primary\">返回首页</Button>\n          </Link>\n        )\n      }\n    />\n  );\n};\n","import { useParams } from '@modern-js/runtime/router';\nimport useSWR from 'swr';\nimport { PageContainer } from '@ant-design/pro-layout';\nimport type { CopilotType } from '@sinsa/schema';\nimport { useMemo } from 'react';\nimport { fetcher } from '@/utils/swr';\nimport { TermNotFound } from '@/containers/TermNotFound';\nimport { CopilotHeader } from '@/containers/CopilotHeader';\nimport { CopilotSolution } from '@/containers/CopilotSolution';\nimport { CopilotsTable } from '@/components/CopilotsTable';\n\nconst CopilotPage: React.FC = () => {\n  const params = useParams<{ term: `${number}` }>();\n\n  const { data, error, isLoading } = useSWR<\n    Record<CopilotType['bv'], CopilotType>\n  >(`/api/copilots/${params.term}.json`, fetcher);\n\n  const copilots = useMemo(() => Object.values(data ?? []), [data]);\n\n  if (error) {\n    return <TermNotFound />;\n  }\n\n  return (\n    <PageContainer\n      content={<CopilotHeader />}\n      title=\"荒典作业\"\n      loading={isLoading}\n    >\n      <CopilotsTable term={params.term} dataSource={copilots} />\n      <CopilotSolution dataSource={copilots} />\n    </PageContainer>\n  );\n};\n\nexport default CopilotPage;\n","import type { CopilotType } from '@sinsa/schema';\nimport { produce } from 'immer';\nimport { boxWithoutAuroriansInCopilot } from './helpers/box-without-aurorians-in-copilot';\nimport { canUseCopilot } from './helpers/can-use-copilot';\nimport type { SolutionContext, SolutionResult } from './types';\n\n/**\n * 计算所有的队伍方案和具体分数\n * @param context 解决方案上下文\n * @param k 队伍数量\n */\nexport function calculateAllScenariosAndScores(\n  context: SolutionContext,\n  k = 3,\n): SolutionResult {\n  const result: SolutionResult = {\n    scenarios: [],\n  };\n\n  function generateAllScenarios(\n    currentCopilotIndex: number,\n    availableBox: SolutionContext['availableBox'],\n    currentScenario: CopilotType[],\n    count: number,\n  ) {\n    // 一般情况，已经处理完所有的作业或者已经满足队伍数量\n    if (count === 0 || currentCopilotIndex === context.copilots.length) {\n      // 至少也要给出两队\n      if (currentScenario.length >= k) {\n        result.scenarios.push({\n          copilots: [...currentScenario],\n          totalScore: currentScenario.reduce(\n            (score, next) => score + BigInt(next.score),\n            BigInt(0),\n          ),\n        });\n      }\n      return;\n    }\n    // 尝试使用当前作业\n    const currentCopilot = context.copilots[currentCopilotIndex];\n    if (canUseCopilot(availableBox, currentCopilot)) {\n      const remainingBox = boxWithoutAuroriansInCopilot(\n        availableBox,\n        currentCopilot,\n      );\n\n      generateAllScenarios(\n        currentCopilotIndex + 1,\n        remainingBox,\n        [...currentScenario, currentCopilot],\n        count - 1,\n      );\n    }\n\n    // 递归处理不使用当前作业\n    generateAllScenarios(\n      currentCopilotIndex + 1,\n      availableBox,\n      currentScenario,\n      count,\n    );\n  }\n\n  generateAllScenarios(0, context.availableBox, [], k);\n\n  result.scenarios = produce(result.scenarios, draft => {\n    draft.sort((a, b) => Number(b.totalScore - a.totalScore));\n  });\n\n  return result;\n}\n","import type { CopilotType, MyBoxType } from '@sinsa/schema';\nimport { produce } from 'immer';\n\nexport function boxWithoutAuroriansInCopilot(\n  myBox: MyBoxType['aurorian_summaries'],\n  copilot: CopilotType,\n) {\n  return produce(myBox, draft => {\n    for (const aurorianInCopilot of copilot.aurorian_summaries) {\n      // 0. 如果作业中的光灵本身是可替换的，则跳过此光灵判断\n      if (aurorianInCopilot.is_replaceable) {\n        continue;\n      }\n\n      delete draft[aurorianInCopilot.aurorian_name];\n    }\n  });\n}\n","import type {\n  CopilotType,\n  MyBoxType,\n  AurorianSummaryType,\n} from '@sinsa/schema';\n\n/**\n * 我的 Box 能否抄这个作业\n * @param copilot 作业\n * @param myBox 我的 Box\n * @returns 我的 Box 能否抄这个作业\n */\nexport function canUseCopilot(\n  myBox: MyBoxType['aurorian_summaries'],\n  copilot: CopilotType,\n): boolean {\n  for (const aurorianInCopilot of copilot.aurorian_summaries) {\n    // 0. 如果作业中的光灵本身是可替换的，则跳过此光灵判断\n    if (aurorianInCopilot.is_replaceable) {\n      continue;\n    }\n\n    const aurorianInMyBox = myBox[aurorianInCopilot.aurorian_name] as\n      | AurorianSummaryType\n      | undefined;\n\n    // 1. 光灵本身不存在于我的 box\n    if (!aurorianInMyBox) {\n      return false;\n    }\n\n    // 2. 如果我的 box 光灵突破低于作业要求突破\n    if (aurorianInMyBox.breakthrough < aurorianInCopilot.breakthrough) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","export function fetcher(url: string) {\n  return fetch(url).then(r => r.json());\n}\n"],"names":["AurorianCard","name","breakthrough","isReplaceable","auroriansMap","useModel","AuroriansModel","aurorian","useMemo","cardRef","useRef","useEffect","aurorian_name","then","esm","default","current","style","backgroundImage","console","log","catch","Badge","fontSize","display","zIndex","text","undefined","className","ref","class","attribute","alt","src","ClassURLMapper","ElementURLMapper","secondary_attribute","title","aurorian_cn_name","rarity","ConfigProvider","theme","components","Rate","starBg","starSize","disabled","value","count","RarityMapper","AuroriansTeam","aurorianSummaries","map","is_replaceable","copilotsColumns","dataIndex","hideInSearch","render","_","entity","aurorian_summaries","width","valueType","ellipsis","dom","Typography","href","bv","target","copilotRowKey","c","CopilotsTable","dataSource","term","actionRef","deps","request","useCallback","params","data","filter","item","ok","includes","success","ProTable","toolbar","rowKey","columns","pagination","pageSize","size","position","SolutionScenarioCard","solution","produce","copilots","draft","sort","a","b","Number","score","settings","search","CopilotHeader","useParams","terms","TermsModel","navigate","useNavigate","Select","parseInt","options","termsOptions","placeholder","onChange","nextTerm","RoutePath","CopilotSolution","WHOLE_BOX","solutionResult","setSolutionResult","useState","level","QueryFilter","defaultCollapsed","onFinish","calculateAllScenariosAndScores","availableBox","k","searchText","initialValues","box","ProFormRadio","label","rules","required","allowClear","radioType","scenarios","length","List","align","sc","join","renderItem","marginBottom","totalScore","format","TermNotFound","firstTerm","Result","status","subTitle","extra","Link","to","Button","type","error","isLoading","fetcher","Object","values","PageContainer","content","loading","context","result","generateAllScenarios","currentCopilotIndex","currentScenario","push","reduce","next","BigInt","currentCopilot","canUseCopilot","boxWithoutAuroriansInCopilot","myBox","copilot","aurorianInCopilot","aurorianInMyBox","url","fetch","r","json"],"mappings":"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"}