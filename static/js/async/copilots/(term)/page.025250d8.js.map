{"version":3,"file":"static/js/async/copilots/(term)/page.025250d8.js","sources":["./src/components/AurorianCard/index.tsx","./src/components/AuroriansTeam/index.tsx","./src/components/CopilotsTable/columns.tsx","./src/components/CopilotsTable/index.tsx","./src/components/SolutionScenarioCard/index.tsx","./src/containers/CopilotHeader.tsx","./src/containers/CopilotSolution.tsx","./src/containers/TermNotFound.tsx","./src/routes/copilots/[term]/page.tsx","./src/features/backtrack/calculate-all-scenarios-and-scores.ts","./src/features/backtrack/helpers/box-without-aurorians-in-copilot.ts","./src/features/backtrack/helpers/can-use-copilot.ts","./src/utils/swr.ts"],"sourcesContent":["import React, { useEffect, useMemo, useRef } from 'react';\nimport { useModel } from '@modern-js/runtime/model';\nimport { type AurorianType } from '@sinsa/schema';\nimport { Badge, ConfigProvider, Rate } from 'antd';\nimport styles from './styles.module.less';\nimport { ClassURLMapper, ElementURLMapper, RarityMapper } from './constants';\nimport { AuroriansModel } from '@/models/aurorians';\n\ninterface AurorianCardProps {\n  name: string;\n  breakthrough: number;\n  isReplaceable?: boolean;\n}\n\nexport const AurorianCard = React.memo<AurorianCardProps>(\n  ({ name, breakthrough, isReplaceable }) => {\n    const [{ auroriansMap }] = useModel(AuroriansModel);\n    const aurorian = useMemo(\n      () => auroriansMap[name] as AurorianType | undefined,\n      [auroriansMap, name],\n    );\n\n    const cardRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n      if (aurorian?.aurorian_name) {\n        import(`@/assets/skins/${aurorian.aurorian_name}.webp`)\n          .then(esm => {\n            if (typeof esm?.default === 'string') {\n              if (cardRef.current) {\n                cardRef.current.style.backgroundImage = `url(${esm.default})`;\n              }\n            }\n          })\n          .catch(() => {\n            // ignore\n          });\n      }\n    }, [aurorian?.aurorian_name]);\n\n    return (\n      <Badge.Ribbon\n        style={{\n          fontSize: '12px',\n          display: isReplaceable ? 'block' : 'none',\n          zIndex: 10000,\n        }}\n        text={isReplaceable ? '可替' : undefined}\n      >\n        <div className={styles.AurorianCard} ref={cardRef}>\n          {aurorian?.class && aurorian?.attribute ? (\n            <div className={styles.MetaContainer}>\n              <img\n                className={styles.MetaClass}\n                alt={aurorian.class}\n                src={ClassURLMapper[aurorian.class]}\n              />\n              <div className={styles.MetaAttributeContainer}>\n                <img\n                  className={styles.MetaFirstAttribute}\n                  alt={aurorian.attribute}\n                  src={ElementURLMapper[aurorian.attribute]}\n                />\n                {aurorian.secondary_attribute ? (\n                  <img\n                    className={styles.MetaSecondAttribute}\n                    alt={aurorian.secondary_attribute}\n                    src={ElementURLMapper[aurorian.secondary_attribute]}\n                  />\n                ) : null}\n              </div>\n            </div>\n          ) : null}\n          <div className={styles.NameContainer}>\n            <div title={aurorian?.aurorian_name}>\n              {aurorian?.aurorian_cn_name}\n            </div>\n\n            {aurorian?.rarity ? (\n              <ConfigProvider\n                theme={{\n                  components: {\n                    Rate: {\n                      starBg: 'white',\n                      starSize: 10,\n                    },\n                  },\n                }}\n              >\n                <Rate\n                  className={styles.BreakThrough}\n                  disabled\n                  value={breakthrough}\n                  count={RarityMapper[aurorian.rarity]}\n                />\n              </ConfigProvider>\n            ) : null}\n          </div>\n        </div>\n      </Badge.Ribbon>\n    );\n  },\n);\n","import type { CopilotType } from '@sinsa/schema';\nimport React from 'react';\nimport { AurorianCard } from '../AurorianCard';\nimport styles from './styles.module.less';\n\ninterface AuroriansTeamProps {\n  aurorianSummaries: CopilotType['aurorian_summaries'];\n}\n\nexport const AuroriansTeam: React.FC<AuroriansTeamProps> = ({\n  aurorianSummaries,\n}) => {\n  return (\n    <div className={styles.AuroriansTeam}>\n      {aurorianSummaries.map(\n        ({ aurorian_name, breakthrough, is_replaceable }) => {\n          return (\n            <AurorianCard\n              key={aurorian_name}\n              name={aurorian_name}\n              breakthrough={breakthrough}\n              isReplaceable={is_replaceable}\n            />\n          );\n        },\n      )}\n    </div>\n  );\n};\n","import type { ProColumns } from '@ant-design/pro-table';\nimport type { CopilotType } from '@sinsa/schema';\nimport { Typography } from 'antd';\nimport { AuroriansTeam } from '../AuroriansTeam';\n\nexport interface TableParams {\n  title?: CopilotType['title'];\n  author?: CopilotType['author'];\n  term?: `${number}`;\n}\n\nexport const copilotsColumns: ProColumns<CopilotType>[] = [\n  {\n    title: '光灵配置',\n    dataIndex: 'aurorian_summaries',\n    hideInSearch: true,\n    render(_, entity) {\n      return <AuroriansTeam aurorianSummaries={entity.aurorian_summaries} />;\n    },\n    width: 80 * 5 + 48,\n  },\n  {\n    title: '结算分数',\n    dataIndex: 'score',\n    valueType: 'digit',\n    width: 130,\n    hideInSearch: true,\n  },\n  {\n    title: '作者',\n    dataIndex: 'author',\n    valueType: 'select',\n    hideInSearch: true,\n    ellipsis: true,\n    width: 150,\n  },\n  {\n    title: '标题',\n    dataIndex: 'title',\n    ellipsis: true,\n    render(dom, entity) {\n      return (\n        <Typography.Link\n          href={`https://b23.tv/${entity.bv}`}\n          target=\"_blank\"\n          title={entity.title}\n        >\n          {entity.title}\n        </Typography.Link>\n      );\n    },\n  },\n  {\n    title: '上传时间',\n    dataIndex: 'upload_time',\n    valueType: 'dateTime',\n    width: 160,\n  },\n];\n","import { useCallback, useMemo, useRef } from 'react';\nimport type { ActionType } from '@ant-design/pro-table';\nimport { ProTable } from '@ant-design/pro-table';\nimport type { CopilotType } from '@sinsa/schema';\nimport { type TableParams, copilotsColumns } from './columns';\n\ninterface CopilotsTableProps {\n  dataSource: CopilotType[];\n  term?: `${number}`;\n}\n\nexport function copilotRowKey(c: CopilotType) {\n  return c.bv;\n}\n\nconst TABLE_CONST_PROPS = {\n  pagination: {\n    pageSize: 5,\n    size: 'default',\n    position: ['bottomCenter'] as any,\n  },\n  scroll: { x: 'max-content', scrollToFirstRowOnChange: true },\n  toolbar: { title: '收录作业' },\n} as const;\n\nexport const CopilotsTable: React.FC<CopilotsTableProps> = ({\n  dataSource,\n  term,\n}) => {\n  const actionRef = useRef<ActionType>();\n\n  const deps = useMemo((): TableParams => ({ term }), [term]);\n\n  const request = useCallback(async (params: TableParams) => {\n    return {\n      data: dataSource.filter(item => {\n        let ok = true;\n        if (params.title) {\n          ok = item.title.includes(params.title);\n        }\n        return ok;\n      }),\n      success: true,\n    };\n  }, []);\n\n  return (\n    <ProTable<CopilotType, TableParams>\n      rowKey={copilotRowKey}\n      actionRef={actionRef}\n      columns={copilotsColumns}\n      params={deps}\n      request={request}\n      {...TABLE_CONST_PROPS}\n    />\n  );\n};\n","import { ProTable } from '@ant-design/pro-table';\nimport { CopilotType } from '@sinsa/schema';\nimport { useCallback, useMemo } from 'react';\nimport { produce } from 'immer';\nimport { copilotRowKey } from '../CopilotsTable';\nimport { copilotsColumns } from '../CopilotsTable/columns';\nimport type { SolutionScenario } from '@/features/backtrack/types';\n\ninterface SolutionScenarioCardProps {\n  solution: SolutionScenario;\n  title: string;\n}\n\nexport const SolutionScenarioCard: React.FC<SolutionScenarioCardProps> = ({\n  solution,\n  title,\n}) => {\n  const request = useCallback(async () => {\n    return {\n      data: produce(solution.copilots, draft => {\n        draft.sort((a, b) => Number(b.score - a.score));\n      }),\n      success: true,\n    };\n  }, []);\n\n  const toolbar = useMemo(() => ({ title, settings: [] }), [title]);\n\n  const scroll = useMemo(() => ({ x: 'max-content' }), []);\n\n  return (\n    <ProTable<CopilotType>\n      toolbar={toolbar}\n      rowKey={copilotRowKey}\n      columns={copilotsColumns}\n      request={request}\n      search={false}\n      pagination={false}\n      size=\"small\"\n      scroll={scroll}\n    />\n  );\n};\n","import { useModel } from '@modern-js/runtime/model';\nimport { Select } from 'antd';\nimport { useNavigate, useParams } from '@modern-js/runtime/router';\nimport { TermsModel } from '@/models/terms';\nimport { RoutePath } from '@/components/MyLayout/constants';\n\nexport const CopilotHeader: React.FC = () => {\n  const params = useParams<{ term: `${number}` }>();\n  const [terms] = useModel(TermsModel);\n  const navigate = useNavigate();\n  return (\n    <Select\n      value={params.term && Number.parseInt(params.term, 10)}\n      options={terms.termsOptions}\n      placeholder=\"荒典期数\"\n      onChange={(nextTerm: number) => {\n        navigate(RoutePath.Copilots(nextTerm));\n      }}\n    />\n  );\n};\n","import { ProFormRadio, ProFormSwitch, QueryFilter } from '@ant-design/pro-form';\nimport { CopilotType } from '@sinsa/schema';\nimport { List, Typography } from 'antd';\nimport { useState } from 'react';\nimport { useModel } from '@modern-js/runtime/model';\nimport numeral from 'numeral';\nimport { calculateAllScenariosAndScores } from '@/features/backtrack/calculate-all-scenarios-and-scores';\nimport { AuroriansModel } from '@/models/aurorians';\nimport { SolutionResult } from '@/features/backtrack/types';\nimport { SolutionScenarioCard } from '@/components/SolutionScenarioCard';\n\ninterface CopilotSolutionProps {\n  dataSource: CopilotType[];\n}\n\ninterface QueryParams {\n  k: number;\n  box: 'whole' | 'my-box';\n  disalbeAlternative?: boolean;\n}\n\nexport const CopilotSolution: React.FC<CopilotSolutionProps> = ({\n  dataSource,\n}) => {\n  const [{ WHOLE_BOX }] = useModel(AuroriansModel);\n  const [solutionResult, setSolutionResult] = useState<SolutionResult>();\n\n  return (\n    <>\n      <Typography.Title level={3}>寻找队伍方案</Typography.Title>\n      <QueryFilter<QueryParams>\n        defaultCollapsed\n        onFinish={async params => {\n          const result = calculateAllScenariosAndScores(\n            {\n              copilots: dataSource,\n              availableBox: WHOLE_BOX.aurorian_summaries,\n            },\n            params.k,\n            { disalbeAlternative: params.disalbeAlternative },\n          );\n\n          setSolutionResult(result);\n        }}\n        searchText=\"寻找队伍方案\"\n        initialValues={{ k: 3, box: 'whole' }}\n        layout=\"vertical\"\n      >\n        <ProFormRadio.Group\n          name=\"k\"\n          label=\"队伍数量\"\n          rules={[{ required: true }]}\n          options={[\n            { label: '两支队伍', value: 2 },\n            { label: '三支队伍', value: 3 },\n            { label: '四支队伍', value: 4 },\n          ]}\n          allowClear={false}\n          radioType=\"button\"\n        />\n        <ProFormRadio.Group\n          name=\"box\"\n          label=\"Box 匹配\"\n          options={[\n            { label: '全图鉴满突破 Box', value: 'whole' },\n            { label: '我的自定义 Box', value: 'my-box', disabled: true },\n          ]}\n          allowClear={false}\n          radioType=\"button\"\n          rules={[{ required: true }]}\n        />\n        <ProFormSwitch\n          name={'disalbeAlternative'}\n          label=\"不考虑可替自由位\"\n          tooltip=\"开启后，计算的队伍方案中绝对不会出现重复光灵，满足图鉴大佬的强迫症\"\n        />\n      </QueryFilter>\n      {solutionResult?.scenarios.length ? (\n        <Typography.Paragraph>\n          已为您找到 {solutionResult?.scenarios.length}{' '}\n          个队伍方案，总分数由高至低排列\n        </Typography.Paragraph>\n      ) : null}\n      <List\n        dataSource={solutionResult?.scenarios}\n        pagination={{ align: 'center' }}\n        rowKey={sc => sc.copilots.map(c => c.bv).join('')}\n        renderItem={item => {\n          return (\n            <div\n              key={item.copilots.map(c => c.bv).join('')}\n              style={{ marginBottom: '1rem' }}\n            >\n              <SolutionScenarioCard\n                solution={item}\n                title={`方案: ${numeral(item.totalScore).format('0,0')} 分`}\n              />\n            </div>\n          );\n        }}\n      />\n    </>\n  );\n};\n","import { useModel } from '@modern-js/runtime/model';\nimport { Button, Result } from 'antd';\nimport { Link } from '@modern-js/runtime/router';\nimport { TermsModel } from '@/models/terms';\nimport { RoutePath } from '@/components/MyLayout/constants';\n\nexport const TermNotFound: React.FC = () => {\n  const [{ firstTerm }] = useModel(TermsModel);\n\n  return (\n    <Result\n      status=\"404\"\n      title=\"荒典作业不见了\"\n      subTitle=\"检查链接是否正确或返回最近荒典作业\"\n      extra={\n        firstTerm ? (\n          <Link to={RoutePath.Copilots(firstTerm.term)}>\n            <Button type=\"primary\">返回最近作业</Button>\n          </Link>\n        ) : (\n          <Link to={RoutePath.Home}>\n            <Button type=\"primary\">返回首页</Button>\n          </Link>\n        )\n      }\n    />\n  );\n};\n","import { useParams } from '@modern-js/runtime/router';\nimport useSWR from 'swr';\nimport { PageContainer } from '@ant-design/pro-layout';\nimport type { CopilotType } from '@sinsa/schema';\nimport { useMemo } from 'react';\nimport { fetcher } from '@/utils/swr';\nimport { TermNotFound } from '@/containers/TermNotFound';\nimport { CopilotHeader } from '@/containers/CopilotHeader';\nimport { CopilotSolution } from '@/containers/CopilotSolution';\nimport { CopilotsTable } from '@/components/CopilotsTable';\n\nconst CopilotPage: React.FC = () => {\n  const params = useParams<{ term: `${number}` }>();\n\n  const { data, error, isLoading } = useSWR<\n    Record<CopilotType['bv'], CopilotType>\n  >(`/api/copilots/${params.term}.json`, fetcher);\n\n  const copilots = useMemo(() => Object.values(data ?? []), [data]);\n\n  if (error) {\n    return <TermNotFound />;\n  }\n\n  return (\n    <PageContainer\n      content={<CopilotHeader />}\n      title=\"荒典作业\"\n      loading={isLoading}\n    >\n      <CopilotsTable term={params.term} dataSource={copilots} />\n      <CopilotSolution dataSource={copilots} />\n    </PageContainer>\n  );\n};\n\nexport default CopilotPage;\n","import type { CopilotType } from '@sinsa/schema';\nimport { produce } from 'immer';\nimport { boxWithoutAuroriansInCopilot } from './helpers/box-without-aurorians-in-copilot';\nimport { canUseCopilot } from './helpers/can-use-copilot';\nimport type { SolutionContext, SolutionResult } from './types';\n\ninterface CalcOptions {\n  /**\n   * 是否禁止可替换位置\n   */\n  disalbeAlternative?: boolean;\n}\n\n/**\n * 计算所有的队伍方案和具体分数\n * @param context 解决方案上下文\n * @param k 队伍数量\n */\nexport function calculateAllScenariosAndScores(\n  context: SolutionContext,\n  k = 3,\n  { disalbeAlternative }: CalcOptions = {},\n): SolutionResult {\n  const result: SolutionResult = {\n    scenarios: [],\n  };\n\n  function generateAllScenarios(\n    currentCopilotIndex: number,\n    availableBox: SolutionContext['availableBox'],\n    currentScenario: CopilotType[],\n    count: number,\n  ) {\n    // 一般情况，已经处理完所有的作业或者已经满足队伍数量\n    if (count === 0 || currentCopilotIndex === context.copilots.length) {\n      // 至少也要给出两队\n      if (currentScenario.length >= k) {\n        result.scenarios.push({\n          copilots: [...currentScenario],\n          totalScore: currentScenario.reduce(\n            (score, next) => score + BigInt(next.score),\n            BigInt(0),\n          ),\n        });\n      }\n      return;\n    }\n    // 尝试使用当前作业\n    const currentCopilot = context.copilots[currentCopilotIndex];\n    if (canUseCopilot(availableBox, currentCopilot, { disalbeAlternative })) {\n      const remainingBox = boxWithoutAuroriansInCopilot(\n        availableBox,\n        currentCopilot,\n        { disalbeAlternative },\n      );\n\n      generateAllScenarios(\n        currentCopilotIndex + 1,\n        remainingBox,\n        [...currentScenario, currentCopilot],\n        count - 1,\n      );\n    }\n\n    // 递归处理不使用当前作业\n    generateAllScenarios(\n      currentCopilotIndex + 1,\n      availableBox,\n      currentScenario,\n      count,\n    );\n  }\n\n  generateAllScenarios(0, context.availableBox, [], k);\n\n  result.scenarios = produce(result.scenarios, draft => {\n    draft.sort((a, b) => Number(b.totalScore - a.totalScore));\n  });\n\n  return result;\n}\n","import type { CopilotType, MyBoxType } from '@sinsa/schema';\nimport { produce } from 'immer';\n\nexport function boxWithoutAuroriansInCopilot(\n  myBox: MyBoxType['aurorian_summaries'],\n  copilot: CopilotType,\n  {\n    disalbeAlternative,\n  }: {\n    /**\n     * 是否禁止可替换位置\n     */\n    disalbeAlternative?: boolean;\n  },\n) {\n  return produce(myBox, draft => {\n    for (const aurorianInCopilot of copilot.aurorian_summaries) {\n      // 0. 如果作业中的光灵本身是可替换的，则跳过此光灵判断\n      if (!disalbeAlternative && aurorianInCopilot.is_replaceable) {\n        continue;\n      }\n\n      delete draft[aurorianInCopilot.aurorian_name];\n    }\n  });\n}\n","import type {\n  CopilotType,\n  MyBoxType,\n  AurorianSummaryType,\n} from '@sinsa/schema';\n\n/**\n * 我的 Box 能否抄这个作业\n * @param copilot 作业\n * @param myBox 我的 Box\n * @returns 我的 Box 能否抄这个作业\n */\nexport function canUseCopilot(\n  myBox: MyBoxType['aurorian_summaries'],\n  copilot: CopilotType,\n  {\n    disalbeAlternative,\n  }: {\n    disalbeAlternative?: boolean;\n  },\n): boolean {\n  for (const aurorianInCopilot of copilot.aurorian_summaries) {\n    // 0. 如果作业中的光灵本身是可替换的，则跳过此光灵判断\n    if (!disalbeAlternative && aurorianInCopilot.is_replaceable) {\n      continue;\n    }\n\n    const aurorianInMyBox = myBox[aurorianInCopilot.aurorian_name] as\n      | AurorianSummaryType\n      | undefined;\n\n    // 1. 光灵本身不存在于我的 box\n    if (!aurorianInMyBox) {\n      return false;\n    }\n\n    // 2. 如果我的 box 光灵突破低于作业要求突破\n    if (aurorianInMyBox.breakthrough < aurorianInCopilot.breakthrough) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","export function fetcher(url: string) {\n  return fetch(url).then(r => r.json());\n}\n"],"names":["AurorianCard","name","breakthrough","isReplaceable","auroriansMap","useModel","AuroriansModel","aurorian","useMemo","cardRef","useRef","useEffect","aurorian_name","then","esm","default","current","style","backgroundImage","catch","Badge","fontSize","display","zIndex","text","undefined","className","ref","class","attribute","alt","src","ClassURLMapper","ElementURLMapper","secondary_attribute","title","aurorian_cn_name","rarity","ConfigProvider","theme","components","Rate","starBg","starSize","disabled","value","count","RarityMapper","AuroriansTeam","aurorianSummaries","map","is_replaceable","copilotsColumns","dataIndex","hideInSearch","render","_","entity","aurorian_summaries","width","valueType","ellipsis","dom","Typography","href","bv","target","copilotRowKey","c","TABLE_CONST_PROPS","pagination","pageSize","size","position","scroll","x","scrollToFirstRowOnChange","toolbar","CopilotsTable","dataSource","term","actionRef","deps","request","useCallback","params","data","filter","item","ok","includes","success","ProTable","rowKey","columns","SolutionScenarioCard","solution","produce","copilots","draft","sort","a","b","Number","score","settings","search","CopilotHeader","useParams","terms","TermsModel","navigate","useNavigate","Select","parseInt","options","termsOptions","placeholder","onChange","nextTerm","RoutePath","CopilotSolution","WHOLE_BOX","solutionResult","setSolutionResult","useState","level","QueryFilter","defaultCollapsed","onFinish","calculateAllScenariosAndScores","availableBox","k","disalbeAlternative","searchText","initialValues","box","layout","ProFormRadio","label","rules","required","allowClear","radioType","ProFormSwitch","tooltip","scenarios","length","List","align","sc","join","renderItem","marginBottom","totalScore","format","TermNotFound","firstTerm","Result","status","subTitle","extra","Link","to","Button","type","error","isLoading","fetcher","Object","values","PageContainer","content","loading","context","result","generateAllScenarios","currentCopilotIndex","currentScenario","push","reduce","next","BigInt","currentCopilot","canUseCopilot","boxWithoutAuroriansInCopilot","myBox","copilot","aurorianInCopilot","aurorianInMyBox","url","fetch","r","json"],"mappings":"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"}