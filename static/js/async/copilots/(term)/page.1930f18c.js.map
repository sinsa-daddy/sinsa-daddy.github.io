{"version":3,"file":"static/js/async/copilots/(term)/page.1930f18c.js","mappings":"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","sources":["webpack://@sinsa/web/./src/utils/swr.ts","webpack://@sinsa/web/./src/containers/TermNotFound.tsx","webpack://@sinsa/web/./src/containers/CopilotHeader.tsx","webpack://@sinsa/web/./src/features/backtrack/calculate-all-scenarios-and-scores.ts","webpack://@sinsa/web/./src/features/backtrack/helpers/can-use-copilot.ts","webpack://@sinsa/web/./src/features/backtrack/helpers/box-without-aurorians-in-copilot.ts","webpack://@sinsa/web/./src/components/AurorianCard/styles.module.less","webpack://@sinsa/web/./src/components/AurorianCard/index.tsx","webpack://@sinsa/web/./src/components/AuroriansTeam/styles.module.less","webpack://@sinsa/web/./src/components/AuroriansTeam/index.tsx","webpack://@sinsa/web/./src/components/CopilotsTable/columns.tsx","webpack://@sinsa/web/./src/components/CopilotsTable/index.tsx","webpack://@sinsa/web/./src/components/SolutionScenarioCard/index.tsx","webpack://@sinsa/web/./src/containers/CopilotSolution.tsx","webpack://@sinsa/web/./src/routes/copilots/[term]/page.tsx"],"sourcesContent":["export function fetcher(url: string) {\n  return fetch(url).then(r => r.json());\n}\n","import { useModel } from '@modern-js/runtime/model';\nimport { Button, Result } from 'antd';\nimport { Link } from '@modern-js/runtime/router';\nimport { TermsModel } from '@/models/terms';\nimport { RoutePath } from '@/components/MyLayout/constants';\n\nexport const TermNotFound: React.FC = () => {\n  const [{ firstTerm }] = useModel(TermsModel);\n\n  return (\n    <Result\n      status=\"404\"\n      title=\"荒典作业不见了\"\n      subTitle=\"检查链接是否正确或返回最近荒典作业\"\n      extra={\n        firstTerm ? (\n          <Link to={RoutePath.Copilots(firstTerm.term)}>\n            <Button type=\"primary\">返回最近作业</Button>\n          </Link>\n        ) : (\n          <Link to={RoutePath.Home}>\n            <Button type=\"primary\">返回首页</Button>\n          </Link>\n        )\n      }\n    />\n  );\n};\n","import { useModel } from '@modern-js/runtime/model';\nimport { Select } from 'antd';\nimport { useNavigate, useParams } from '@modern-js/runtime/router';\nimport { TermsModel } from '@/models/terms';\nimport { RoutePath } from '@/components/MyLayout/constants';\n\nexport const CopilotHeader: React.FC = () => {\n  const params = useParams<{ term: `${number}` }>();\n  const [terms] = useModel(TermsModel);\n  const navigate = useNavigate();\n  return (\n    <Select\n      value={params.term && Number.parseInt(params.term, 10)}\n      options={terms.termsOptions}\n      placeholder=\"荒典期数\"\n      onChange={(nextTerm: number) => {\n        navigate(RoutePath.Copilots(nextTerm));\n      }}\n    />\n  );\n};\n","import type { CopilotType } from '@sinsa/schema';\nimport { produce } from 'immer';\nimport { boxWithoutAuroriansInCopilot } from './helpers/box-without-aurorians-in-copilot';\nimport { canUseCopilot } from './helpers/can-use-copilot';\nimport type { SolutionContext, SolutionResult } from './types';\n\ninterface CalcOptions {\n  /**\n   * 是否禁止可替换位置\n   */\n  disalbeAlternative?: boolean;\n}\n\n/**\n * 计算所有的队伍方案和具体分数\n * @param context 解决方案上下文\n * @param k 队伍数量\n */\nexport function calculateAllScenariosAndScores(\n  context: SolutionContext,\n  k = 3,\n  { disalbeAlternative }: CalcOptions = {},\n): SolutionResult {\n  const result: SolutionResult = {\n    scenarios: [],\n  };\n\n  function generateAllScenarios(\n    currentCopilotIndex: number,\n    availableBox: SolutionContext['availableBox'],\n    currentScenario: CopilotType[],\n    count: number,\n  ) {\n    // 一般情况，已经处理完所有的作业或者已经满足队伍数量\n    if (count === 0 || currentCopilotIndex === context.copilots.length) {\n      // 至少也要给出两队\n      if (currentScenario.length >= k) {\n        result.scenarios.push({\n          copilots: [...currentScenario],\n          totalScore: currentScenario.reduce(\n            (score, next) => score + BigInt(next.score),\n            BigInt(0),\n          ),\n        });\n      }\n      return;\n    }\n    // 尝试使用当前作业\n    const currentCopilot = context.copilots[currentCopilotIndex];\n    if (canUseCopilot(availableBox, currentCopilot, { disalbeAlternative })) {\n      const remainingBox = boxWithoutAuroriansInCopilot(\n        availableBox,\n        currentCopilot,\n        { disalbeAlternative },\n      );\n\n      generateAllScenarios(\n        currentCopilotIndex + 1,\n        remainingBox,\n        [...currentScenario, currentCopilot],\n        count - 1,\n      );\n    }\n\n    // 递归处理不使用当前作业\n    generateAllScenarios(\n      currentCopilotIndex + 1,\n      availableBox,\n      currentScenario,\n      count,\n    );\n  }\n\n  generateAllScenarios(0, context.availableBox, [], k);\n\n  result.scenarios = produce(result.scenarios, draft => {\n    draft.sort((a, b) => Number(b.totalScore - a.totalScore));\n  });\n\n  return result;\n}\n","import type {\n  CopilotType,\n  MyBoxType,\n  AurorianSummaryType,\n} from '@sinsa/schema';\n\n/**\n * 我的 Box 能否抄这个作业\n * @param copilot 作业\n * @param myBox 我的 Box\n * @returns 我的 Box 能否抄这个作业\n */\nexport function canUseCopilot(\n  myBox: MyBoxType['aurorian_summaries'],\n  copilot: CopilotType,\n  {\n    disalbeAlternative,\n  }: {\n    disalbeAlternative?: boolean;\n  },\n): boolean {\n  for (const aurorianInCopilot of copilot.aurorian_summaries) {\n    // 0. 如果作业中的光灵本身是可替换的，则跳过此光灵判断\n    if (!disalbeAlternative && aurorianInCopilot.is_replaceable) {\n      continue;\n    }\n\n    const aurorianInMyBox = myBox[aurorianInCopilot.aurorian_name] as\n      | AurorianSummaryType\n      | undefined;\n\n    // 1. 光灵本身不存在于我的 box\n    if (!aurorianInMyBox) {\n      return false;\n    }\n\n    // 2. 如果我的 box 光灵突破低于作业要求突破\n    if (aurorianInMyBox.breakthrough < aurorianInCopilot.breakthrough) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","import type { CopilotType, MyBoxType } from '@sinsa/schema';\nimport { produce } from 'immer';\n\nexport function boxWithoutAuroriansInCopilot(\n  myBox: MyBoxType['aurorian_summaries'],\n  copilot: CopilotType,\n  {\n    disalbeAlternative,\n  }: {\n    /**\n     * 是否禁止可替换位置\n     */\n    disalbeAlternative?: boolean;\n  },\n) {\n  return produce(myBox, draft => {\n    for (const aurorianInCopilot of copilot.aurorian_summaries) {\n      // 0. 如果作业中的光灵本身是可替换的，则跳过此光灵判断\n      if (!disalbeAlternative && aurorianInCopilot.is_replaceable) {\n        continue;\n      }\n\n      delete draft[aurorianInCopilot.aurorian_name];\n    }\n  });\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"AurorianCard\":\"AurorianCard-Xue7wW\",\"aurorianCard\":\"AurorianCard-Xue7wW\",\"Skin\":\"Skin-ZCSfLL\",\"skin\":\"Skin-ZCSfLL\",\"BlackContainer\":\"BlackContainer-KqzHeu\",\"blackContainer\":\"BlackContainer-KqzHeu\",\"MetaContainer\":\"MetaContainer-VBs_Be\",\"metaContainer\":\"MetaContainer-VBs_Be\",\"MetaClass\":\"MetaClass-oogC_v\",\"metaClass\":\"MetaClass-oogC_v\",\"MetaAttributeContainer\":\"MetaAttributeContainer-oaQn6c\",\"metaAttributeContainer\":\"MetaAttributeContainer-oaQn6c\",\"MetaFirstAttribute\":\"MetaFirstAttribute-bRrn32\",\"metaFirstAttribute\":\"MetaFirstAttribute-bRrn32\",\"MetaSecondAttribute\":\"MetaSecondAttribute-C0kSzr\",\"metaSecondAttribute\":\"MetaSecondAttribute-C0kSzr\",\"NameContainer\":\"NameContainer-zUDWby\",\"nameContainer\":\"NameContainer-zUDWby\",\"BreakThrough\":\"BreakThrough-eMpTUR\",\"breakThrough\":\"BreakThrough-eMpTUR\"};","import React, { useEffect, useMemo, useRef } from 'react';\nimport { useModel } from '@modern-js/runtime/model';\nimport { type AurorianType } from '@sinsa/schema';\nimport { Badge, ConfigProvider, Rate } from 'antd';\nimport styles from './styles.module.less';\nimport { ClassURLMapper, ElementURLMapper, RarityMapper } from './constants';\nimport { AuroriansModel } from '@/models/aurorians';\n\ninterface AurorianCardProps {\n  name: string;\n  breakthrough: number;\n  isReplaceable?: boolean;\n}\n\nexport const AurorianCard = React.memo<AurorianCardProps>(\n  ({ name, breakthrough, isReplaceable }) => {\n    const [{ auroriansMap }] = useModel(AuroriansModel);\n    const aurorian = useMemo(\n      () => auroriansMap[name] as AurorianType | undefined,\n      [auroriansMap, name],\n    );\n\n    const cardRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n      if (aurorian?.aurorian_name) {\n        import(`@/assets/skins/${aurorian.aurorian_name}.webp`)\n          .then(esm => {\n            if (typeof esm?.default === 'string') {\n              if (cardRef.current) {\n                cardRef.current.style.backgroundImage = `url(${esm.default})`;\n              }\n            }\n          })\n          .catch(() => {\n            // ignore\n          });\n      }\n    }, [aurorian?.aurorian_name]);\n\n    return (\n      <Badge.Ribbon\n        style={{\n          fontSize: '12px',\n          display: isReplaceable ? 'block' : 'none',\n          zIndex: 10000,\n        }}\n        text={isReplaceable ? '可替' : undefined}\n      >\n        <div className={styles.AurorianCard} ref={cardRef}>\n          {aurorian?.class && aurorian?.attribute ? (\n            <div className={styles.MetaContainer}>\n              <img\n                className={styles.MetaClass}\n                alt={aurorian.class}\n                src={ClassURLMapper[aurorian.class]}\n              />\n              <div className={styles.MetaAttributeContainer}>\n                <img\n                  className={styles.MetaFirstAttribute}\n                  alt={aurorian.attribute}\n                  src={ElementURLMapper[aurorian.attribute]}\n                />\n                {aurorian.secondary_attribute ? (\n                  <img\n                    className={styles.MetaSecondAttribute}\n                    alt={aurorian.secondary_attribute}\n                    src={ElementURLMapper[aurorian.secondary_attribute]}\n                  />\n                ) : null}\n              </div>\n            </div>\n          ) : null}\n          <div className={styles.NameContainer}>\n            <div title={aurorian?.aurorian_name}>\n              {aurorian?.aurorian_cn_name}\n            </div>\n\n            {aurorian?.rarity ? (\n              <ConfigProvider\n                theme={{\n                  components: {\n                    Rate: {\n                      starBg: 'white',\n                      starSize: 10,\n                    },\n                  },\n                }}\n              >\n                <Rate\n                  className={styles.BreakThrough}\n                  disabled\n                  value={breakthrough}\n                  count={RarityMapper[aurorian.rarity]}\n                />\n              </ConfigProvider>\n            ) : null}\n          </div>\n        </div>\n      </Badge.Ribbon>\n    );\n  },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"AuroriansTeam\":\"AuroriansTeam-bW_gmF\",\"auroriansTeam\":\"AuroriansTeam-bW_gmF\"};","import type { CopilotType } from '@sinsa/schema';\nimport React from 'react';\nimport { AurorianCard } from '../AurorianCard';\nimport styles from './styles.module.less';\n\ninterface AuroriansTeamProps {\n  aurorianSummaries: CopilotType['aurorian_summaries'];\n}\n\nexport const AuroriansTeam: React.FC<AuroriansTeamProps> = ({\n  aurorianSummaries,\n}) => {\n  return (\n    <div className={styles.AuroriansTeam}>\n      {aurorianSummaries.map(\n        ({ aurorian_name, breakthrough, is_replaceable }) => {\n          return (\n            <AurorianCard\n              key={aurorian_name}\n              name={aurorian_name}\n              breakthrough={breakthrough}\n              isReplaceable={is_replaceable}\n            />\n          );\n        },\n      )}\n    </div>\n  );\n};\n","import type { ProColumns } from '@ant-design/pro-components';\nimport type { CopilotType } from '@sinsa/schema';\nimport { Typography } from 'antd';\nimport { AuroriansTeam } from '../AuroriansTeam';\n\nexport interface TableParams {\n  title?: CopilotType['title'];\n  author?: CopilotType['author'];\n  term?: `${number}`;\n}\n\nexport const copilotsColumns: ProColumns<CopilotType>[] = [\n  {\n    title: '光灵配置',\n    dataIndex: 'aurorian_summaries',\n    hideInSearch: true,\n    render(_, entity) {\n      return <AuroriansTeam aurorianSummaries={entity.aurorian_summaries} />;\n    },\n    width: 80 * 5 + 48,\n  },\n  {\n    title: '结算分数',\n    dataIndex: 'score',\n    valueType: 'digit',\n    width: 130,\n    hideInSearch: true,\n  },\n  {\n    title: '作者',\n    dataIndex: 'author',\n    valueType: 'select',\n    hideInSearch: true,\n    ellipsis: true,\n    width: 150,\n  },\n  {\n    title: '标题',\n    dataIndex: 'title',\n    ellipsis: true,\n    render(dom, entity) {\n      return (\n        <Typography.Link\n          href={`https://b23.tv/${entity.bv}`}\n          target=\"_blank\"\n          title={entity.title}\n        >\n          {entity.title}\n        </Typography.Link>\n      );\n    },\n  },\n  {\n    title: '上传时间',\n    dataIndex: 'upload_time',\n    valueType: 'dateTime',\n    width: 160,\n  },\n];\n","import { useCallback, useMemo, useRef } from 'react';\nimport type { ActionType } from '@ant-design/pro-components';\nimport { ProTable } from '@ant-design/pro-components';\nimport type { CopilotType } from '@sinsa/schema';\nimport { type TableParams, copilotsColumns } from './columns';\n\ninterface CopilotsTableProps {\n  dataSource: CopilotType[];\n  term?: `${number}`;\n}\n\nexport function copilotRowKey(c: CopilotType) {\n  return c.bv;\n}\n\nconst TABLE_CONST_PROPS = {\n  pagination: {\n    pageSize: 5,\n    size: 'default',\n    position: ['bottomCenter'] as any,\n  },\n  scroll: { x: 'max-content', scrollToFirstRowOnChange: true },\n  toolbar: { title: '收录作业' },\n} as const;\n\nexport const CopilotsTable: React.FC<CopilotsTableProps> = ({\n  dataSource,\n  term,\n}) => {\n  const actionRef = useRef<ActionType>();\n\n  const deps = useMemo((): TableParams => ({ term }), [term]);\n\n  const request = useCallback(async (params: TableParams) => {\n    return {\n      data: dataSource.filter(item => {\n        let ok = true;\n        if (params.title) {\n          ok = item.title.includes(params.title);\n        }\n        return ok;\n      }),\n      success: true,\n    };\n  }, []);\n\n  return (\n    <ProTable<CopilotType, TableParams>\n      rowKey={copilotRowKey}\n      actionRef={actionRef}\n      columns={copilotsColumns}\n      params={deps}\n      request={request}\n      {...TABLE_CONST_PROPS}\n    />\n  );\n};\n","import { ProTable } from '@ant-design/pro-components';\nimport { CopilotType } from '@sinsa/schema';\nimport { useCallback, useMemo } from 'react';\nimport { produce } from 'immer';\nimport { copilotRowKey } from '../CopilotsTable';\nimport { copilotsColumns } from '../CopilotsTable/columns';\nimport type { SolutionScenario } from '@/features/backtrack/types';\n\ninterface SolutionScenarioCardProps {\n  solution: SolutionScenario;\n  title: string;\n}\n\nexport const SolutionScenarioCard: React.FC<SolutionScenarioCardProps> = ({\n  solution,\n  title,\n}) => {\n  const request = useCallback(async () => {\n    return {\n      data: produce(solution.copilots, draft => {\n        draft.sort((a, b) => Number(b.score - a.score));\n      }),\n      success: true,\n    };\n  }, []);\n\n  const toolbar = useMemo(() => ({ title, settings: [] }), [title]);\n\n  const scroll = useMemo(() => ({ x: 'max-content' }), []);\n\n  return (\n    <ProTable<CopilotType>\n      toolbar={toolbar}\n      rowKey={copilotRowKey}\n      columns={copilotsColumns}\n      request={request}\n      search={false}\n      pagination={false}\n      size=\"small\"\n      scroll={scroll}\n    />\n  );\n};\n","import {\n  ProFormRadio,\n  ProFormSwitch,\n  QueryFilter,\n} from '@ant-design/pro-components';\nimport { CopilotType } from '@sinsa/schema';\nimport { List, Typography } from 'antd';\nimport { useState } from 'react';\nimport { useModel } from '@modern-js/runtime/model';\nimport numeral from 'numeral';\nimport { calculateAllScenariosAndScores } from '@/features/backtrack/calculate-all-scenarios-and-scores';\nimport { AuroriansModel } from '@/models/aurorians';\nimport { SolutionResult } from '@/features/backtrack/types';\nimport { SolutionScenarioCard } from '@/components/SolutionScenarioCard';\n\ninterface CopilotSolutionProps {\n  dataSource: CopilotType[];\n}\n\ninterface QueryParams {\n  k: number;\n  box: 'whole' | 'my-box';\n  disalbeAlternative?: boolean;\n}\n\nexport const CopilotSolution: React.FC<CopilotSolutionProps> = ({\n  dataSource,\n}) => {\n  const [{ WHOLE_BOX }] = useModel(AuroriansModel);\n  const [solutionResult, setSolutionResult] = useState<SolutionResult>();\n\n  return (\n    <>\n      <Typography.Title level={3}>寻找队伍方案</Typography.Title>\n      <QueryFilter<QueryParams>\n        defaultCollapsed\n        onFinish={async params => {\n          const result = calculateAllScenariosAndScores(\n            {\n              copilots: dataSource,\n              availableBox: WHOLE_BOX.aurorian_summaries,\n            },\n            params.k,\n            { disalbeAlternative: params.disalbeAlternative },\n          );\n\n          setSolutionResult(result);\n        }}\n        searchText=\"寻找队伍方案\"\n        initialValues={{ k: 3, box: 'whole' }}\n        layout=\"vertical\"\n      >\n        <ProFormRadio.Group\n          name=\"k\"\n          label=\"队伍数量\"\n          rules={[{ required: true }]}\n          options={[\n            { label: '两支队伍', value: 2 },\n            { label: '三支队伍', value: 3 },\n            { label: '四支队伍', value: 4 },\n          ]}\n          allowClear={false}\n          radioType=\"button\"\n        />\n        <ProFormRadio.Group\n          name=\"box\"\n          label=\"Box 匹配\"\n          options={[\n            { label: '全图鉴满突破 Box', value: 'whole' },\n            { label: '我的自定义 Box', value: 'my-box', disabled: true },\n          ]}\n          allowClear={false}\n          radioType=\"button\"\n          rules={[{ required: true }]}\n        />\n        <ProFormSwitch\n          name={'disalbeAlternative'}\n          label=\"不考虑可替自由位\"\n          tooltip=\"开启后，计算的队伍方案中绝对不会出现重复光灵，满足图鉴大佬的强迫症\"\n        />\n      </QueryFilter>\n      {solutionResult?.scenarios.length ? (\n        <Typography.Paragraph>\n          已为您找到 {solutionResult?.scenarios.length}{' '}\n          个队伍方案，总分数由高至低排列\n        </Typography.Paragraph>\n      ) : null}\n      <List\n        dataSource={solutionResult?.scenarios}\n        pagination={{ align: 'center' }}\n        rowKey={sc => sc.copilots.map(c => c.bv).join('')}\n        renderItem={item => {\n          return (\n            <div\n              key={item.copilots.map(c => c.bv).join('')}\n              style={{ marginBottom: '1rem' }}\n            >\n              <SolutionScenarioCard\n                solution={item}\n                title={`方案: ${numeral(item.totalScore).format('0,0')} 分`}\n              />\n            </div>\n          );\n        }}\n      />\n    </>\n  );\n};\n","import { useParams } from '@modern-js/runtime/router';\nimport useSWR from 'swr';\nimport { PageContainer } from '@ant-design/pro-components';\nimport type { CopilotType } from '@sinsa/schema';\nimport { useMemo } from 'react';\nimport { fetcher } from '@/utils/swr';\nimport { TermNotFound } from '@/containers/TermNotFound';\nimport { CopilotHeader } from '@/containers/CopilotHeader';\nimport { CopilotSolution } from '@/containers/CopilotSolution';\nimport { CopilotsTable } from '@/components/CopilotsTable';\n\nconst CopilotPage: React.FC = () => {\n  const params = useParams<{ term: `${number}` }>();\n\n  const { data, error, isLoading } = useSWR<\n    Record<CopilotType['bv'], CopilotType>\n  >(`/api/copilots/${params.term}.json`, fetcher);\n\n  const copilots = useMemo(() => Object.values(data ?? []), [data]);\n\n  if (error) {\n    return <TermNotFound />;\n  }\n\n  return (\n    <PageContainer\n      content={<CopilotHeader />}\n      title=\"荒典作业\"\n      loading={isLoading}\n    >\n      <CopilotsTable term={params.term} dataSource={copilots} />\n      <CopilotSolution dataSource={copilots} />\n    </PageContainer>\n  );\n};\n\nexport default CopilotPage;\n"],"names":["fetcher","url","fetch","then","r","json","TermNotFound","firstTerm","useModel","TermsModel","_jsx","Result","status","title","subTitle","extra","Link","to","RoutePath","Copilots","term","children","Button","type","Home","CopilotHeader","params","useParams","terms","navigate","useNavigate","Select","value","Number","parseInt","options","termsOptions","placeholder","onChange","nextTerm","calculateAllScenariosAndScores","context","k","disalbeAlternative","result","scenarios","generateAllScenarios","currentCopilotIndex","availableBox","currentScenario","count","copilots","length","push","totalScore","reduce","score","next","BigInt","currentCopilot","myBox","copilot","aurorianInCopilot","aurorian_summaries","is_replaceable","aurorianInMyBox","aurorian_name","breakthrough","canUseCopilot","remainingBox","produce","draft","boxWithoutAuroriansInCopilot","sort","a","b","AurorianCard","React","name","isReplaceable","auroriansMap","AuroriansModel","aurorian","useMemo","cardRef","useRef","useEffect","esm","default","current","style","backgroundImage","catch","Badge","Ribbon","fontSize","display","zIndex","text","undefined","_jsxs","className","styles","ref","class","attribute","alt","src","ClassURLMapper","ElementURLMapper","secondary_attribute","aurorian_cn_name","rarity","ConfigProvider","theme","components","Rate","starBg","starSize","disabled","RarityMapper","AuroriansTeam","aurorianSummaries","map","copilotsColumns","dataIndex","hideInSearch","render","_","entity","width","valueType","ellipsis","dom","Typography","href","bv","target","copilotRowKey","c","TABLE_CONST_PROPS","pagination","pageSize","size","position","scroll","x","scrollToFirstRowOnChange","toolbar","CopilotsTable","dataSource","actionRef","deps","request","useCallback","async","data","filter","item","ok","includes","success","ProTable","rowKey","columns","SolutionScenarioCard","solution","settings","search","CopilotSolution","WHOLE_BOX","solutionResult","setSolutionResult","useState","_Fragment","Title","level","QueryFilter","defaultCollapsed","onFinish","searchText","initialValues","box","layout","ProFormRadio","Group","label","rules","required","allowClear","radioType","ProFormSwitch","tooltip","Paragraph","List","align","sc","join","renderItem","marginBottom","numeral","format","CopilotPage","error","isLoading","useSWR","Object","values","PageContainer","content","loading"],"sourceRoot":""}