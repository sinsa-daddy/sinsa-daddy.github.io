{"version":3,"file":"static/js/async/copilots/(term)/page.ff2c35e8.js","sources":["../../packages/schema/dist/es/index.js","./src/components/AurorianCard/index.tsx","./src/components/AuroriansTeam/index.tsx","./src/components/CopilotsTable/columns.tsx","./src/components/CopilotsTable/index.tsx","./src/components/SolutionScenarioCard/index.tsx","./src/containers/CopilotHeader.tsx","./src/containers/CopilotSolution.tsx","./src/containers/TermNotFound.tsx","./src/routes/copilots/[term]/page.tsx","./src/components/AurorianCard/constants.ts","./src/features/backtrack/calculate-all-scenarios-and-scores.ts","./src/features/backtrack/helpers/box-without-aurorians-in-copilot.ts","./src/features/backtrack/helpers/can-use-copilot.ts","./src/utils/swr.ts"],"sourcesContent":["// src/schema/aurorian.ts\nimport { z } from \"zod\";\nvar AurorianAttributeType = /* @__PURE__ */ ((AurorianAttributeType2) => {\n  AurorianAttributeType2[\"Forest\"] = \"Forest\";\n  AurorianAttributeType2[\"Water\"] = \"Water\";\n  AurorianAttributeType2[\"Fire\"] = \"Fire\";\n  AurorianAttributeType2[\"Thunder\"] = \"Thunder\";\n  return AurorianAttributeType2;\n})(AurorianAttributeType || {});\nvar AurorianClassType = /* @__PURE__ */ ((AurorianClassType2) => {\n  AurorianClassType2[\"Detonator\"] = \"Detonator\";\n  AurorianClassType2[\"Sniper\"] = \"Sniper\";\n  AurorianClassType2[\"Converter\"] = \"Converter\";\n  AurorianClassType2[\"Supporter\"] = \"Supporter\";\n  return AurorianClassType2;\n})(AurorianClassType || {});\nvar AurorianRarityType = /* @__PURE__ */ ((AurorianRarityType2) => {\n  AurorianRarityType2[\"Star6\"] = \"6\";\n  AurorianRarityType2[\"Star5\"] = \"5\";\n  AurorianRarityType2[\"Star4\"] = \"4\";\n  AurorianRarityType2[\"Star3\"] = \"3\";\n  AurorianRarityType2[\"Star2\"] = \"2\";\n  AurorianRarityType2[\"Star1\"] = \"1\";\n  return AurorianRarityType2;\n})(AurorianRarityType || {});\nvar AurorianSchema = z.object({\n  aurorian_name: z.string().describe(\"光灵英文名，以此作为唯一标识\"),\n  aurorian_cn_name: z.string().describe(\"光灵简体中文名\"),\n  attribute: z.nativeEnum(AurorianAttributeType).describe(\"光灵属性\"),\n  secondary_attribute: z.optional(z.nativeEnum(AurorianAttributeType)).describe(\"光灵副属性\"),\n  class: z.nativeEnum(AurorianClassType).describe(\"光灵职业类型\"),\n  rarity: z.nativeEnum(AurorianRarityType).describe(\"光灵稀有度（星级）\"),\n  server: z.enum([\"cn\", \"global\"]).array().describe(\"光灵所在服务器（国服、国际服）\")\n});\n\n// src/schema/copilot.ts\nimport { z as z3 } from \"zod\";\n\n// src/schema/my-box.ts\nimport { z as z2 } from \"zod\";\nvar AurorianSummarySchema = z2.object({\n  aurorian_name: z2.string().describe(\"光灵英文名，以此作为唯一标识\"),\n  breakthrough: z2.number().min(0).max(6).describe(\"光灵突破数（黄色星星数量）\")\n});\nvar MyBoxSchema = z2.object({\n  title: z2.string().describe(\"给该 Box 取一个名字\"),\n  create_time: z2.coerce.date().describe(\"此 Box 创建时间\"),\n  version: z2.literal(1).describe(\"该 Schema 版本\"),\n  aurorian_summaries: z2.record(AurorianSummarySchema).describe(\"拥有的光灵\")\n});\n\n// src/schema/copilot.ts\nvar RemoteCopilotSchema = z3.object({\n  bv: z3.string().startsWith(\"BV\"),\n  title: z3.string(),\n  description: z3.optional(z3.string()),\n  author: z3.string(),\n  insert_db_time: z3.coerce.date(),\n  upload_time: z3.coerce.date(),\n  score: z3.coerce.bigint(),\n  term: z3.tuple([\n    z3.object({\n      text: z3.string()\n    })\n  ]),\n  replaceable_position: z3.optional(z3.string().array()),\n  aurorian_1: z3.tuple([\n    z3.object({\n      text: z3.string()\n    })\n  ]),\n  aurorian_1_breakthrough: z3.coerce.number().min(0).max(6),\n  aurorian_2: z3.tuple([\n    z3.object({\n      text: z3.string()\n    })\n  ]),\n  aurorian_2_breakthrough: z3.coerce.number().min(0).max(6),\n  aurorian_3: z3.tuple([\n    z3.object({\n      text: z3.string()\n    })\n  ]),\n  aurorian_3_breakthrough: z3.coerce.number().min(0).max(6),\n  aurorian_4: z3.tuple([\n    z3.object({\n      text: z3.string()\n    })\n  ]),\n  aurorian_4_breakthrough: z3.coerce.number().min(0).max(6),\n  aurorian_5: z3.tuple([\n    z3.object({\n      text: z3.string()\n    })\n  ]),\n  aurorian_5_breakthrough: z3.coerce.number().min(0).max(6)\n});\nvar CopilotAurorianSummarySchema = AurorianSummarySchema.extend({\n  is_replaceable: z3.boolean()\n});\nvar CopilotSchema = z3.object({\n  bv: z3.string().startsWith(\"BV\"),\n  title: z3.string(),\n  description: z3.optional(z3.string()),\n  author: z3.string(),\n  insert_db_time: z3.coerce.date(),\n  upload_time: z3.coerce.date(),\n  score: z3.coerce.bigint(),\n  term: z3.coerce.number().int(),\n  aurorian_summaries: z3.tuple([\n    CopilotAurorianSummarySchema,\n    CopilotAurorianSummarySchema,\n    CopilotAurorianSummarySchema,\n    CopilotAurorianSummarySchema,\n    CopilotAurorianSummarySchema\n  ])\n});\n\n// src/schema/table-summary.ts\nimport { z as z4 } from \"zod\";\nvar TableSummarySchema = z4.object({\n  name: z4.string(),\n  revision: z4.number(),\n  table_id: z4.string().startsWith(\"tbl\")\n});\n\n// src/schema/term.ts\nimport { z as z5 } from \"zod\";\nvar TermSchema = z5.object({\n  term: z5.coerce.number().int().describe(\"荒典期数\"),\n  boss_name: z5.string(),\n  boss_attribute: z5.nativeEnum(AurorianAttributeType).describe(\"BOSS属性\"),\n  start_time: z5.coerce.date(),\n  end_time: z5.coerce.date(),\n  features: z5.string()\n});\n\n// src/utils/to-copilot.ts\nvar POSITION_ARRAY = [\"1\", \"2\", \"3\", \"4\", \"5\"];\nfunction toCopilot(r) {\n  return {\n    bv: r.bv,\n    title: r.title,\n    description: r.description,\n    author: r.author,\n    insert_db_time: r.insert_db_time,\n    upload_time: r.upload_time,\n    score: r.score,\n    term: Number.parseInt(r.term[0].text, 10),\n    aurorian_summaries: POSITION_ARRAY.map((pos) => {\n      var _a, _b;\n      return {\n        aurorian_name: r[`aurorian_${pos}`][0].text,\n        breakthrough: r[`aurorian_${pos}_breakthrough`],\n        is_replaceable: (_b = (_a = r.replaceable_position) == null ? void 0 : _a.includes(pos)) != null ? _b : false\n      };\n    })\n  };\n}\nexport {\n  AurorianAttributeType,\n  AurorianClassType,\n  AurorianRarityType,\n  AurorianSchema,\n  AurorianSummarySchema,\n  CopilotAurorianSummarySchema,\n  CopilotSchema,\n  MyBoxSchema,\n  RemoteCopilotSchema,\n  TableSummarySchema,\n  TermSchema,\n  toCopilot\n};\n","import React, { useEffect, useMemo, useRef } from 'react';\nimport { useModel } from '@modern-js/runtime/model';\nimport { type AurorianType } from '@sinsa/schema';\nimport { Badge, ConfigProvider, Rate } from 'antd';\nimport styles from './styles.module.less';\nimport { ClassURLMapper, ElementURLMapper, RarityMapper } from './constants';\nimport { AuroriansModel } from '@/models/aurorians';\n\ninterface AurorianCardProps {\n  name: string;\n  breakthrough: number;\n  isReplaceable?: boolean;\n}\n\nexport const AurorianCard = React.memo<AurorianCardProps>(\n  ({ name, breakthrough, isReplaceable }) => {\n    const [{ auroriansMap }] = useModel(AuroriansModel);\n    const aurorian = useMemo(\n      () => auroriansMap[name] as AurorianType | undefined,\n      [auroriansMap, name],\n    );\n\n    const cardRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n      if (aurorian?.aurorian_name) {\n        import(`@/assets/skins/${aurorian.aurorian_name}.webp`)\n          .then(esm => {\n            if (typeof esm?.default === 'string') {\n              if (cardRef.current) {\n                cardRef.current.style.backgroundImage = `url(${esm.default})`;\n                console.log(\n                  cardRef.current,\n                  cardRef.current.style,\n                  `url(${esm.default})`,\n                );\n              }\n            }\n          })\n          .catch(() => {\n            // ignore\n          });\n      }\n    }, [aurorian?.aurorian_name]);\n\n    return (\n      <Badge.Ribbon\n        style={{\n          fontSize: '12px',\n          display: isReplaceable ? 'block' : 'none',\n          zIndex: 10000,\n        }}\n        text={isReplaceable ? '可替' : undefined}\n      >\n        <div className={styles.AurorianCard} ref={cardRef}>\n          {aurorian?.class && aurorian?.attribute ? (\n            <div className={styles.MetaContainer}>\n              <img\n                className={styles.MetaClass}\n                alt={aurorian.class}\n                src={ClassURLMapper[aurorian.class]}\n              />\n              <div className={styles.MetaAttributeContainer}>\n                <img\n                  className={styles.MetaFirstAttribute}\n                  alt={aurorian.attribute}\n                  src={ElementURLMapper[aurorian.attribute]}\n                />\n                {aurorian.secondary_attribute ? (\n                  <img\n                    className={styles.MetaSecondAttribute}\n                    alt={aurorian.secondary_attribute}\n                    src={ElementURLMapper[aurorian.secondary_attribute]}\n                  />\n                ) : null}\n              </div>\n            </div>\n          ) : null}\n          <div className={styles.NameContainer}>\n            <div title={aurorian?.aurorian_name}>\n              {aurorian?.aurorian_cn_name}\n            </div>\n\n            {aurorian?.rarity ? (\n              <ConfigProvider\n                theme={{\n                  components: {\n                    Rate: {\n                      starBg: 'white',\n                      starSize: 10,\n                    },\n                  },\n                }}\n              >\n                <Rate\n                  className={styles.BreakThrough}\n                  disabled\n                  value={breakthrough}\n                  count={RarityMapper[aurorian.rarity]}\n                />\n              </ConfigProvider>\n            ) : null}\n          </div>\n        </div>\n      </Badge.Ribbon>\n    );\n  },\n);\n","import type { CopilotType } from '@sinsa/schema';\nimport React from 'react';\nimport { AurorianCard } from '../AurorianCard';\nimport styles from './styles.module.less';\n\ninterface AuroriansTeamProps {\n  aurorianSummaries: CopilotType['aurorian_summaries'];\n}\n\nexport const AuroriansTeam: React.FC<AuroriansTeamProps> = ({\n  aurorianSummaries,\n}) => {\n  return (\n    <div className={styles.AuroriansTeam}>\n      {aurorianSummaries.map(\n        ({ aurorian_name, breakthrough, is_replaceable }) => {\n          return (\n            <AurorianCard\n              key={aurorian_name}\n              name={aurorian_name}\n              breakthrough={breakthrough}\n              isReplaceable={is_replaceable}\n            />\n          );\n        },\n      )}\n    </div>\n  );\n};\n","import type { ProColumns } from '@ant-design/pro-table';\nimport type { CopilotType } from '@sinsa/schema';\nimport { Typography } from 'antd';\nimport { AuroriansTeam } from '../AuroriansTeam';\n\nexport interface TableParams {\n  title?: CopilotType['title'];\n  author?: CopilotType['author'];\n  term?: `${number}`;\n}\n\nexport const copilotsColumns: ProColumns<CopilotType>[] = [\n  {\n    title: '光灵配置',\n    dataIndex: 'aurorian_summaries',\n    hideInSearch: true,\n    render(_, entity) {\n      return <AuroriansTeam aurorianSummaries={entity.aurorian_summaries} />;\n    },\n    width: 80 * 5 + 48,\n  },\n  {\n    title: '结算分数',\n    dataIndex: 'score',\n    valueType: 'digit',\n    width: 130,\n    hideInSearch: true,\n  },\n  {\n    title: '作者',\n    dataIndex: 'author',\n    valueType: 'select',\n    hideInSearch: true,\n    ellipsis: true,\n    width: 150,\n  },\n  {\n    title: '标题',\n    dataIndex: 'title',\n    ellipsis: true,\n    render(dom, entity) {\n      return (\n        <Typography.Link\n          href={`https://b23.tv/${entity.bv}`}\n          target=\"_blank\"\n          title={entity.title}\n        >\n          {entity.title}\n        </Typography.Link>\n      );\n    },\n  },\n  {\n    title: '上传时间',\n    dataIndex: 'upload_time',\n    valueType: 'dateTime',\n    width: 160,\n  },\n];\n","import { useCallback, useMemo, useRef } from 'react';\nimport type { ActionType } from '@ant-design/pro-table';\nimport { ProTable } from '@ant-design/pro-table';\nimport type { CopilotType } from '@sinsa/schema';\nimport { type TableParams, copilotsColumns } from './columns';\n\ninterface CopilotsTableProps {\n  dataSource: CopilotType[];\n  term?: `${number}`;\n}\n\nexport function copilotRowKey(c: CopilotType) {\n  return c.bv;\n}\n\nexport const CopilotsTable: React.FC<CopilotsTableProps> = ({\n  dataSource,\n  term,\n}) => {\n  const actionRef = useRef<ActionType>();\n\n  const deps = useMemo((): TableParams => ({ term }), [term]);\n\n  const request = useCallback(async (params: TableParams) => {\n    return {\n      data: dataSource.filter(item => {\n        let ok = true;\n        if (params.title) {\n          ok = item.title.includes(params.title);\n        }\n        return ok;\n      }),\n      success: true,\n    };\n  }, []);\n\n  return (\n    <ProTable<CopilotType, TableParams>\n      toolbar={{ title: '收录作业' }}\n      rowKey={copilotRowKey}\n      actionRef={actionRef}\n      columns={copilotsColumns}\n      params={deps}\n      request={request}\n      pagination={{ pageSize: 5, size: 'default' }}\n    />\n  );\n};\n","import { ProTable } from '@ant-design/pro-table';\nimport { CopilotType } from '@sinsa/schema';\nimport { useCallback } from 'react';\nimport { produce } from 'immer';\nimport { copilotRowKey } from '../CopilotsTable';\nimport { copilotsColumns } from '../CopilotsTable/columns';\nimport type { SolutionScenario } from '@/features/backtrack/types';\n\ninterface SolutionScenarioCardProps {\n  solution: SolutionScenario;\n  title: string;\n}\n\nexport const SolutionScenarioCard: React.FC<SolutionScenarioCardProps> = ({\n  solution,\n  title,\n}) => {\n  const request = useCallback(async () => {\n    return {\n      data: produce(solution.copilots, draft => {\n        draft.sort((a, b) => Number(b.score - a.score));\n      }),\n      success: true,\n    };\n  }, []);\n\n  return (\n    <ProTable<CopilotType>\n      toolbar={{ title, settings: [] }}\n      rowKey={copilotRowKey}\n      columns={copilotsColumns}\n      request={request}\n      search={false}\n      pagination={false}\n      size=\"small\"\n    />\n  );\n};\n","import { useModel } from '@modern-js/runtime/model';\nimport { Select } from 'antd';\nimport { useNavigate, useParams } from '@modern-js/runtime/router';\nimport { TermsModel } from '@/models/terms';\nimport { RoutePath } from '@/components/MyLayout/constants';\n\nexport const CopilotHeader: React.FC = () => {\n  const params = useParams<{ term: `${number}` }>();\n  const [terms] = useModel(TermsModel);\n  const navigate = useNavigate();\n  return (\n    <Select\n      value={params.term && Number.parseInt(params.term, 10)}\n      options={terms.termsOptions}\n      placeholder=\"荒典期数\"\n      onChange={(nextTerm: number) => {\n        navigate(RoutePath.Copilots(nextTerm));\n      }}\n    />\n  );\n};\n","import { ProFormRadio, QueryFilter } from '@ant-design/pro-form';\nimport { CopilotType } from '@sinsa/schema';\nimport { List, Typography } from 'antd';\nimport { useState } from 'react';\nimport { useModel } from '@modern-js/runtime/model';\nimport numeral from 'numeral';\nimport { calculateAllScenariosAndScores } from '@/features/backtrack/calculate-all-scenarios-and-scores';\nimport { AuroriansModel } from '@/models/aurorians';\nimport { SolutionResult } from '@/features/backtrack/types';\nimport { SolutionScenarioCard } from '@/components/SolutionScenarioCard';\n\ninterface CopilotSolutionProps {\n  dataSource: CopilotType[];\n}\n\ninterface QueryParams {\n  k: number;\n  box: 'whole' | 'my-box';\n}\n\nexport const CopilotSolution: React.FC<CopilotSolutionProps> = ({\n  dataSource,\n}) => {\n  const [{ WHOLE_BOX }] = useModel(AuroriansModel);\n  const [solutionResult, setSolutionResult] = useState<SolutionResult>();\n\n  return (\n    <>\n      <Typography.Title level={3}>寻找队伍方案</Typography.Title>\n      <QueryFilter<QueryParams>\n        defaultCollapsed\n        onFinish={async params => {\n          const result = calculateAllScenariosAndScores(\n            {\n              copilots: dataSource,\n              availableBox: WHOLE_BOX.aurorian_summaries,\n            },\n            params.k,\n          );\n\n          setSolutionResult(result);\n        }}\n        searchText=\"寻找队伍方案\"\n        initialValues={{ k: 3, box: 'whole' }}\n      >\n        <ProFormRadio.Group\n          name=\"k\"\n          label=\"队伍数量\"\n          rules={[{ required: true }]}\n          options={[\n            { label: '两支队伍', value: 2 },\n            { label: '三支队伍', value: 3 },\n            { label: '四支队伍', value: 4 },\n          ]}\n          allowClear={false}\n          radioType=\"button\"\n        />\n        <ProFormRadio.Group\n          name=\"box\"\n          label=\"Box 匹配\"\n          options={[\n            { label: '全图鉴满突破 Box', value: 'whole' },\n            { label: '我的自定义 Box', value: 'my-box', disabled: true },\n          ]}\n          allowClear={false}\n          radioType=\"button\"\n          rules={[{ required: true }]}\n        />\n      </QueryFilter>\n      {solutionResult?.scenarios.length ? (\n        <Typography.Paragraph>\n          已为您找到 {solutionResult?.scenarios.length}{' '}\n          个队伍方案，总分数由高至低排列\n        </Typography.Paragraph>\n      ) : null}\n      <List\n        dataSource={solutionResult?.scenarios}\n        pagination={{ pageSize: 5 }}\n        rowKey={sc => sc.copilots.map(c => c.bv).join('')}\n        renderItem={item => {\n          return (\n            <div\n              key={item.copilots.map(c => c.bv).join('')}\n              style={{ marginBottom: '1rem' }}\n            >\n              <SolutionScenarioCard\n                solution={item}\n                title={`方案: ${numeral(item.totalScore).format('0,0')} 分`}\n              />\n            </div>\n          );\n        }}\n      />\n    </>\n  );\n};\n","import { useModel } from '@modern-js/runtime/model';\nimport { Button, Result } from 'antd';\nimport { Link } from '@modern-js/runtime/router';\nimport { TermsModel } from '@/models/terms';\nimport { RoutePath } from '@/components/MyLayout/constants';\n\nexport const TermNotFound: React.FC = () => {\n  const [{ firstTerm }] = useModel(TermsModel);\n\n  return (\n    <Result\n      status=\"404\"\n      title=\"荒典作业不见了\"\n      subTitle=\"检查链接是否正确或返回最近荒典作业\"\n      extra={\n        firstTerm ? (\n          <Link to={RoutePath.Copilots(firstTerm.term)}>\n            <Button type=\"primary\">返回最近作业</Button>\n          </Link>\n        ) : (\n          <Link to={RoutePath.Home}>\n            <Button type=\"primary\">返回首页</Button>\n          </Link>\n        )\n      }\n    />\n  );\n};\n","import { useParams } from '@modern-js/runtime/router';\nimport useSWR from 'swr';\nimport { PageContainer } from '@ant-design/pro-layout';\nimport type { CopilotType } from '@sinsa/schema';\nimport { useMemo } from 'react';\nimport { fetcher } from '@/utils/swr';\nimport { TermNotFound } from '@/containers/TermNotFound';\nimport { CopilotHeader } from '@/containers/CopilotHeader';\nimport { CopilotSolution } from '@/containers/CopilotSolution';\nimport { CopilotsTable } from '@/components/CopilotsTable';\n\nconst CopilotPage: React.FC = () => {\n  const params = useParams<{ term: `${number}` }>();\n\n  const { data, error, isLoading } = useSWR<\n    Record<CopilotType['bv'], CopilotType>\n  >(`/api/copilots/${params.term}.json`, fetcher);\n\n  const copilots = useMemo(() => Object.values(data ?? []), [data]);\n\n  if (error) {\n    return <TermNotFound />;\n  }\n\n  return (\n    <PageContainer\n      content={<CopilotHeader />}\n      title=\"荒典作业\"\n      loading={isLoading}\n    >\n      <CopilotsTable term={params.term} dataSource={copilots} />\n      <CopilotSolution dataSource={copilots} />\n    </PageContainer>\n  );\n};\n\nexport default CopilotPage;\n","import {\n  AurorianAttributeType,\n  AurorianClassType,\n  AurorianRarityType,\n} from '@sinsa/schema';\nimport E1 from '@/assets/elements/1.webp';\nimport E2 from '@/assets/elements/2.webp';\nimport E3 from '@/assets/elements/3.webp';\nimport E4 from '@/assets/elements/4.webp';\nimport C1 from '@/assets/classes/2001.webp';\nimport C2 from '@/assets/classes/2002.webp';\nimport C3 from '@/assets/classes/2003.webp';\nimport C4 from '@/assets/classes/2004.webp';\n\nexport const RarityMapper = {\n  [AurorianRarityType.Star6]: 6,\n  [AurorianRarityType.Star5]: 5,\n  [AurorianRarityType.Star4]: 4,\n  [AurorianRarityType.Star3]: 3,\n  [AurorianRarityType.Star2]: 2,\n  [AurorianRarityType.Star1]: 1,\n};\n\nexport const ElementURLMapper = {\n  [AurorianAttributeType.Water]: E1,\n  [AurorianAttributeType.Fire]: E2,\n  [AurorianAttributeType.Forest]: E3,\n  [AurorianAttributeType.Thunder]: E4,\n};\n\nexport const ClassURLMapper = {\n  [AurorianClassType.Converter]: C1,\n  [AurorianClassType.Sniper]: C2,\n  [AurorianClassType.Detonator]: C3,\n  [AurorianClassType.Supporter]: C4,\n};\n","import type { CopilotType } from '@sinsa/schema';\nimport { produce } from 'immer';\nimport { boxWithoutAuroriansInCopilot } from './helpers/box-without-aurorians-in-copilot';\nimport { canUseCopilot } from './helpers/can-use-copilot';\nimport type { SolutionContext, SolutionResult } from './types';\n\n/**\n * 计算所有的队伍方案和具体分数\n * @param context 解决方案上下文\n * @param k 队伍数量\n */\nexport function calculateAllScenariosAndScores(\n  context: SolutionContext,\n  k = 3,\n): SolutionResult {\n  const result: SolutionResult = {\n    scenarios: [],\n  };\n\n  function generateAllScenarios(\n    currentCopilotIndex: number,\n    availableBox: SolutionContext['availableBox'],\n    currentScenario: CopilotType[],\n    count: number,\n  ) {\n    // 一般情况，已经处理完所有的作业或者已经满足队伍数量\n    if (count === 0 || currentCopilotIndex === context.copilots.length) {\n      // 至少也要给出两队\n      if (currentScenario.length >= k) {\n        result.scenarios.push({\n          copilots: [...currentScenario],\n          totalScore: currentScenario.reduce(\n            (score, next) => score + BigInt(next.score),\n            BigInt(0),\n          ),\n        });\n      }\n      return;\n    }\n    // 尝试使用当前作业\n    const currentCopilot = context.copilots[currentCopilotIndex];\n    if (canUseCopilot(availableBox, currentCopilot)) {\n      const remainingBox = boxWithoutAuroriansInCopilot(\n        availableBox,\n        currentCopilot,\n      );\n\n      generateAllScenarios(\n        currentCopilotIndex + 1,\n        remainingBox,\n        [...currentScenario, currentCopilot],\n        count - 1,\n      );\n    }\n\n    // 递归处理不使用当前作业\n    generateAllScenarios(\n      currentCopilotIndex + 1,\n      availableBox,\n      currentScenario,\n      count,\n    );\n  }\n\n  generateAllScenarios(0, context.availableBox, [], k);\n\n  result.scenarios = produce(result.scenarios, draft => {\n    draft.sort((a, b) => Number(b.totalScore - a.totalScore));\n  });\n\n  return result;\n}\n","import type { CopilotType, MyBoxType } from '@sinsa/schema';\nimport { produce } from 'immer';\n\nexport function boxWithoutAuroriansInCopilot(\n  myBox: MyBoxType['aurorian_summaries'],\n  copilot: CopilotType,\n) {\n  return produce(myBox, draft => {\n    for (const aurorianInCopilot of copilot.aurorian_summaries) {\n      // 0. 如果作业中的光灵本身是可替换的，则跳过此光灵判断\n      if (aurorianInCopilot.is_replaceable) {\n        continue;\n      }\n\n      delete draft[aurorianInCopilot.aurorian_name];\n    }\n  });\n}\n","import type {\n  CopilotType,\n  MyBoxType,\n  AurorianSummaryType,\n} from '@sinsa/schema';\n\n/**\n * 我的 Box 能否抄这个作业\n * @param copilot 作业\n * @param myBox 我的 Box\n * @returns 我的 Box 能否抄这个作业\n */\nexport function canUseCopilot(\n  myBox: MyBoxType['aurorian_summaries'],\n  copilot: CopilotType,\n): boolean {\n  for (const aurorianInCopilot of copilot.aurorian_summaries) {\n    // 0. 如果作业中的光灵本身是可替换的，则跳过此光灵判断\n    if (aurorianInCopilot.is_replaceable) {\n      continue;\n    }\n\n    const aurorianInMyBox = myBox[aurorianInCopilot.aurorian_name] as\n      | AurorianSummaryType\n      | undefined;\n\n    // 1. 光灵本身不存在于我的 box\n    if (!aurorianInMyBox) {\n      return false;\n    }\n\n    // 2. 如果我的 box 光灵突破低于作业要求突破\n    if (aurorianInMyBox.breakthrough < aurorianInCopilot.breakthrough) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","export function fetcher(url: string) {\n  return fetch(url).then(r => r.json());\n}\n"],"names":["AurorianAttributeType2","AurorianClassType2","AurorianRarityType2","AurorianAttributeType","AurorianClassType","AurorianRarityType","z","aurorian_name","describe","aurorian_cn_name","attribute","secondary_attribute","class","rarity","server","array","AurorianSummarySchema","breakthrough","min","max","title","create_time","version","aurorian_summaries","bv","startsWith","description","author","insert_db_time","upload_time","score","term","text","replaceable_position","aurorian_1","aurorian_1_breakthrough","aurorian_2","aurorian_2_breakthrough","aurorian_3","aurorian_3_breakthrough","aurorian_4","aurorian_4_breakthrough","aurorian_5","aurorian_5_breakthrough","CopilotAurorianSummarySchema","extend","is_replaceable","int","name","revision","table_id","boss_name","boss_attribute","start_time","end_time","features","AurorianCard","isReplaceable","auroriansMap","useModel","AuroriansModel","aurorian","useMemo","cardRef","useRef","useEffect","then","esm","default","current","style","backgroundImage","console","log","catch","Badge","fontSize","display","zIndex","undefined","className","ref","alt","src","ClassURLMapper","ElementURLMapper","ConfigProvider","theme","components","Rate","starBg","starSize","disabled","value","count","RarityMapper","AuroriansTeam","aurorianSummaries","map","copilotsColumns","dataIndex","hideInSearch","render","_","entity","width","valueType","ellipsis","dom","Typography","href","target","copilotRowKey","c","CopilotsTable","dataSource","actionRef","deps","request","useCallback","params","data","filter","item","ok","includes","success","ProTable","toolbar","rowKey","columns","pagination","pageSize","size","SolutionScenarioCard","solution","produce","copilots","draft","sort","a","b","Number","settings","search","CopilotHeader","useParams","terms","TermsModel","navigate","useNavigate","Select","parseInt","options","termsOptions","placeholder","onChange","nextTerm","RoutePath","CopilotSolution","WHOLE_BOX","solutionResult","setSolutionResult","useState","level","QueryFilter","defaultCollapsed","onFinish","calculateAllScenariosAndScores","availableBox","k","searchText","initialValues","box","ProFormRadio","label","rules","required","allowClear","radioType","scenarios","length","List","sc","join","renderItem","marginBottom","totalScore","format","TermNotFound","firstTerm","Result","status","subTitle","extra","Link","to","Button","type","error","isLoading","fetcher","Object","values","PageContainer","content","loading","context","result","generateAllScenarios","currentCopilotIndex","currentScenario","push","reduce","next","BigInt","currentCopilot","canUseCopilot","boxWithoutAuroriansInCopilot","myBox","copilot","aurorianInCopilot","aurorianInMyBox","url","fetch","r","json"],"mappings":"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"}