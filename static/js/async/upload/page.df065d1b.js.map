{"version":3,"file":"static/js/async/upload/page.df065d1b.js","sources":["./src/components/LarkLoginCard/index.tsx","./src/components/UploadForm/AurorianTallCard/index.tsx","./src/components/UploadForm/CopilotSelector/index.tsx","./src/components/UploadForm/index.tsx","./src/routes/upload/page.tsx","./src/components/LarkLoginCard/constants.ts","./src/components/UploadForm/utils/toInputRemoteCopilot.ts"],"sourcesContent":["import { Link, useLocation } from '@modern-js/runtime/router';\nimport { Avatar, Button, Card, Space, Typography } from 'antd';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useRequest } from 'ahooks';\nimport { RoutePath } from '../MyLayout/constants';\nimport { LARK_ORIGIN, LARK_SCOPE, UPLOAD_APP_ID } from './constants';\nimport { LarkProfile } from './types';\n\nexport const LarkLoginCard: React.FC = () => {\n  const REDIRECT_URI = useMemo(() => {\n    return `${window.location.origin}/#${RoutePath.Upload}/`;\n  }, []);\n\n  const [larkpreLoginCode, setLarkpreLoginCode] = useState<string>();\n  const location = useLocation();\n\n  useEffect(() => {\n    const code = location.search\n      .slice(1)\n      .split('&')\n      .find(item => item.startsWith('code='))\n      ?.replace('code=', '');\n    console.log('location', location);\n    if (code) {\n      setLarkpreLoginCode(code);\n    }\n  }, [location.search]);\n\n  const { data, loading } = useRequest(\n    async () => {\n      if (larkpreLoginCode) {\n        await fetch(\n          `${LARK_ORIGIN}/lark/auth-callback?code=${larkpreLoginCode}`,\n          {\n            credentials: 'include',\n            mode: 'cors',\n          },\n        ).then(res => res.json());\n        setLarkpreLoginCode(undefined);\n      }\n\n      const profile = await fetch(`${LARK_ORIGIN}/lark/profile`, {\n        credentials: 'include',\n        mode: 'cors',\n      }).then(res => res.json());\n\n      if (profile?.name) {\n        return profile as LarkProfile;\n      }\n      return null;\n    },\n    { refreshDeps: [larkpreLoginCode] },\n  );\n  return (\n    <Card loading={loading}>\n      {data ? (\n        <Card.Meta\n          avatar={<Avatar src={data.avatar_url} />}\n          title={data.name}\n          description=\"欢迎回来~ 您已授权，可以开始工作啦\"\n        />\n      ) : (\n        <Space>\n          <Typography.Text>\n            您好，我是作业提交醒山小狗，我需要您飞书授权才能工作\n          </Typography.Text>\n          <Link\n            target=\"_self\"\n            to={`https://open.feishu.cn/open-apis/authen/v1/authorize?app_id=${UPLOAD_APP_ID}&redirect_uri=${window.encodeURIComponent(\n              REDIRECT_URI,\n            )}&scope=${window.encodeURIComponent(LARK_SCOPE)}`}\n          >\n            <Button type=\"primary\">去飞书授权</Button>\n          </Link>\n        </Space>\n      )}\n    </Card>\n  );\n};\n","import React, { useEffect, useMemo, useRef } from 'react';\nimport { useModel } from '@modern-js/runtime/model';\nimport { type AurorianType } from '@sinsa/schema';\nimport { Badge, Rate, Switch } from 'antd';\nimport { clsx } from 'clsx';\nimport {\n  ClassURLMapper,\n  ElementURLMapper,\n  RarityMapper,\n} from '../../AurorianCard/constants';\nimport styles from './styles.module.less';\nimport { AuroriansModel } from '@/models/aurorians';\n\ninterface AurorianTallCardProps {\n  name: string;\n  breakthrough?: number;\n  isReplaceable?: boolean;\n  onBreakthroughChange?: (b: number) => void;\n  onReplaceableChange?: (r: boolean) => void;\n}\n\nexport const AurorianTallCard = React.memo<AurorianTallCardProps>(\n  ({\n    name,\n    breakthrough,\n    isReplaceable,\n    onBreakthroughChange,\n    onReplaceableChange,\n  }) => {\n    const [{ auroriansMap }] = useModel(AuroriansModel);\n    const aurorian = useMemo(\n      () => auroriansMap[name] as AurorianType | undefined,\n      [auroriansMap, name],\n    );\n\n    const cardRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n      if (aurorian?.aurorian_name) {\n        import(`@/assets/skins/${aurorian.aurorian_name}.webp`)\n          .then(esm => {\n            if (typeof esm?.default === 'string') {\n              if (cardRef.current) {\n                cardRef.current.style.backgroundImage = `url(${esm.default})`;\n              }\n            }\n          })\n          .catch(() => {\n            // ignore\n          });\n      }\n    }, [aurorian?.aurorian_name]);\n\n    return (\n      <Badge.Ribbon\n        style={{\n          fontSize: '12px',\n          display: isReplaceable ? 'block' : 'none',\n          zIndex: 10000,\n        }}\n        text={isReplaceable ? '可替' : undefined}\n      >\n        <div className={clsx(styles.AurorianCard)} ref={cardRef}>\n          {aurorian?.class && aurorian?.attribute ? (\n            <div className={clsx(styles.MetaContainer)}>\n              <img\n                className={styles.MetaClass}\n                alt={aurorian.class}\n                src={ClassURLMapper[aurorian.class]}\n              />\n              <div className={styles.MetaAttributeContainer}>\n                <img\n                  className={styles.MetaFirstAttribute}\n                  alt={aurorian.attribute}\n                  src={ElementURLMapper[aurorian.attribute]}\n                />\n                {aurorian.secondary_attribute ? (\n                  <img\n                    className={styles.MetaSecondAttribute}\n                    alt={aurorian.secondary_attribute}\n                    src={ElementURLMapper[aurorian.secondary_attribute]}\n                  />\n                ) : null}\n              </div>\n            </div>\n          ) : null}\n          <div className={styles.NameContainer}>\n            <div title={aurorian?.aurorian_name}>\n              {aurorian?.aurorian_cn_name}\n            </div>\n\n            {typeof breakthrough === 'number' && aurorian?.rarity ? (\n              <Rate\n                className={styles.BreakThrough}\n                value={breakthrough}\n                count={RarityMapper[aurorian.rarity]}\n                onChange={onBreakthroughChange}\n              />\n            ) : null}\n            <div>\n              <Switch size=\"small\" onChange={onReplaceableChange} />\n            </div>\n          </div>\n        </div>\n      </Badge.Ribbon>\n    );\n  },\n);\n","/* eslint-disable no-nested-ternary */\nimport { useModel } from '@modern-js/runtime/model';\nimport { CopilotAurorianSummaryType } from '@sinsa/schema';\nimport { Select } from 'antd';\nimport { intersection } from 'lodash-es';\nimport { produce } from 'immer';\nimport styles from './styles.module.less';\nimport { AuroriansModel, filterAuroriansOption } from '@/models/aurorians';\nimport { AurorianTallCard } from '@/components/UploadForm/AurorianTallCard';\nimport { RarityMapper } from '@/components/AurorianCard/constants';\n\ninterface CopilotSelector {\n  value?: CopilotAurorianSummaryType[];\n  onChange?: (val: CopilotAurorianSummaryType[]) => void;\n}\n\nexport const CopilotnSelector: React.FC<CopilotSelector> = ({\n  value,\n  onChange,\n}) => {\n  const [{ auroriansOptions, auroriansMap }] = useModel(AuroriansModel);\n  const multiSelectValue = value?.map(item => item.aurorian_name);\n  return (\n    <div>\n      <Select\n        mode=\"multiple\"\n        options={auroriansOptions}\n        placeholder=\"支持按拼音搜索, 比如 ad 可以搜到 安顿\"\n        showSearch\n        allowClear={false}\n        value={value?.map(item => item.aurorian_name)}\n        filterOption={filterAuroriansOption}\n        onChange={newVal => {\n          const commonValues = intersection(multiSelectValue, newVal);\n          const remainEntity = value?.filter(item =>\n            commonValues.includes(item.aurorian_name),\n          );\n          onChange?.(\n            newVal.slice(0, 5).map(newName => {\n              const oldEntity = remainEntity?.find(\n                entity => entity.aurorian_name === newName,\n              );\n              if (oldEntity) {\n                return { ...oldEntity };\n              }\n              const targetAurorian = auroriansMap[newName];\n              const rarity = RarityMapper[targetAurorian.rarity];\n              return {\n                aurorian_name: newName,\n                breakthrough:\n                  rarity === 6\n                    ? 2\n                    : rarity === 5\n                    ? 1\n                    : rarity <= 4\n                    ? rarity\n                    : 0,\n                is_replaceable: false,\n              };\n            }),\n          );\n        }}\n      />\n      <div className={styles.AuroriansTeam}>\n        {value?.map(\n          ({ aurorian_name, breakthrough, is_replaceable }, index) => {\n            return (\n              <AurorianTallCard\n                key={aurorian_name}\n                name={aurorian_name}\n                breakthrough={breakthrough}\n                isReplaceable={is_replaceable}\n                onBreakthroughChange={bt => {\n                  onChange?.(\n                    produce(value, draft => {\n                      if (draft) {\n                        draft[index].breakthrough = bt;\n                      }\n                    }),\n                  );\n                }}\n                onReplaceableChange={r => {\n                  onChange?.(\n                    produce(value, draft => {\n                      if (draft) {\n                        draft[index].is_replaceable = r;\n                      }\n                    }),\n                  );\n                }}\n              />\n            );\n          },\n        )}\n      </div>\n    </div>\n  );\n};\n","import {\n  ProForm,\n  ProFormDateTimePicker,\n  ProFormDependency,\n  ProFormDigit,\n  ProFormInstance,\n  ProFormSelect,\n  ProFormText,\n  ProFormTextArea,\n} from '@ant-design/pro-components';\nimport { useModel } from '@modern-js/runtime/model';\nimport dayjs from 'dayjs';\nimport { Button, notification } from 'antd';\nimport { useRequest } from 'ahooks';\nimport { useRef } from 'react';\nimport { CopilotAurorianSummaryType, CopilotSchema } from '@sinsa/schema';\nimport { LARK_ORIGIN } from '../LarkLoginCard/constants';\nimport type { BilibiliVideoType } from './types';\nimport { CopilotnSelector } from './CopilotSelector';\nimport { toInputRemoteCopilot } from './utils/toInputRemoteCopilot';\nimport { TermsModel } from '@/models/terms';\nimport { AuroriansModel } from '@/models/aurorians';\n\ninterface FormValues {\n  term: number;\n  bv: `BV${string}`;\n  duplicate: boolean;\n  title: string;\n  description: string;\n  author: string;\n  upload_time: number;\n  score: number;\n  aurorian_summaries: [\n    CopilotAurorianSummaryType,\n    CopilotAurorianSummaryType,\n    CopilotAurorianSummaryType,\n    CopilotAurorianSummaryType,\n    CopilotAurorianSummaryType,\n  ];\n}\n\nexport const UploadForm: React.FC = () => {\n  const [{ termsOptions, firstTerm, termsMap }] = useModel(TermsModel);\n  const [{ auroriansMap }] = useModel(AuroriansModel);\n\n  const { data, loading, runAsync, mutate } = useRequest(\n    async bv => {\n      const result = await fetch(`${LARK_ORIGIN}/btv/video/${bv}`, {\n        mode: 'cors',\n        credentials: 'include',\n      }).then(res => res.json());\n      return result as BilibiliVideoType | undefined;\n    },\n    { manual: true },\n  );\n\n  const formRef = useRef<ProFormInstance<FormValues>>();\n\n  return (\n    <ProForm<FormValues>\n      formRef={formRef}\n      onFinish={async (values: unknown) => {\n        const parsed = CopilotSchema.safeParse(values);\n        if (parsed.success) {\n          const result = await fetch(`${LARK_ORIGIN}/lark/copilot`, {\n            method: 'POST',\n            mode: 'cors',\n            credentials: 'include',\n            body: JSON.stringify(\n              toInputRemoteCopilot(parsed.data, { termsMap, auroriansMap }),\n            ),\n            headers: {\n              'Content-Type': 'application/json',\n              // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n          }).then(res => res.json());\n\n          if (result?.record?.record_id) {\n            notification.success({\n              message: `醒山小狗已经成功帮您添加了一份作业，record_id 为 ${result?.record?.record_id}`,\n            });\n            formRef.current?.resetFields();\n            mutate(undefined);\n          }\n        }\n      }}\n    >\n      <ProForm.Group>\n        <ProFormSelect\n          name=\"term\"\n          label=\"荒典期数\"\n          options={termsOptions}\n          initialValue={firstTerm?.term}\n          rules={[{ required: true }]}\n          width={'sm'}\n        />\n        <ProFormDependency name={['term']}>\n          {({ term }) => (\n            <ProFormText\n              name=\"bv\"\n              label=\"BV号\"\n              placeholder={'BVXXXXXXX'}\n              validateTrigger=\"onBlur\"\n              width={'md'}\n              // initialValue={'BV1Q64y1V7jc'}\n              rules={[\n                { required: true },\n                { pattern: /^BV.+$/, message: 'BV号格式不正确' },\n                {\n                  async validator(_, bv) {\n                    const result = await fetch(\n                      `${LARK_ORIGIN}/lark/check?bv=${bv}&term=${term}`,\n                      {\n                        mode: 'cors',\n                        credentials: 'include',\n                      },\n                    ).then(res => res.json());\n                    if (result?.noExist || result?.target) {\n                      if (result?.target) {\n                        throw new Error(\n                          `${\n                            result?.target?.fields?.creator?.name\n                          } 已经在 ${dayjs(\n                            result?.target?.fields?.insert_db_time,\n                          ).format('YYYY-MM-DD HH:mm:ss')} 添加了此作业`,\n                        );\n                      }\n                    }\n                  },\n                },\n              ]}\n            />\n          )}\n        </ProFormDependency>\n        <ProForm.Item label=\" \">\n          <ProFormDependency name={['bv']}>\n            {({ bv }) => (\n              <Button\n                disabled={!bv}\n                type=\"primary\"\n                loading={loading}\n                onClick={async e => {\n                  e.stopPropagation();\n                  const result = await runAsync(bv);\n                  console.log('result', result);\n                  if (result) {\n                    const { title, desc, owner, pubdate } = result;\n                    formRef.current?.setFieldsValue({\n                      title,\n                      description: desc === '-' ? undefined : desc,\n                      author: owner.name,\n                      upload_time: pubdate * 1000,\n                    });\n                  }\n                }}\n              >\n                读取视频基础信息\n              </Button>\n            )}\n          </ProFormDependency>\n        </ProForm.Item>\n      </ProForm.Group>\n      {data ? (\n        <>\n          <iframe\n            src={`//player.bilibili.com/player.html?bvid=${data.bvid}`}\n            scrolling=\"no\"\n            frameBorder=\"no\"\n            style={{ border: 0, width: 700, height: 420 }}\n          ></iframe>\n        </>\n      ) : null}\n\n      <ProForm.Item\n        label=\"光灵阵容\"\n        name=\"aurorian_summaries\"\n        rules={[\n          {\n            async validator(_, array) {\n              if (Array.isArray(array) && array.length === 5) {\n                // pass\n              } else {\n                throw new Error('光灵阵容搭配不正确');\n              }\n            },\n          },\n          { required: true },\n        ]}\n      >\n        <CopilotnSelector />\n      </ProForm.Item>\n\n      <ProFormDigit\n        label=\"结算分数\"\n        name=\"score\"\n        rules={[{ required: true }]}\n        min={0}\n      />\n\n      <ProFormText label=\"视频标题\" name=\"title\" rules={[{ required: true }]} />\n\n      <ProForm.Group>\n        <ProFormDateTimePicker\n          label=\"视频发布时间\"\n          name={'upload_time'}\n          rules={[{ required: true }]}\n        />\n        <ProFormText\n          label=\"作业作者\"\n          name={'author'}\n          rules={[{ required: true }]}\n        />\n        <ProFormTextArea label=\"视频描述\" name=\"description\" width={'xl'} />\n      </ProForm.Group>\n    </ProForm>\n  );\n};\n","import { PageContainer } from '@ant-design/pro-components';\nimport { Card } from 'antd';\nimport { UploadForm } from '@/components/UploadForm';\nimport { LarkLoginCard } from '@/components/LarkLoginCard';\n\nconst UploadPage: React.FC = () => {\n  return (\n    <PageContainer\n      title=\"作业收录（内部版）\"\n      content=\"内部的收录同学可以使用此页面快速上传作业，之后会再提供 Chrome 插件提高效率（比心）\"\n    >\n      <LarkLoginCard />\n      <Card style={{ marginTop: '1rem' }}>\n        <UploadForm />\n      </Card>\n    </PageContainer>\n  );\n};\n\nexport default UploadPage;\n","export const UPLOAD_APP_ID = 'cli_a5fd9725777a100b';\n\nexport const LARK_SCOPE = `bitable:app`;\n\nexport const LARK_ORIGIN =\n  process.env.NODE_ENV === 'production'\n    ? 'http://8.134.125.149/api'\n    : 'http://localhost:3000';\n","import { AurorianType, CopilotType, TermType } from '@sinsa/schema';\n\nexport function toInputRemoteCopilot(\n  c: CopilotType,\n  {\n    termsMap,\n    auroriansMap,\n  }: {\n    termsMap: Record<TermType['term'], TermType>;\n    auroriansMap: Record<AurorianType['aurorian_name'], AurorianType>;\n  },\n) {\n  return {\n    bv: c.bv,\n    title: c.title,\n    description: c.description,\n    author: c.author,\n    insert_db_time: c.insert_db_time?.valueOf(),\n    upload_time: c.upload_time.valueOf(),\n    score: Number(c.score),\n    term: [termsMap[c.term]._record_id],\n    aurorian_1: [\n      auroriansMap[c.aurorian_summaries[0].aurorian_name]._record_id,\n    ],\n    aurorian_1_breakthrough: String(c.aurorian_summaries[0].breakthrough),\n    aurorian_2: [\n      auroriansMap[c.aurorian_summaries[1].aurorian_name]._record_id,\n    ],\n    aurorian_2_breakthrough: String(c.aurorian_summaries[1].breakthrough),\n    aurorian_3: [\n      auroriansMap[c.aurorian_summaries[2].aurorian_name]._record_id,\n    ],\n    aurorian_3_breakthrough: String(c.aurorian_summaries[2].breakthrough),\n    aurorian_4: [\n      auroriansMap[c.aurorian_summaries[3].aurorian_name]._record_id,\n    ],\n    aurorian_4_breakthrough: String(c.aurorian_summaries[3].breakthrough),\n    aurorian_5: [\n      auroriansMap[c.aurorian_summaries[4].aurorian_name]._record_id,\n    ],\n    aurorian_5_breakthrough: String(c.aurorian_summaries[4].breakthrough),\n    replaceable_position: c.aurorian_summaries\n      .map((item, index) => (item.is_replaceable ? `${index + 1}` : null))\n      .filter((n): n is string => typeof n === 'string'),\n  };\n}\n"],"names":["LarkLoginCard","REDIRECT_URI","useMemo","window","location","origin","RoutePath","larkpreLoginCode","setLarkpreLoginCode","useState","useLocation","useEffect","code","search","slice","split","find","item","startsWith","replace","console","log","data","loading","useRequest","fetch","LARK_ORIGIN","credentials","mode","then","res","json","undefined","profile","name","refreshDeps","Card","avatar","Avatar","src","avatar_url","title","description","Space","Typography","Link","target","to","UPLOAD_APP_ID","encodeURIComponent","LARK_SCOPE","Button","type","AurorianTallCard","breakthrough","isReplaceable","onBreakthroughChange","onReplaceableChange","auroriansMap","useModel","AuroriansModel","aurorian","cardRef","useRef","aurorian_name","esm","default","current","style","backgroundImage","catch","Badge","fontSize","display","zIndex","text","className","clsx","ref","class","attribute","alt","ClassURLMapper","ElementURLMapper","secondary_attribute","aurorian_cn_name","rarity","Rate","value","count","RarityMapper","onChange","Switch","size","CopilotnSelector","auroriansOptions","multiSelectValue","map","Select","options","placeholder","showSearch","allowClear","filterOption","filterAuroriansOption","newVal","commonValues","intersection","remainEntity","filter","includes","newName","oldEntity","entity","targetAurorian","is_replaceable","index","bt","produce","draft","r","UploadForm","termsOptions","firstTerm","termsMap","TermsModel","runAsync","mutate","bv","manual","formRef","ProForm","onFinish","values","parsed","CopilotSchema","success","result","method","body","JSON","stringify","toInputRemoteCopilot","headers","record","record_id","notification","message","resetFields","ProFormSelect","label","initialValue","term","rules","required","width","ProFormDependency","ProFormText","validateTrigger","pattern","validator","_","noExist","Error","fields","creator","insert_db_time","format","disabled","onClick","e","stopPropagation","desc","owner","pubdate","setFieldsValue","author","upload_time","bvid","scrolling","frameBorder","border","height","array","Array","isArray","length","ProFormDigit","min","ProFormDateTimePicker","ProFormTextArea","PageContainer","content","marginTop","c","valueOf","score","Number","_record_id","aurorian_1","aurorian_summaries","aurorian_1_breakthrough","String","aurorian_2","aurorian_2_breakthrough","aurorian_3","aurorian_3_breakthrough","aurorian_4","aurorian_4_breakthrough","aurorian_5","aurorian_5_breakthrough","replaceable_position","n"],"mappings":"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"}