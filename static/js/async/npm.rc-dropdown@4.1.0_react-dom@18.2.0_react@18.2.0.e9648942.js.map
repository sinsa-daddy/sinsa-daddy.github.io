{"version":3,"file":"static/js/async/npm.rc-dropdown@4.1.0_react-dom@18.2.0_react@18.2.0.e9648942.js","mappings":"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","sources":["webpack://@sinsa/web/../../node_modules/.pnpm/rc-dropdown@4.1.0_react-dom@18.2.0_react@18.2.0/node_modules/rc-dropdown/es/hooks/useAccessibility.js","webpack://@sinsa/web/../../node_modules/.pnpm/rc-dropdown@4.1.0_react-dom@18.2.0_react@18.2.0/node_modules/rc-dropdown/es/Overlay.js","webpack://@sinsa/web/../../node_modules/.pnpm/rc-dropdown@4.1.0_react-dom@18.2.0_react@18.2.0/node_modules/rc-dropdown/es/placements.js","webpack://@sinsa/web/../../node_modules/.pnpm/rc-dropdown@4.1.0_react-dom@18.2.0_react@18.2.0/node_modules/rc-dropdown/es/Dropdown.js","webpack://@sinsa/web/../../node_modules/.pnpm/rc-dropdown@4.1.0_react-dom@18.2.0_react@18.2.0/node_modules/rc-dropdown/es/index.js"],"sourcesContent":["import KeyCode from \"rc-util/es/KeyCode\";\nimport raf from \"rc-util/es/raf\";\nimport * as React from \"react\";\nvar ESC = KeyCode.ESC,\n  TAB = KeyCode.TAB;\nexport default function useAccessibility(_ref) {\n  var visible = _ref.visible,\n    triggerRef = _ref.triggerRef,\n    onVisibleChange = _ref.onVisibleChange,\n    autoFocus = _ref.autoFocus,\n    overlayRef = _ref.overlayRef;\n  var focusMenuRef = React.useRef(false);\n  var handleCloseMenuAndReturnFocus = function handleCloseMenuAndReturnFocus() {\n    if (visible) {\n      var _triggerRef$current, _triggerRef$current$f;\n      (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 ? void 0 : (_triggerRef$current$f = _triggerRef$current.focus) === null || _triggerRef$current$f === void 0 ? void 0 : _triggerRef$current$f.call(_triggerRef$current);\n      onVisibleChange === null || onVisibleChange === void 0 ? void 0 : onVisibleChange(false);\n    }\n  };\n  var focusMenu = function focusMenu() {\n    var _overlayRef$current;\n    if ((_overlayRef$current = overlayRef.current) !== null && _overlayRef$current !== void 0 && _overlayRef$current.focus) {\n      overlayRef.current.focus();\n      focusMenuRef.current = true;\n      return true;\n    }\n    return false;\n  };\n  var handleKeyDown = function handleKeyDown(event) {\n    switch (event.keyCode) {\n      case ESC:\n        handleCloseMenuAndReturnFocus();\n        break;\n      case TAB:\n        {\n          var focusResult = false;\n          if (!focusMenuRef.current) {\n            focusResult = focusMenu();\n          }\n          if (focusResult) {\n            event.preventDefault();\n          } else {\n            handleCloseMenuAndReturnFocus();\n          }\n          break;\n        }\n    }\n  };\n  React.useEffect(function () {\n    if (visible) {\n      window.addEventListener(\"keydown\", handleKeyDown);\n      if (autoFocus) {\n        // FIXME: hack with raf\n        raf(focusMenu, 3);\n      }\n      return function () {\n        window.removeEventListener(\"keydown\", handleKeyDown);\n        focusMenuRef.current = false;\n      };\n    }\n    return function () {\n      focusMenuRef.current = false;\n    };\n  }, [visible]); // eslint-disable-line react-hooks/exhaustive-deps\n}","import React, { forwardRef, useMemo } from 'react';\nimport { composeRef, supportRef } from \"rc-util/es/ref\";\nvar Overlay = /*#__PURE__*/forwardRef(function (props, ref) {\n  var overlay = props.overlay,\n    arrow = props.arrow,\n    prefixCls = props.prefixCls;\n  var overlayNode = useMemo(function () {\n    var overlayElement;\n    if (typeof overlay === 'function') {\n      overlayElement = overlay();\n    } else {\n      overlayElement = overlay;\n    }\n    return overlayElement;\n  }, [overlay]);\n  var composedRef = composeRef(ref, overlayNode === null || overlayNode === void 0 ? void 0 : overlayNode.ref);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, arrow && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-arrow\")\n  }), /*#__PURE__*/React.cloneElement(overlayNode, {\n    ref: supportRef(overlayNode) ? composedRef : undefined\n  }));\n});\nexport default Overlay;","var autoAdjustOverflow = {\n  adjustX: 1,\n  adjustY: 1\n};\nvar targetOffset = [0, 0];\nvar placements = {\n  topLeft: {\n    points: ['bl', 'tl'],\n    overflow: autoAdjustOverflow,\n    offset: [0, -4],\n    targetOffset: targetOffset\n  },\n  top: {\n    points: ['bc', 'tc'],\n    overflow: autoAdjustOverflow,\n    offset: [0, -4],\n    targetOffset: targetOffset\n  },\n  topRight: {\n    points: ['br', 'tr'],\n    overflow: autoAdjustOverflow,\n    offset: [0, -4],\n    targetOffset: targetOffset\n  },\n  bottomLeft: {\n    points: ['tl', 'bl'],\n    overflow: autoAdjustOverflow,\n    offset: [0, 4],\n    targetOffset: targetOffset\n  },\n  bottom: {\n    points: ['tc', 'bc'],\n    overflow: autoAdjustOverflow,\n    offset: [0, 4],\n    targetOffset: targetOffset\n  },\n  bottomRight: {\n    points: ['tr', 'br'],\n    overflow: autoAdjustOverflow,\n    offset: [0, 4],\n    targetOffset: targetOffset\n  }\n};\nexport default placements;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"arrow\", \"prefixCls\", \"transitionName\", \"animation\", \"align\", \"placement\", \"placements\", \"getPopupContainer\", \"showAction\", \"hideAction\", \"overlayClassName\", \"overlayStyle\", \"visible\", \"trigger\", \"autoFocus\", \"overlay\", \"children\", \"onVisibleChange\"];\nimport Trigger from '@rc-component/trigger';\nimport classNames from 'classnames';\nimport { composeRef, supportRef } from \"rc-util/es/ref\";\nimport React from 'react';\nimport useAccessibility from \"./hooks/useAccessibility\";\nimport Overlay from \"./Overlay\";\nimport Placements from \"./placements\";\nfunction Dropdown(props, ref) {\n  var _children$props;\n  var _props$arrow = props.arrow,\n    arrow = _props$arrow === void 0 ? false : _props$arrow,\n    _props$prefixCls = props.prefixCls,\n    prefixCls = _props$prefixCls === void 0 ? 'rc-dropdown' : _props$prefixCls,\n    transitionName = props.transitionName,\n    animation = props.animation,\n    align = props.align,\n    _props$placement = props.placement,\n    placement = _props$placement === void 0 ? 'bottomLeft' : _props$placement,\n    _props$placements = props.placements,\n    placements = _props$placements === void 0 ? Placements : _props$placements,\n    getPopupContainer = props.getPopupContainer,\n    showAction = props.showAction,\n    hideAction = props.hideAction,\n    overlayClassName = props.overlayClassName,\n    overlayStyle = props.overlayStyle,\n    visible = props.visible,\n    _props$trigger = props.trigger,\n    trigger = _props$trigger === void 0 ? ['hover'] : _props$trigger,\n    autoFocus = props.autoFocus,\n    overlay = props.overlay,\n    children = props.children,\n    onVisibleChange = props.onVisibleChange,\n    otherProps = _objectWithoutProperties(props, _excluded);\n  var _React$useState = React.useState(),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    triggerVisible = _React$useState2[0],\n    setTriggerVisible = _React$useState2[1];\n  var mergedVisible = 'visible' in props ? visible : triggerVisible;\n  var triggerRef = React.useRef(null);\n  var overlayRef = React.useRef(null);\n  var childRef = React.useRef(null);\n  React.useImperativeHandle(ref, function () {\n    return triggerRef.current;\n  });\n  var handleVisibleChange = function handleVisibleChange(newVisible) {\n    setTriggerVisible(newVisible);\n    onVisibleChange === null || onVisibleChange === void 0 ? void 0 : onVisibleChange(newVisible);\n  };\n  useAccessibility({\n    visible: mergedVisible,\n    triggerRef: childRef,\n    onVisibleChange: handleVisibleChange,\n    autoFocus: autoFocus,\n    overlayRef: overlayRef\n  });\n  var onClick = function onClick(e) {\n    var onOverlayClick = props.onOverlayClick;\n    setTriggerVisible(false);\n    if (onOverlayClick) {\n      onOverlayClick(e);\n    }\n  };\n  var getMenuElement = function getMenuElement() {\n    return /*#__PURE__*/React.createElement(Overlay, {\n      ref: overlayRef,\n      overlay: overlay,\n      prefixCls: prefixCls,\n      arrow: arrow\n    });\n  };\n  var getMenuElementOrLambda = function getMenuElementOrLambda() {\n    if (typeof overlay === 'function') {\n      return getMenuElement;\n    }\n    return getMenuElement();\n  };\n  var getMinOverlayWidthMatchTrigger = function getMinOverlayWidthMatchTrigger() {\n    var minOverlayWidthMatchTrigger = props.minOverlayWidthMatchTrigger,\n      alignPoint = props.alignPoint;\n    if ('minOverlayWidthMatchTrigger' in props) {\n      return minOverlayWidthMatchTrigger;\n    }\n    return !alignPoint;\n  };\n  var getOpenClassName = function getOpenClassName() {\n    var openClassName = props.openClassName;\n    if (openClassName !== undefined) {\n      return openClassName;\n    }\n    return \"\".concat(prefixCls, \"-open\");\n  };\n  var childrenNode = /*#__PURE__*/React.cloneElement(children, {\n    className: classNames((_children$props = children.props) === null || _children$props === void 0 ? void 0 : _children$props.className, mergedVisible && getOpenClassName()),\n    ref: supportRef(children) ? composeRef(childRef, children.ref) : undefined\n  });\n  var triggerHideAction = hideAction;\n  if (!triggerHideAction && trigger.indexOf('contextMenu') !== -1) {\n    triggerHideAction = ['click'];\n  }\n  return /*#__PURE__*/React.createElement(Trigger, _extends({\n    builtinPlacements: placements\n  }, otherProps, {\n    prefixCls: prefixCls,\n    ref: triggerRef,\n    popupClassName: classNames(overlayClassName, _defineProperty({}, \"\".concat(prefixCls, \"-show-arrow\"), arrow)),\n    popupStyle: overlayStyle,\n    action: trigger,\n    showAction: showAction,\n    hideAction: triggerHideAction,\n    popupPlacement: placement,\n    popupAlign: align,\n    popupTransitionName: transitionName,\n    popupAnimation: animation,\n    popupVisible: mergedVisible,\n    stretch: getMinOverlayWidthMatchTrigger() ? 'minWidth' : '',\n    popup: getMenuElementOrLambda(),\n    onPopupVisibleChange: handleVisibleChange,\n    onPopupClick: onClick,\n    getPopupContainer: getPopupContainer\n  }), childrenNode);\n}\nexport default /*#__PURE__*/React.forwardRef(Dropdown);","import Dropdown from \"./Dropdown\";\nexport default Dropdown;"],"names":["ESC","KeyCode","TAB","forwardRef","props","ref","overlay","arrow","prefixCls","overlayNode","useMemo","composedRef","className","concat","undefined","autoAdjustOverflow","adjustX","adjustY","targetOffset","topLeft","points","overflow","offset","top","topRight","bottomLeft","bottom","bottomRight","_excluded","Dropdown","_children$props","_props$arrow","_props$prefixCls","transitionName","animation","align","_props$placement","placement","_props$placements","placements","getPopupContainer","showAction","hideAction","overlayClassName","overlayStyle","visible","_props$trigger","trigger","autoFocus","children","onVisibleChange","otherProps","_React$useState","_React$useState2","triggerVisible","setTriggerVisible","mergedVisible","triggerRef","overlayRef","childRef","current","handleVisibleChange","newVisible","_ref","focusMenuRef","handleCloseMenuAndReturnFocus","_triggerRef$current","_triggerRef$current$f","focus","call","focusMenu","_overlayRef$current","handleKeyDown","event","keyCode","focusResult","preventDefault","window","addEventListener","raf","removeEventListener","useAccessibility","openClassName","minOverlayWidthMatchTrigger","alignPoint","getMenuElement","childrenNode","triggerHideAction","indexOf","builtinPlacements","popupClassName","popupStyle","action","popupPlacement","popupAlign","popupTransitionName","popupAnimation","popupVisible","stretch","popup","onPopupVisibleChange","onPopupClick","e","onOverlayClick"],"sourceRoot":""}