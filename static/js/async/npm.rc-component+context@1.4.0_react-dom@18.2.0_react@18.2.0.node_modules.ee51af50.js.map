{"version":3,"file":"static/js/async/npm.rc-component+context@1.4.0_react-dom@18.2.0_react@18.2.0.node_modules.ee51af50.js","mappings":"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","sources":["webpack://@sinsa/web/../../node_modules/.pnpm/@rc-component+context@1.4.0_react-dom@18.2.0_react@18.2.0/node_modules/@rc-component/context/es/context.js","webpack://@sinsa/web/../../node_modules/.pnpm/@rc-component+context@1.4.0_react-dom@18.2.0_react@18.2.0/node_modules/@rc-component/context/es/Immutable.js","webpack://@sinsa/web/../../node_modules/.pnpm/@rc-component+context@1.4.0_react-dom@18.2.0_react@18.2.0/node_modules/@rc-component/context/es/index.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport isEqual from \"rc-util/es/isEqual\";\nimport * as React from 'react';\nimport { unstable_batchedUpdates } from 'react-dom';\nexport function createContext(defaultValue) {\n  var Context = /*#__PURE__*/React.createContext(undefined);\n  var Provider = function Provider(_ref) {\n    var value = _ref.value,\n      children = _ref.children;\n    var valueRef = React.useRef(value);\n    valueRef.current = value;\n    var _React$useState = React.useState(function () {\n        return {\n          getValue: function getValue() {\n            return valueRef.current;\n          },\n          listeners: new Set()\n        };\n      }),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      context = _React$useState2[0];\n    useLayoutEffect(function () {\n      unstable_batchedUpdates(function () {\n        context.listeners.forEach(function (listener) {\n          listener(value);\n        });\n      });\n    }, [value]);\n    return /*#__PURE__*/React.createElement(Context.Provider, {\n      value: context\n    }, children);\n  };\n  return {\n    Context: Context,\n    Provider: Provider,\n    defaultValue: defaultValue\n  };\n}\n\n/** e.g. useSelect(userContext) => user */\n\n/** e.g. useSelect(userContext, user => user.name) => user.name */\n\n/** e.g. useSelect(userContext, ['name', 'age']) => user { name, age } */\n\n/** e.g. useSelect(userContext, 'name') => user.name */\n\nexport function useContext(holder, selector) {\n  var eventSelector = useEvent(typeof selector === 'function' ? selector : function (ctx) {\n    if (selector === undefined) {\n      return ctx;\n    }\n    if (!Array.isArray(selector)) {\n      return ctx[selector];\n    }\n    var obj = {};\n    selector.forEach(function (key) {\n      obj[key] = ctx[key];\n    });\n    return obj;\n  });\n  var context = React.useContext(holder === null || holder === void 0 ? void 0 : holder.Context);\n  var _ref2 = context || {},\n    listeners = _ref2.listeners,\n    getValue = _ref2.getValue;\n  var valueRef = React.useRef();\n  valueRef.current = eventSelector(context ? getValue() : holder === null || holder === void 0 ? void 0 : holder.defaultValue);\n  var _React$useState3 = React.useState({}),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    forceUpdate = _React$useState4[1];\n  useLayoutEffect(function () {\n    if (!context) {\n      return;\n    }\n    function trigger(nextValue) {\n      var nextSelectorValue = eventSelector(nextValue);\n      if (!isEqual(valueRef.current, nextSelectorValue, true)) {\n        forceUpdate({});\n      }\n    }\n    listeners.add(trigger);\n    return function () {\n      listeners.delete(trigger);\n    };\n  }, [context]);\n  return valueRef.current;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { supportRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\n/**\n * Create Immutable pair for `makeImmutable` and `responseImmutable`.\n */\nexport default function createImmutable() {\n  var ImmutableContext = /*#__PURE__*/React.createContext(null);\n\n  /**\n   * Get render update mark by `makeImmutable` root.\n   * Do not deps on the return value as render times\n   * but only use for `useMemo` or `useCallback` deps.\n   */\n  function useImmutableMark() {\n    return React.useContext(ImmutableContext);\n  }\n\n  /**\n  * Wrapped Component will be marked as Immutable.\n  * When Component parent trigger render,\n  * it will notice children component (use with `responseImmutable`) node that parent has updated.\n  * @param Component Passed Component\n  * @param triggerRender Customize trigger `responseImmutable` children re-render logic. Default will always trigger re-render when this component re-render.\n  */\n  function makeImmutable(Component, shouldTriggerRender) {\n    var refAble = supportRef(Component);\n    var ImmutableComponent = function ImmutableComponent(props, ref) {\n      var refProps = refAble ? {\n        ref: ref\n      } : {};\n      var renderTimesRef = React.useRef(0);\n      var prevProps = React.useRef(props);\n\n      // If parent has the context, we do not wrap it\n      var mark = useImmutableMark();\n      if (mark !== null) {\n        return /*#__PURE__*/React.createElement(Component, _extends({}, props, refProps));\n      }\n      if (\n      // Always trigger re-render if not provide `notTriggerRender`\n      !shouldTriggerRender || shouldTriggerRender(prevProps.current, props)) {\n        renderTimesRef.current += 1;\n      }\n      prevProps.current = props;\n      return /*#__PURE__*/React.createElement(ImmutableContext.Provider, {\n        value: renderTimesRef.current\n      }, /*#__PURE__*/React.createElement(Component, _extends({}, props, refProps)));\n    };\n    if (process.env.NODE_ENV !== 'production') {\n      ImmutableComponent.displayName = \"ImmutableRoot(\".concat(Component.displayName || Component.name, \")\");\n    }\n    return refAble ? /*#__PURE__*/React.forwardRef(ImmutableComponent) : ImmutableComponent;\n  }\n\n  /**\n   * Wrapped Component with `React.memo`.\n   * But will rerender when parent with `makeImmutable` rerender.\n   */\n  function responseImmutable(Component, propsAreEqual) {\n    var refAble = supportRef(Component);\n    var ImmutableComponent = function ImmutableComponent(props, ref) {\n      var refProps = refAble ? {\n        ref: ref\n      } : {};\n      useImmutableMark();\n      return /*#__PURE__*/React.createElement(Component, _extends({}, props, refProps));\n    };\n    if (process.env.NODE_ENV !== 'production') {\n      ImmutableComponent.displayName = \"ImmutableResponse(\".concat(Component.displayName || Component.name, \")\");\n    }\n    return refAble ? /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(ImmutableComponent), propsAreEqual) : /*#__PURE__*/React.memo(ImmutableComponent, propsAreEqual);\n  }\n  return {\n    makeImmutable: makeImmutable,\n    responseImmutable: responseImmutable,\n    useImmutableMark: useImmutableMark\n  };\n}","import { createContext, useContext } from \"./context\";\nimport createImmutable from \"./Immutable\";\n\n// For legacy usage, we export it directly\nvar _createImmutable = createImmutable(),\n  makeImmutable = _createImmutable.makeImmutable,\n  responseImmutable = _createImmutable.responseImmutable,\n  useImmutableMark = _createImmutable.useImmutableMark;\nexport { createContext, useContext, createImmutable, makeImmutable, responseImmutable, useImmutableMark };"],"names":["createContext","defaultValue","Context","undefined","Provider","_ref","value","children","valueRef","current","_React$useState","getValue","listeners","Set","context","useLayoutEffect","unstable_batchedUpdates","forEach","listener","useContext","holder","selector","eventSelector","useEvent","ctx","Array","isArray","obj","key","_ref2","_React$useState3","forceUpdate","add","trigger","delete","nextValue","nextSelectorValue","isEqual","createImmutable","ImmutableContext","useImmutableMark","makeImmutable","Component","shouldTriggerRender","refAble","ImmutableComponent","props","ref","refProps","renderTimesRef","prevProps","responseImmutable","propsAreEqual","_createImmutable"],"sourceRoot":""}