{"version":3,"file":"static/js/async/npm.rc-tree@5.8.2_react-dom@18.2.0_react@18.2.0.aa48ce0f.js","mappings":"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","sources":["webpack://@sinsa/web/../../node_modules/.pnpm/rc-tree@5.8.2_react-dom@18.2.0_react@18.2.0/node_modules/rc-tree/es/contextTypes.js","webpack://@sinsa/web/../../node_modules/.pnpm/rc-tree@5.8.2_react-dom@18.2.0_react@18.2.0/node_modules/rc-tree/es/Indent.js","webpack://@sinsa/web/../../node_modules/.pnpm/rc-tree@5.8.2_react-dom@18.2.0_react@18.2.0/node_modules/rc-tree/es/TreeNode.js","webpack://@sinsa/web/../../node_modules/.pnpm/rc-tree@5.8.2_react-dom@18.2.0_react@18.2.0/node_modules/rc-tree/es/util.js","webpack://@sinsa/web/../../node_modules/.pnpm/rc-tree@5.8.2_react-dom@18.2.0_react@18.2.0/node_modules/rc-tree/es/utils/conductUtil.js","webpack://@sinsa/web/../../node_modules/.pnpm/rc-tree@5.8.2_react-dom@18.2.0_react@18.2.0/node_modules/rc-tree/es/utils/keyUtil.js","webpack://@sinsa/web/../../node_modules/.pnpm/rc-tree@5.8.2_react-dom@18.2.0_react@18.2.0/node_modules/rc-tree/es/utils/treeUtil.js"],"sourcesContent":["/**\n * Webpack has bug for import loop, which is not the same behavior as ES module.\n * When util.js imports the TreeNode for tree generate will cause treeContextTypes be empty.\n */\nimport * as React from 'react';\nexport var TreeContext = /*#__PURE__*/React.createContext(null);","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nvar Indent = function Indent(_ref) {\n  var prefixCls = _ref.prefixCls,\n    level = _ref.level,\n    isStart = _ref.isStart,\n    isEnd = _ref.isEnd;\n  var baseClassName = \"\".concat(prefixCls, \"-indent-unit\");\n  var list = [];\n  for (var i = 0; i < level; i += 1) {\n    var _classNames;\n    list.push( /*#__PURE__*/React.createElement(\"span\", {\n      key: i,\n      className: classNames(baseClassName, (_classNames = {}, _defineProperty(_classNames, \"\".concat(baseClassName, \"-start\"), isStart[i]), _defineProperty(_classNames, \"\".concat(baseClassName, \"-end\"), isEnd[i]), _classNames))\n    }));\n  }\n  return /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    className: \"\".concat(prefixCls, \"-indent\")\n  }, list);\n};\nexport default /*#__PURE__*/React.memo(Indent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nvar _excluded = [\"eventKey\", \"className\", \"style\", \"dragOver\", \"dragOverGapTop\", \"dragOverGapBottom\", \"isLeaf\", \"isStart\", \"isEnd\", \"expanded\", \"selected\", \"checked\", \"halfChecked\", \"loading\", \"domRef\", \"active\", \"data\", \"onMouseMove\", \"selectable\"];\nimport classNames from 'classnames';\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport * as React from 'react';\n// @ts-ignore\nimport { TreeContext } from './contextTypes';\nimport Indent from './Indent';\nimport getEntity from './utils/keyUtil';\nimport { convertNodePropsToEventData } from './utils/treeUtil';\nvar ICON_OPEN = 'open';\nvar ICON_CLOSE = 'close';\nvar defaultTitle = '---';\nvar InternalTreeNode = /*#__PURE__*/function (_React$Component) {\n  _inherits(InternalTreeNode, _React$Component);\n  var _super = _createSuper(InternalTreeNode);\n  function InternalTreeNode() {\n    var _this;\n    _classCallCheck(this, InternalTreeNode);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      dragNodeHighlight: false\n    };\n    _this.selectHandle = void 0;\n    _this.cacheIndent = void 0;\n    _this.onSelectorClick = function (e) {\n      // Click trigger before select/check operation\n      var onNodeClick = _this.props.context.onNodeClick;\n      onNodeClick(e, convertNodePropsToEventData(_this.props));\n      if (_this.isSelectable()) {\n        _this.onSelect(e);\n      } else {\n        _this.onCheck(e);\n      }\n    };\n    _this.onSelectorDoubleClick = function (e) {\n      var onNodeDoubleClick = _this.props.context.onNodeDoubleClick;\n      onNodeDoubleClick(e, convertNodePropsToEventData(_this.props));\n    };\n    _this.onSelect = function (e) {\n      if (_this.isDisabled()) return;\n      var onNodeSelect = _this.props.context.onNodeSelect;\n      onNodeSelect(e, convertNodePropsToEventData(_this.props));\n    };\n    _this.onCheck = function (e) {\n      if (_this.isDisabled()) return;\n      var _this$props = _this.props,\n        disableCheckbox = _this$props.disableCheckbox,\n        checked = _this$props.checked;\n      var onNodeCheck = _this.props.context.onNodeCheck;\n      if (!_this.isCheckable() || disableCheckbox) return;\n      var targetChecked = !checked;\n      onNodeCheck(e, convertNodePropsToEventData(_this.props), targetChecked);\n    };\n    _this.onMouseEnter = function (e) {\n      var onNodeMouseEnter = _this.props.context.onNodeMouseEnter;\n      onNodeMouseEnter(e, convertNodePropsToEventData(_this.props));\n    };\n    _this.onMouseLeave = function (e) {\n      var onNodeMouseLeave = _this.props.context.onNodeMouseLeave;\n      onNodeMouseLeave(e, convertNodePropsToEventData(_this.props));\n    };\n    _this.onContextMenu = function (e) {\n      var onNodeContextMenu = _this.props.context.onNodeContextMenu;\n      onNodeContextMenu(e, convertNodePropsToEventData(_this.props));\n    };\n    _this.onDragStart = function (e) {\n      var onNodeDragStart = _this.props.context.onNodeDragStart;\n      e.stopPropagation();\n      _this.setState({\n        dragNodeHighlight: true\n      });\n      onNodeDragStart(e, _assertThisInitialized(_this));\n      try {\n        // ie throw error\n        // firefox-need-it\n        e.dataTransfer.setData('text/plain', '');\n      } catch (error) {\n        // empty\n      }\n    };\n    _this.onDragEnter = function (e) {\n      var onNodeDragEnter = _this.props.context.onNodeDragEnter;\n      e.preventDefault();\n      e.stopPropagation();\n      onNodeDragEnter(e, _assertThisInitialized(_this));\n    };\n    _this.onDragOver = function (e) {\n      var onNodeDragOver = _this.props.context.onNodeDragOver;\n      e.preventDefault();\n      e.stopPropagation();\n      onNodeDragOver(e, _assertThisInitialized(_this));\n    };\n    _this.onDragLeave = function (e) {\n      var onNodeDragLeave = _this.props.context.onNodeDragLeave;\n      e.stopPropagation();\n      onNodeDragLeave(e, _assertThisInitialized(_this));\n    };\n    _this.onDragEnd = function (e) {\n      var onNodeDragEnd = _this.props.context.onNodeDragEnd;\n      e.stopPropagation();\n      _this.setState({\n        dragNodeHighlight: false\n      });\n      onNodeDragEnd(e, _assertThisInitialized(_this));\n    };\n    _this.onDrop = function (e) {\n      var onNodeDrop = _this.props.context.onNodeDrop;\n      e.preventDefault();\n      e.stopPropagation();\n      _this.setState({\n        dragNodeHighlight: false\n      });\n      onNodeDrop(e, _assertThisInitialized(_this));\n    };\n    // Disabled item still can be switch\n    _this.onExpand = function (e) {\n      var _this$props2 = _this.props,\n        loading = _this$props2.loading,\n        onNodeExpand = _this$props2.context.onNodeExpand;\n      if (loading) return;\n      onNodeExpand(e, convertNodePropsToEventData(_this.props));\n    };\n    // Drag usage\n    _this.setSelectHandle = function (node) {\n      _this.selectHandle = node;\n    };\n    _this.getNodeState = function () {\n      var expanded = _this.props.expanded;\n      if (_this.isLeaf()) {\n        return null;\n      }\n      return expanded ? ICON_OPEN : ICON_CLOSE;\n    };\n    _this.hasChildren = function () {\n      var eventKey = _this.props.eventKey;\n      var keyEntities = _this.props.context.keyEntities;\n      var _ref = getEntity(keyEntities, eventKey) || {},\n        children = _ref.children;\n      return !!(children || []).length;\n    };\n    _this.isLeaf = function () {\n      var _this$props3 = _this.props,\n        isLeaf = _this$props3.isLeaf,\n        loaded = _this$props3.loaded;\n      var loadData = _this.props.context.loadData;\n      var hasChildren = _this.hasChildren();\n      if (isLeaf === false) {\n        return false;\n      }\n      return isLeaf || !loadData && !hasChildren || loadData && loaded && !hasChildren;\n    };\n    _this.isDisabled = function () {\n      var disabled = _this.props.disabled;\n      var treeDisabled = _this.props.context.disabled;\n      return !!(treeDisabled || disabled);\n    };\n    _this.isCheckable = function () {\n      var checkable = _this.props.checkable;\n      var treeCheckable = _this.props.context.checkable;\n      // Return false if tree or treeNode is not checkable\n      if (!treeCheckable || checkable === false) return false;\n      return treeCheckable;\n    };\n    // Load data to avoid default expanded tree without data\n    _this.syncLoadData = function (props) {\n      var expanded = props.expanded,\n        loading = props.loading,\n        loaded = props.loaded;\n      var _this$props$context = _this.props.context,\n        loadData = _this$props$context.loadData,\n        onNodeLoad = _this$props$context.onNodeLoad;\n      if (loading) {\n        return;\n      }\n      // read from state to avoid loadData at same time\n      if (loadData && expanded && !_this.isLeaf()) {\n        // We needn't reload data when has children in sync logic\n        // It's only needed in node expanded\n        if (!_this.hasChildren() && !loaded) {\n          onNodeLoad(convertNodePropsToEventData(_this.props));\n        }\n      }\n    };\n    _this.isDraggable = function () {\n      var _this$props4 = _this.props,\n        data = _this$props4.data,\n        draggable = _this$props4.context.draggable;\n      return !!(draggable && (!draggable.nodeDraggable || draggable.nodeDraggable(data)));\n    };\n    // ==================== Render: Drag Handler ====================\n    _this.renderDragHandler = function () {\n      var _this$props$context2 = _this.props.context,\n        draggable = _this$props$context2.draggable,\n        prefixCls = _this$props$context2.prefixCls;\n      return (draggable === null || draggable === void 0 ? void 0 : draggable.icon) ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-draggable-icon\")\n      }, draggable.icon) : null;\n    };\n    // ====================== Render: Switcher ======================\n    _this.renderSwitcherIconDom = function (isLeaf) {\n      var switcherIconFromProps = _this.props.switcherIcon;\n      var switcherIconFromCtx = _this.props.context.switcherIcon;\n      var switcherIcon = switcherIconFromProps || switcherIconFromCtx;\n      // if switcherIconDom is null, no render switcher span\n      if (typeof switcherIcon === 'function') {\n        return switcherIcon(_objectSpread(_objectSpread({}, _this.props), {}, {\n          isLeaf: isLeaf\n        }));\n      }\n      return switcherIcon;\n    };\n    // Switcher\n    _this.renderSwitcher = function () {\n      var expanded = _this.props.expanded;\n      var prefixCls = _this.props.context.prefixCls;\n      if (_this.isLeaf()) {\n        // if switcherIconDom is null, no render switcher span\n        var _switcherIconDom = _this.renderSwitcherIconDom(true);\n        return _switcherIconDom !== false ? /*#__PURE__*/React.createElement(\"span\", {\n          className: classNames(\"\".concat(prefixCls, \"-switcher\"), \"\".concat(prefixCls, \"-switcher-noop\"))\n        }, _switcherIconDom) : null;\n      }\n      var switcherCls = classNames(\"\".concat(prefixCls, \"-switcher\"), \"\".concat(prefixCls, \"-switcher_\").concat(expanded ? ICON_OPEN : ICON_CLOSE));\n      var switcherIconDom = _this.renderSwitcherIconDom(false);\n      return switcherIconDom !== false ? /*#__PURE__*/React.createElement(\"span\", {\n        onClick: _this.onExpand,\n        className: switcherCls\n      }, switcherIconDom) : null;\n    };\n    // ====================== Render: Checkbox ======================\n    // Checkbox\n    _this.renderCheckbox = function () {\n      var _this$props5 = _this.props,\n        checked = _this$props5.checked,\n        halfChecked = _this$props5.halfChecked,\n        disableCheckbox = _this$props5.disableCheckbox;\n      var prefixCls = _this.props.context.prefixCls;\n      var disabled = _this.isDisabled();\n      var checkable = _this.isCheckable();\n      if (!checkable) return null;\n      // [Legacy] Custom element should be separate with `checkable` in future\n      var $custom = typeof checkable !== 'boolean' ? checkable : null;\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames(\"\".concat(prefixCls, \"-checkbox\"), checked && \"\".concat(prefixCls, \"-checkbox-checked\"), !checked && halfChecked && \"\".concat(prefixCls, \"-checkbox-indeterminate\"), (disabled || disableCheckbox) && \"\".concat(prefixCls, \"-checkbox-disabled\")),\n        onClick: _this.onCheck\n      }, $custom);\n    };\n    // ==================== Render: Title + Icon ====================\n    _this.renderIcon = function () {\n      var loading = _this.props.loading;\n      var prefixCls = _this.props.context.prefixCls;\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames(\"\".concat(prefixCls, \"-iconEle\"), \"\".concat(prefixCls, \"-icon__\").concat(_this.getNodeState() || 'docu'), loading && \"\".concat(prefixCls, \"-icon_loading\"))\n      });\n    };\n    // Icon + Title\n    _this.renderSelector = function () {\n      var dragNodeHighlight = _this.state.dragNodeHighlight;\n      var _this$props6 = _this.props,\n        _this$props6$title = _this$props6.title,\n        title = _this$props6$title === void 0 ? defaultTitle : _this$props6$title,\n        selected = _this$props6.selected,\n        icon = _this$props6.icon,\n        loading = _this$props6.loading,\n        data = _this$props6.data;\n      var _this$props$context3 = _this.props.context,\n        prefixCls = _this$props$context3.prefixCls,\n        showIcon = _this$props$context3.showIcon,\n        treeIcon = _this$props$context3.icon,\n        loadData = _this$props$context3.loadData,\n        titleRender = _this$props$context3.titleRender;\n      var disabled = _this.isDisabled();\n      var wrapClass = \"\".concat(prefixCls, \"-node-content-wrapper\");\n      // Icon - Still show loading icon when loading without showIcon\n      var $icon;\n      if (showIcon) {\n        var currentIcon = icon || treeIcon;\n        $icon = currentIcon ? /*#__PURE__*/React.createElement(\"span\", {\n          className: classNames(\"\".concat(prefixCls, \"-iconEle\"), \"\".concat(prefixCls, \"-icon__customize\"))\n        }, typeof currentIcon === 'function' ? currentIcon(_this.props) : currentIcon) : _this.renderIcon();\n      } else if (loadData && loading) {\n        $icon = _this.renderIcon();\n      }\n      // Title\n      var titleNode;\n      if (typeof title === 'function') {\n        titleNode = title(data);\n      } else if (titleRender) {\n        titleNode = titleRender(data);\n      } else {\n        titleNode = title;\n      }\n      var $title = /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-title\")\n      }, titleNode);\n      return /*#__PURE__*/React.createElement(\"span\", {\n        ref: _this.setSelectHandle,\n        title: typeof title === 'string' ? title : '',\n        className: classNames(\"\".concat(wrapClass), \"\".concat(wrapClass, \"-\").concat(_this.getNodeState() || 'normal'), !disabled && (selected || dragNodeHighlight) && \"\".concat(prefixCls, \"-node-selected\")),\n        onMouseEnter: _this.onMouseEnter,\n        onMouseLeave: _this.onMouseLeave,\n        onContextMenu: _this.onContextMenu,\n        onClick: _this.onSelectorClick,\n        onDoubleClick: _this.onSelectorDoubleClick\n      }, $icon, $title, _this.renderDropIndicator());\n    };\n    // =================== Render: Drop Indicator ===================\n    _this.renderDropIndicator = function () {\n      var _this$props7 = _this.props,\n        disabled = _this$props7.disabled,\n        eventKey = _this$props7.eventKey;\n      var _this$props$context4 = _this.props.context,\n        draggable = _this$props$context4.draggable,\n        dropLevelOffset = _this$props$context4.dropLevelOffset,\n        dropPosition = _this$props$context4.dropPosition,\n        prefixCls = _this$props$context4.prefixCls,\n        indent = _this$props$context4.indent,\n        dropIndicatorRender = _this$props$context4.dropIndicatorRender,\n        dragOverNodeKey = _this$props$context4.dragOverNodeKey,\n        direction = _this$props$context4.direction;\n      var rootDraggable = !!draggable;\n      // allowDrop is calculated in Tree.tsx, there is no need for calc it here\n      var showIndicator = !disabled && rootDraggable && dragOverNodeKey === eventKey;\n      // This is a hot fix which is already fixed in\n      // https://github.com/react-component/tree/pull/743/files\n      // But some case need break point so we hack on this\n      // ref https://github.com/ant-design/ant-design/issues/43493\n      var mergedIndent = indent !== null && indent !== void 0 ? indent : _this.cacheIndent;\n      _this.cacheIndent = indent;\n      return showIndicator ? dropIndicatorRender({\n        dropPosition: dropPosition,\n        dropLevelOffset: dropLevelOffset,\n        indent: mergedIndent,\n        prefixCls: prefixCls,\n        direction: direction\n      }) : null;\n    };\n    return _this;\n  }\n  _createClass(InternalTreeNode, [{\n    key: \"componentDidMount\",\n    value:\n    // Isomorphic needn't load data in server side\n    function componentDidMount() {\n      this.syncLoadData(this.props);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.syncLoadData(this.props);\n    }\n  }, {\n    key: \"isSelectable\",\n    value: function isSelectable() {\n      var selectable = this.props.selectable;\n      var treeSelectable = this.props.context.selectable;\n      // Ignore when selectable is undefined or null\n      if (typeof selectable === 'boolean') {\n        return selectable;\n      }\n      return treeSelectable;\n    }\n  }, {\n    key: \"render\",\n    value:\n    // =========================== Render ===========================\n    function render() {\n      var _classNames;\n      var _this$props8 = this.props,\n        eventKey = _this$props8.eventKey,\n        className = _this$props8.className,\n        style = _this$props8.style,\n        dragOver = _this$props8.dragOver,\n        dragOverGapTop = _this$props8.dragOverGapTop,\n        dragOverGapBottom = _this$props8.dragOverGapBottom,\n        isLeaf = _this$props8.isLeaf,\n        isStart = _this$props8.isStart,\n        isEnd = _this$props8.isEnd,\n        expanded = _this$props8.expanded,\n        selected = _this$props8.selected,\n        checked = _this$props8.checked,\n        halfChecked = _this$props8.halfChecked,\n        loading = _this$props8.loading,\n        domRef = _this$props8.domRef,\n        active = _this$props8.active,\n        data = _this$props8.data,\n        onMouseMove = _this$props8.onMouseMove,\n        selectable = _this$props8.selectable,\n        otherProps = _objectWithoutProperties(_this$props8, _excluded);\n      var _this$props$context5 = this.props.context,\n        prefixCls = _this$props$context5.prefixCls,\n        filterTreeNode = _this$props$context5.filterTreeNode,\n        keyEntities = _this$props$context5.keyEntities,\n        dropContainerKey = _this$props$context5.dropContainerKey,\n        dropTargetKey = _this$props$context5.dropTargetKey,\n        draggingNodeKey = _this$props$context5.draggingNodeKey;\n      var disabled = this.isDisabled();\n      var dataOrAriaAttributeProps = pickAttrs(otherProps, {\n        aria: true,\n        data: true\n      });\n      var _ref2 = getEntity(keyEntities, eventKey) || {},\n        level = _ref2.level;\n      var isEndNode = isEnd[isEnd.length - 1];\n      var mergedDraggable = this.isDraggable();\n      var draggableWithoutDisabled = !disabled && mergedDraggable;\n      var dragging = draggingNodeKey === eventKey;\n      var ariaSelected = selectable !== undefined ? {\n        'aria-selected': !!selectable\n      } : undefined;\n      return /*#__PURE__*/React.createElement(\"div\", _extends({\n        ref: domRef,\n        className: classNames(className, \"\".concat(prefixCls, \"-treenode\"), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-treenode-disabled\"), disabled), _defineProperty(_classNames, \"\".concat(prefixCls, \"-treenode-switcher-\").concat(expanded ? 'open' : 'close'), !isLeaf), _defineProperty(_classNames, \"\".concat(prefixCls, \"-treenode-checkbox-checked\"), checked), _defineProperty(_classNames, \"\".concat(prefixCls, \"-treenode-checkbox-indeterminate\"), halfChecked), _defineProperty(_classNames, \"\".concat(prefixCls, \"-treenode-selected\"), selected), _defineProperty(_classNames, \"\".concat(prefixCls, \"-treenode-loading\"), loading), _defineProperty(_classNames, \"\".concat(prefixCls, \"-treenode-active\"), active), _defineProperty(_classNames, \"\".concat(prefixCls, \"-treenode-leaf-last\"), isEndNode), _defineProperty(_classNames, \"\".concat(prefixCls, \"-treenode-draggable\"), mergedDraggable), _defineProperty(_classNames, \"dragging\", dragging), _defineProperty(_classNames, 'drop-target', dropTargetKey === eventKey), _defineProperty(_classNames, 'drop-container', dropContainerKey === eventKey), _defineProperty(_classNames, 'drag-over', !disabled && dragOver), _defineProperty(_classNames, 'drag-over-gap-top', !disabled && dragOverGapTop), _defineProperty(_classNames, 'drag-over-gap-bottom', !disabled && dragOverGapBottom), _defineProperty(_classNames, 'filter-node', filterTreeNode && filterTreeNode(convertNodePropsToEventData(this.props))), _classNames)),\n        style: style\n        // Draggable config\n        ,\n        draggable: draggableWithoutDisabled,\n        \"aria-grabbed\": dragging,\n        onDragStart: draggableWithoutDisabled ? this.onDragStart : undefined\n        // Drop config\n        ,\n        onDragEnter: mergedDraggable ? this.onDragEnter : undefined,\n        onDragOver: mergedDraggable ? this.onDragOver : undefined,\n        onDragLeave: mergedDraggable ? this.onDragLeave : undefined,\n        onDrop: mergedDraggable ? this.onDrop : undefined,\n        onDragEnd: mergedDraggable ? this.onDragEnd : undefined,\n        onMouseMove: onMouseMove\n      }, ariaSelected, dataOrAriaAttributeProps), /*#__PURE__*/React.createElement(Indent, {\n        prefixCls: prefixCls,\n        level: level,\n        isStart: isStart,\n        isEnd: isEnd\n      }), this.renderDragHandler(), this.renderSwitcher(), this.renderCheckbox(), this.renderSelector());\n    }\n  }]);\n  return InternalTreeNode;\n}(React.Component);\nvar ContextTreeNode = function ContextTreeNode(props) {\n  return /*#__PURE__*/React.createElement(TreeContext.Consumer, null, function (context) {\n    return /*#__PURE__*/React.createElement(InternalTreeNode, _extends({}, props, {\n      context: context\n    }));\n  });\n};\nContextTreeNode.displayName = 'TreeNode';\nContextTreeNode.isTreeNode = 1;\nexport default ContextTreeNode;","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"children\"];\n/* eslint-disable no-lonely-if */\n/**\n * Legacy code. Should avoid to use if you are new to import these code.\n */\nimport warning from \"rc-util/es/warning\";\nimport React from 'react';\nimport TreeNode from './TreeNode';\nimport getEntity from './utils/keyUtil';\nexport { getPosition, isTreeNode } from './utils/treeUtil';\nexport function arrDel(list, value) {\n  if (!list) return [];\n  var clone = list.slice();\n  var index = clone.indexOf(value);\n  if (index >= 0) {\n    clone.splice(index, 1);\n  }\n  return clone;\n}\nexport function arrAdd(list, value) {\n  var clone = (list || []).slice();\n  if (clone.indexOf(value) === -1) {\n    clone.push(value);\n  }\n  return clone;\n}\nexport function posToArr(pos) {\n  return pos.split('-');\n}\nexport function getDragChildrenKeys(dragNodeKey, keyEntities) {\n  // not contains self\n  // self for left or right drag\n  var dragChildrenKeys = [];\n  var entity = getEntity(keyEntities, dragNodeKey);\n  function dig() {\n    var list = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    list.forEach(function (_ref) {\n      var key = _ref.key,\n        children = _ref.children;\n      dragChildrenKeys.push(key);\n      dig(children);\n    });\n  }\n  dig(entity.children);\n  return dragChildrenKeys;\n}\nexport function isLastChild(treeNodeEntity) {\n  if (treeNodeEntity.parent) {\n    var posArr = posToArr(treeNodeEntity.pos);\n    return Number(posArr[posArr.length - 1]) === treeNodeEntity.parent.children.length - 1;\n  }\n  return false;\n}\nexport function isFirstChild(treeNodeEntity) {\n  var posArr = posToArr(treeNodeEntity.pos);\n  return Number(posArr[posArr.length - 1]) === 0;\n}\n// Only used when drag, not affect SSR.\nexport function calcDropPosition(event, dragNode, targetNode, indent, startMousePosition, allowDrop, flattenedNodes, keyEntities, expandKeys, direction) {\n  var _abstractDropNodeEnti;\n  var clientX = event.clientX,\n    clientY = event.clientY;\n  var _event$target$getBoun = event.target.getBoundingClientRect(),\n    top = _event$target$getBoun.top,\n    height = _event$target$getBoun.height;\n  // optional chain for testing\n  var horizontalMouseOffset = (direction === 'rtl' ? -1 : 1) * (((startMousePosition === null || startMousePosition === void 0 ? void 0 : startMousePosition.x) || 0) - clientX);\n  var rawDropLevelOffset = (horizontalMouseOffset - 12) / indent;\n  // find abstract drop node by horizontal offset\n  var abstractDropNodeEntity = getEntity(keyEntities, targetNode.props.eventKey);\n  if (clientY < top + height / 2) {\n    // first half, set abstract drop node to previous node\n    var nodeIndex = flattenedNodes.findIndex(function (flattenedNode) {\n      return flattenedNode.key === abstractDropNodeEntity.key;\n    });\n    var prevNodeIndex = nodeIndex <= 0 ? 0 : nodeIndex - 1;\n    var prevNodeKey = flattenedNodes[prevNodeIndex].key;\n    abstractDropNodeEntity = getEntity(keyEntities, prevNodeKey);\n  }\n  var initialAbstractDropNodeKey = abstractDropNodeEntity.key;\n  var abstractDragOverEntity = abstractDropNodeEntity;\n  var dragOverNodeKey = abstractDropNodeEntity.key;\n  var dropPosition = 0;\n  var dropLevelOffset = 0;\n  // Only allow cross level drop when dragging on a non-expanded node\n  if (!expandKeys.includes(initialAbstractDropNodeKey)) {\n    for (var i = 0; i < rawDropLevelOffset; i += 1) {\n      if (isLastChild(abstractDropNodeEntity)) {\n        abstractDropNodeEntity = abstractDropNodeEntity.parent;\n        dropLevelOffset += 1;\n      } else {\n        break;\n      }\n    }\n  }\n  var abstractDragDataNode = dragNode.props.data;\n  var abstractDropDataNode = abstractDropNodeEntity.node;\n  var dropAllowed = true;\n  if (isFirstChild(abstractDropNodeEntity) && abstractDropNodeEntity.level === 0 && clientY < top + height / 2 && allowDrop({\n    dragNode: abstractDragDataNode,\n    dropNode: abstractDropDataNode,\n    dropPosition: -1\n  }) && abstractDropNodeEntity.key === targetNode.props.eventKey) {\n    // first half of first node in first level\n    dropPosition = -1;\n  } else if ((abstractDragOverEntity.children || []).length && expandKeys.includes(dragOverNodeKey)) {\n    // drop on expanded node\n    // only allow drop inside\n    if (allowDrop({\n      dragNode: abstractDragDataNode,\n      dropNode: abstractDropDataNode,\n      dropPosition: 0\n    })) {\n      dropPosition = 0;\n    } else {\n      dropAllowed = false;\n    }\n  } else if (dropLevelOffset === 0) {\n    if (rawDropLevelOffset > -1.5) {\n      // | Node     | <- abstractDropNode\n      // | -^-===== | <- mousePosition\n      // 1. try drop after\n      // 2. do not allow drop\n      if (allowDrop({\n        dragNode: abstractDragDataNode,\n        dropNode: abstractDropDataNode,\n        dropPosition: 1\n      })) {\n        dropPosition = 1;\n      } else {\n        dropAllowed = false;\n      }\n    } else {\n      // | Node     | <- abstractDropNode\n      // | ---==^== | <- mousePosition\n      // whether it has children or doesn't has children\n      // always\n      // 1. try drop inside\n      // 2. try drop after\n      // 3. do not allow drop\n      if (allowDrop({\n        dragNode: abstractDragDataNode,\n        dropNode: abstractDropDataNode,\n        dropPosition: 0\n      })) {\n        dropPosition = 0;\n      } else if (allowDrop({\n        dragNode: abstractDragDataNode,\n        dropNode: abstractDropDataNode,\n        dropPosition: 1\n      })) {\n        dropPosition = 1;\n      } else {\n        dropAllowed = false;\n      }\n    }\n  } else {\n    // | Node1 | <- abstractDropNode\n    //      |  Node2  |\n    // --^--|----=====| <- mousePosition\n    // 1. try insert after Node1\n    // 2. do not allow drop\n    if (allowDrop({\n      dragNode: abstractDragDataNode,\n      dropNode: abstractDropDataNode,\n      dropPosition: 1\n    })) {\n      dropPosition = 1;\n    } else {\n      dropAllowed = false;\n    }\n  }\n  return {\n    dropPosition: dropPosition,\n    dropLevelOffset: dropLevelOffset,\n    dropTargetKey: abstractDropNodeEntity.key,\n    dropTargetPos: abstractDropNodeEntity.pos,\n    dragOverNodeKey: dragOverNodeKey,\n    dropContainerKey: dropPosition === 0 ? null : ((_abstractDropNodeEnti = abstractDropNodeEntity.parent) === null || _abstractDropNodeEnti === void 0 ? void 0 : _abstractDropNodeEnti.key) || null,\n    dropAllowed: dropAllowed\n  };\n}\n/**\n * Return selectedKeys according with multiple prop\n * @param selectedKeys\n * @param props\n * @returns [string]\n */\nexport function calcSelectedKeys(selectedKeys, props) {\n  if (!selectedKeys) return undefined;\n  var multiple = props.multiple;\n  if (multiple) {\n    return selectedKeys.slice();\n  }\n  if (selectedKeys.length) {\n    return [selectedKeys[0]];\n  }\n  return selectedKeys;\n}\nvar internalProcessProps = function internalProcessProps(props) {\n  return props;\n};\nexport function convertDataToTree(treeData, processor) {\n  if (!treeData) return [];\n  var _ref2 = processor || {},\n    _ref2$processProps = _ref2.processProps,\n    processProps = _ref2$processProps === void 0 ? internalProcessProps : _ref2$processProps;\n  var list = Array.isArray(treeData) ? treeData : [treeData];\n  return list.map(function (_ref3) {\n    var children = _ref3.children,\n      props = _objectWithoutProperties(_ref3, _excluded);\n    var childrenNodes = convertDataToTree(children, processor);\n    return /*#__PURE__*/React.createElement(TreeNode, _extends({\n      key: props.key\n    }, processProps(props)), childrenNodes);\n  });\n}\n/**\n * Parse `checkedKeys` to { checkedKeys, halfCheckedKeys } style\n */\nexport function parseCheckedKeys(keys) {\n  if (!keys) {\n    return null;\n  }\n  // Convert keys to object format\n  var keyProps;\n  if (Array.isArray(keys)) {\n    // [Legacy] Follow the api doc\n    keyProps = {\n      checkedKeys: keys,\n      halfCheckedKeys: undefined\n    };\n  } else if (_typeof(keys) === 'object') {\n    keyProps = {\n      checkedKeys: keys.checked || undefined,\n      halfCheckedKeys: keys.halfChecked || undefined\n    };\n  } else {\n    warning(false, '`checkedKeys` is not an array or an object');\n    return null;\n  }\n  return keyProps;\n}\n/**\n * If user use `autoExpandParent` we should get the list of parent node\n * @param keyList\n * @param keyEntities\n */\nexport function conductExpandParent(keyList, keyEntities) {\n  var expandedKeys = new Set();\n  function conductUp(key) {\n    if (expandedKeys.has(key)) return;\n    var entity = getEntity(keyEntities, key);\n    if (!entity) return;\n    expandedKeys.add(key);\n    var parent = entity.parent,\n      node = entity.node;\n    if (node.disabled) return;\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n  (keyList || []).forEach(function (key) {\n    conductUp(key);\n  });\n  return _toConsumableArray(expandedKeys);\n}","import warning from \"rc-util/es/warning\";\nimport getEntity from './keyUtil';\nfunction removeFromCheckedKeys(halfCheckedKeys, checkedKeys) {\n  var filteredKeys = new Set();\n  halfCheckedKeys.forEach(function (key) {\n    if (!checkedKeys.has(key)) {\n      filteredKeys.add(key);\n    }\n  });\n  return filteredKeys;\n}\nexport function isCheckDisabled(node) {\n  var _ref = node || {},\n    disabled = _ref.disabled,\n    disableCheckbox = _ref.disableCheckbox,\n    checkable = _ref.checkable;\n  return !!(disabled || disableCheckbox) || checkable === false;\n}\n// Fill miss keys\nfunction fillConductCheck(keys, levelEntities, maxLevel, syntheticGetCheckDisabled) {\n  var checkedKeys = new Set(keys);\n  var halfCheckedKeys = new Set();\n  // Add checked keys top to bottom\n  for (var level = 0; level <= maxLevel; level += 1) {\n    var entities = levelEntities.get(level) || new Set();\n    entities.forEach(function (entity) {\n      var key = entity.key,\n        node = entity.node,\n        _entity$children = entity.children,\n        children = _entity$children === void 0 ? [] : _entity$children;\n      if (checkedKeys.has(key) && !syntheticGetCheckDisabled(node)) {\n        children.filter(function (childEntity) {\n          return !syntheticGetCheckDisabled(childEntity.node);\n        }).forEach(function (childEntity) {\n          checkedKeys.add(childEntity.key);\n        });\n      }\n    });\n  }\n  // Add checked keys from bottom to top\n  var visitedKeys = new Set();\n  for (var _level = maxLevel; _level >= 0; _level -= 1) {\n    var _entities = levelEntities.get(_level) || new Set();\n    _entities.forEach(function (entity) {\n      var parent = entity.parent,\n        node = entity.node;\n      // Skip if no need to check\n      if (syntheticGetCheckDisabled(node) || !entity.parent || visitedKeys.has(entity.parent.key)) {\n        return;\n      }\n      // Skip if parent is disabled\n      if (syntheticGetCheckDisabled(entity.parent.node)) {\n        visitedKeys.add(parent.key);\n        return;\n      }\n      var allChecked = true;\n      var partialChecked = false;\n      (parent.children || []).filter(function (childEntity) {\n        return !syntheticGetCheckDisabled(childEntity.node);\n      }).forEach(function (_ref2) {\n        var key = _ref2.key;\n        var checked = checkedKeys.has(key);\n        if (allChecked && !checked) {\n          allChecked = false;\n        }\n        if (!partialChecked && (checked || halfCheckedKeys.has(key))) {\n          partialChecked = true;\n        }\n      });\n      if (allChecked) {\n        checkedKeys.add(parent.key);\n      }\n      if (partialChecked) {\n        halfCheckedKeys.add(parent.key);\n      }\n      visitedKeys.add(parent.key);\n    });\n  }\n  return {\n    checkedKeys: Array.from(checkedKeys),\n    halfCheckedKeys: Array.from(removeFromCheckedKeys(halfCheckedKeys, checkedKeys))\n  };\n}\n// Remove useless key\nfunction cleanConductCheck(keys, halfKeys, levelEntities, maxLevel, syntheticGetCheckDisabled) {\n  var checkedKeys = new Set(keys);\n  var halfCheckedKeys = new Set(halfKeys);\n  // Remove checked keys from top to bottom\n  for (var level = 0; level <= maxLevel; level += 1) {\n    var entities = levelEntities.get(level) || new Set();\n    entities.forEach(function (entity) {\n      var key = entity.key,\n        node = entity.node,\n        _entity$children2 = entity.children,\n        children = _entity$children2 === void 0 ? [] : _entity$children2;\n      if (!checkedKeys.has(key) && !halfCheckedKeys.has(key) && !syntheticGetCheckDisabled(node)) {\n        children.filter(function (childEntity) {\n          return !syntheticGetCheckDisabled(childEntity.node);\n        }).forEach(function (childEntity) {\n          checkedKeys.delete(childEntity.key);\n        });\n      }\n    });\n  }\n  // Remove checked keys form bottom to top\n  halfCheckedKeys = new Set();\n  var visitedKeys = new Set();\n  for (var _level2 = maxLevel; _level2 >= 0; _level2 -= 1) {\n    var _entities2 = levelEntities.get(_level2) || new Set();\n    _entities2.forEach(function (entity) {\n      var parent = entity.parent,\n        node = entity.node;\n      // Skip if no need to check\n      if (syntheticGetCheckDisabled(node) || !entity.parent || visitedKeys.has(entity.parent.key)) {\n        return;\n      }\n      // Skip if parent is disabled\n      if (syntheticGetCheckDisabled(entity.parent.node)) {\n        visitedKeys.add(parent.key);\n        return;\n      }\n      var allChecked = true;\n      var partialChecked = false;\n      (parent.children || []).filter(function (childEntity) {\n        return !syntheticGetCheckDisabled(childEntity.node);\n      }).forEach(function (_ref3) {\n        var key = _ref3.key;\n        var checked = checkedKeys.has(key);\n        if (allChecked && !checked) {\n          allChecked = false;\n        }\n        if (!partialChecked && (checked || halfCheckedKeys.has(key))) {\n          partialChecked = true;\n        }\n      });\n      if (!allChecked) {\n        checkedKeys.delete(parent.key);\n      }\n      if (partialChecked) {\n        halfCheckedKeys.add(parent.key);\n      }\n      visitedKeys.add(parent.key);\n    });\n  }\n  return {\n    checkedKeys: Array.from(checkedKeys),\n    halfCheckedKeys: Array.from(removeFromCheckedKeys(halfCheckedKeys, checkedKeys))\n  };\n}\n/**\n * Conduct with keys.\n * @param keyList current key list\n * @param keyEntities key - dataEntity map\n * @param mode `fill` to fill missing key, `clean` to remove useless key\n */\nexport function conductCheck(keyList, checked, keyEntities, getCheckDisabled) {\n  var warningMissKeys = [];\n  var syntheticGetCheckDisabled;\n  if (getCheckDisabled) {\n    syntheticGetCheckDisabled = getCheckDisabled;\n  } else {\n    syntheticGetCheckDisabled = isCheckDisabled;\n  }\n  // We only handle exist keys\n  var keys = new Set(keyList.filter(function (key) {\n    var hasEntity = !!getEntity(keyEntities, key);\n    if (!hasEntity) {\n      warningMissKeys.push(key);\n    }\n    return hasEntity;\n  }));\n  var levelEntities = new Map();\n  var maxLevel = 0;\n  // Convert entities by level for calculation\n  Object.keys(keyEntities).forEach(function (key) {\n    var entity = keyEntities[key];\n    var level = entity.level;\n    var levelSet = levelEntities.get(level);\n    if (!levelSet) {\n      levelSet = new Set();\n      levelEntities.set(level, levelSet);\n    }\n    levelSet.add(entity);\n    maxLevel = Math.max(maxLevel, level);\n  });\n  warning(!warningMissKeys.length, \"Tree missing follow keys: \".concat(warningMissKeys.slice(0, 100).map(function (key) {\n    return \"'\".concat(key, \"'\");\n  }).join(', ')));\n  var result;\n  if (checked === true) {\n    result = fillConductCheck(keys, levelEntities, maxLevel, syntheticGetCheckDisabled);\n  } else {\n    result = cleanConductCheck(keys, checked.halfCheckedKeys, levelEntities, maxLevel, syntheticGetCheckDisabled);\n  }\n  return result;\n}","export default function getEntity(keyEntities, key) {\n  return keyEntities[key];\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"children\"];\nimport toArray from \"rc-util/es/Children/toArray\";\nimport omit from \"rc-util/es/omit\";\nimport warning from \"rc-util/es/warning\";\nimport getEntity from './keyUtil';\nexport function getPosition(level, index) {\n  return \"\".concat(level, \"-\").concat(index);\n}\nexport function isTreeNode(node) {\n  return node && node.type && node.type.isTreeNode;\n}\nexport function getKey(key, pos) {\n  if (key !== null && key !== undefined) {\n    return key;\n  }\n  return pos;\n}\nexport function fillFieldNames(fieldNames) {\n  var _ref = fieldNames || {},\n    title = _ref.title,\n    _title = _ref._title,\n    key = _ref.key,\n    children = _ref.children;\n  var mergedTitle = title || 'title';\n  return {\n    title: mergedTitle,\n    _title: _title || [mergedTitle],\n    key: key || 'key',\n    children: children || 'children'\n  };\n}\n/**\n * Warning if TreeNode do not provides key\n */\nexport function warningWithoutKey(treeData, fieldNames) {\n  var keys = new Map();\n  function dig(list) {\n    var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    (list || []).forEach(function (treeNode) {\n      var key = treeNode[fieldNames.key];\n      var children = treeNode[fieldNames.children];\n      warning(key !== null && key !== undefined, \"Tree node must have a certain key: [\".concat(path).concat(key, \"]\"));\n      var recordKey = String(key);\n      warning(!keys.has(recordKey) || key === null || key === undefined, \"Same 'key' exist in the Tree: \".concat(recordKey));\n      keys.set(recordKey, true);\n      dig(children, \"\".concat(path).concat(recordKey, \" > \"));\n    });\n  }\n  dig(treeData);\n}\n/**\n * Convert `children` of Tree into `treeData` structure.\n */\nexport function convertTreeToData(rootNodes) {\n  function dig(node) {\n    var treeNodes = toArray(node);\n    return treeNodes.map(function (treeNode) {\n      // Filter invalidate node\n      if (!isTreeNode(treeNode)) {\n        warning(!treeNode, 'Tree/TreeNode can only accept TreeNode as children.');\n        return null;\n      }\n      var key = treeNode.key;\n      var _treeNode$props = treeNode.props,\n        children = _treeNode$props.children,\n        rest = _objectWithoutProperties(_treeNode$props, _excluded);\n      var dataNode = _objectSpread({\n        key: key\n      }, rest);\n      var parsedChildren = dig(children);\n      if (parsedChildren.length) {\n        dataNode.children = parsedChildren;\n      }\n      return dataNode;\n    }).filter(function (dataNode) {\n      return dataNode;\n    });\n  }\n  return dig(rootNodes);\n}\n/**\n * Flat nest tree data into flatten list. This is used for virtual list render.\n * @param treeNodeList Origin data node list\n * @param expandedKeys\n * need expanded keys, provides `true` means all expanded (used in `rc-tree-select`).\n */\nexport function flattenTreeData(treeNodeList, expandedKeys, fieldNames) {\n  var _fillFieldNames = fillFieldNames(fieldNames),\n    fieldTitles = _fillFieldNames._title,\n    fieldKey = _fillFieldNames.key,\n    fieldChildren = _fillFieldNames.children;\n  var expandedKeySet = new Set(expandedKeys === true ? [] : expandedKeys);\n  var flattenList = [];\n  function dig(list) {\n    var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return list.map(function (treeNode, index) {\n      var pos = getPosition(parent ? parent.pos : '0', index);\n      var mergedKey = getKey(treeNode[fieldKey], pos);\n      // Pick matched title in field title list\n      var mergedTitle;\n      for (var i = 0; i < fieldTitles.length; i += 1) {\n        var fieldTitle = fieldTitles[i];\n        if (treeNode[fieldTitle] !== undefined) {\n          mergedTitle = treeNode[fieldTitle];\n          break;\n        }\n      }\n      // Add FlattenDataNode into list\n      var flattenNode = _objectSpread(_objectSpread({}, omit(treeNode, [].concat(_toConsumableArray(fieldTitles), [fieldKey, fieldChildren]))), {}, {\n        title: mergedTitle,\n        key: mergedKey,\n        parent: parent,\n        pos: pos,\n        children: null,\n        data: treeNode,\n        isStart: [].concat(_toConsumableArray(parent ? parent.isStart : []), [index === 0]),\n        isEnd: [].concat(_toConsumableArray(parent ? parent.isEnd : []), [index === list.length - 1])\n      });\n      flattenList.push(flattenNode);\n      // Loop treeNode children\n      if (expandedKeys === true || expandedKeySet.has(mergedKey)) {\n        flattenNode.children = dig(treeNode[fieldChildren] || [], flattenNode);\n      } else {\n        flattenNode.children = [];\n      }\n      return flattenNode;\n    });\n  }\n  dig(treeNodeList);\n  return flattenList;\n}\n/**\n * Traverse all the data by `treeData`.\n * Please not use it out of the `rc-tree` since we may refactor this code.\n */\nexport function traverseDataNodes(dataNodes, callback,\n// To avoid too many params, let use config instead of origin param\nconfig) {\n  var mergedConfig = {};\n  if (_typeof(config) === 'object') {\n    mergedConfig = config;\n  } else {\n    mergedConfig = {\n      externalGetKey: config\n    };\n  }\n  mergedConfig = mergedConfig || {};\n  // Init config\n  var _mergedConfig = mergedConfig,\n    childrenPropName = _mergedConfig.childrenPropName,\n    externalGetKey = _mergedConfig.externalGetKey,\n    fieldNames = _mergedConfig.fieldNames;\n  var _fillFieldNames2 = fillFieldNames(fieldNames),\n    fieldKey = _fillFieldNames2.key,\n    fieldChildren = _fillFieldNames2.children;\n  var mergeChildrenPropName = childrenPropName || fieldChildren;\n  // Get keys\n  var syntheticGetKey;\n  if (externalGetKey) {\n    if (typeof externalGetKey === 'string') {\n      syntheticGetKey = function syntheticGetKey(node) {\n        return node[externalGetKey];\n      };\n    } else if (typeof externalGetKey === 'function') {\n      syntheticGetKey = function syntheticGetKey(node) {\n        return externalGetKey(node);\n      };\n    }\n  } else {\n    syntheticGetKey = function syntheticGetKey(node, pos) {\n      return getKey(node[fieldKey], pos);\n    };\n  }\n  // Process\n  function processNode(node, index, parent, pathNodes) {\n    var children = node ? node[mergeChildrenPropName] : dataNodes;\n    var pos = node ? getPosition(parent.pos, index) : '0';\n    var connectNodes = node ? [].concat(_toConsumableArray(pathNodes), [node]) : [];\n    // Process node if is not root\n    if (node) {\n      var key = syntheticGetKey(node, pos);\n      var data = {\n        node: node,\n        index: index,\n        pos: pos,\n        key: key,\n        parentPos: parent.node ? parent.pos : null,\n        level: parent.level + 1,\n        nodes: connectNodes\n      };\n      callback(data);\n    }\n    // Process children node\n    if (children) {\n      children.forEach(function (subNode, subIndex) {\n        processNode(subNode, subIndex, {\n          node: node,\n          pos: pos,\n          level: parent ? parent.level + 1 : -1\n        }, connectNodes);\n      });\n    }\n  }\n  processNode(null);\n}\n/**\n * Convert `treeData` into entity records.\n */\nexport function convertDataToEntities(dataNodes) {\n  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    initWrapper = _ref2.initWrapper,\n    processEntity = _ref2.processEntity,\n    onProcessFinished = _ref2.onProcessFinished,\n    externalGetKey = _ref2.externalGetKey,\n    childrenPropName = _ref2.childrenPropName,\n    fieldNames = _ref2.fieldNames;\n  var /** @deprecated Use `config.externalGetKey` instead */\n  legacyExternalGetKey = arguments.length > 2 ? arguments[2] : undefined;\n  // Init config\n  var mergedExternalGetKey = externalGetKey || legacyExternalGetKey;\n  var posEntities = {};\n  var keyEntities = {};\n  var wrapper = {\n    posEntities: posEntities,\n    keyEntities: keyEntities\n  };\n  if (initWrapper) {\n    wrapper = initWrapper(wrapper) || wrapper;\n  }\n  traverseDataNodes(dataNodes, function (item) {\n    var node = item.node,\n      index = item.index,\n      pos = item.pos,\n      key = item.key,\n      parentPos = item.parentPos,\n      level = item.level,\n      nodes = item.nodes;\n    var entity = {\n      node: node,\n      nodes: nodes,\n      index: index,\n      key: key,\n      pos: pos,\n      level: level\n    };\n    var mergedKey = getKey(key, pos);\n    posEntities[pos] = entity;\n    keyEntities[mergedKey] = entity;\n    // Fill children\n    entity.parent = posEntities[parentPos];\n    if (entity.parent) {\n      entity.parent.children = entity.parent.children || [];\n      entity.parent.children.push(entity);\n    }\n    if (processEntity) {\n      processEntity(entity, wrapper);\n    }\n  }, {\n    externalGetKey: mergedExternalGetKey,\n    childrenPropName: childrenPropName,\n    fieldNames: fieldNames\n  });\n  if (onProcessFinished) {\n    onProcessFinished(wrapper);\n  }\n  return wrapper;\n}\n/**\n * Get TreeNode props with Tree props.\n */\nexport function getTreeNodeProps(key, _ref3) {\n  var expandedKeys = _ref3.expandedKeys,\n    selectedKeys = _ref3.selectedKeys,\n    loadedKeys = _ref3.loadedKeys,\n    loadingKeys = _ref3.loadingKeys,\n    checkedKeys = _ref3.checkedKeys,\n    halfCheckedKeys = _ref3.halfCheckedKeys,\n    dragOverNodeKey = _ref3.dragOverNodeKey,\n    dropPosition = _ref3.dropPosition,\n    keyEntities = _ref3.keyEntities;\n  var entity = getEntity(keyEntities, key);\n  var treeNodeProps = {\n    eventKey: key,\n    expanded: expandedKeys.indexOf(key) !== -1,\n    selected: selectedKeys.indexOf(key) !== -1,\n    loaded: loadedKeys.indexOf(key) !== -1,\n    loading: loadingKeys.indexOf(key) !== -1,\n    checked: checkedKeys.indexOf(key) !== -1,\n    halfChecked: halfCheckedKeys.indexOf(key) !== -1,\n    pos: String(entity ? entity.pos : ''),\n    // [Legacy] Drag props\n    // Since the interaction of drag is changed, the semantic of the props are\n    // not accuracy, I think it should be finally removed\n    dragOver: dragOverNodeKey === key && dropPosition === 0,\n    dragOverGapTop: dragOverNodeKey === key && dropPosition === -1,\n    dragOverGapBottom: dragOverNodeKey === key && dropPosition === 1\n  };\n  return treeNodeProps;\n}\nexport function convertNodePropsToEventData(props) {\n  var data = props.data,\n    expanded = props.expanded,\n    selected = props.selected,\n    checked = props.checked,\n    loaded = props.loaded,\n    loading = props.loading,\n    halfChecked = props.halfChecked,\n    dragOver = props.dragOver,\n    dragOverGapTop = props.dragOverGapTop,\n    dragOverGapBottom = props.dragOverGapBottom,\n    pos = props.pos,\n    active = props.active,\n    eventKey = props.eventKey;\n  var eventData = _objectSpread(_objectSpread({}, data), {}, {\n    expanded: expanded,\n    selected: selected,\n    checked: checked,\n    loaded: loaded,\n    loading: loading,\n    halfChecked: halfChecked,\n    dragOver: dragOver,\n    dragOverGapTop: dragOverGapTop,\n    dragOverGapBottom: dragOverGapBottom,\n    pos: pos,\n    active: active,\n    key: eventKey\n  });\n  if (!('props' in eventData)) {\n    Object.defineProperty(eventData, 'props', {\n      get: function get() {\n        warning(false, 'Second param return from event is node data instead of TreeNode instance. Please read value directly instead of reading from `props`.');\n        return props;\n      }\n    });\n  }\n  return eventData;\n}"],"names":["TreeContext","Indent","_ref","prefixCls","level","isStart","isEnd","baseClassName","concat","list","i","_classNames","push","key","className","_excluded","ICON_OPEN","ICON_CLOSE","InternalTreeNode","_React$Component","_super","_this","this","_len","arguments","length","args","Array","_key","call","apply","state","dragNodeHighlight","selectHandle","cacheIndent","onSelectorClick","e","onNodeClick","props","context","isSelectable","onSelect","onCheck","onSelectorDoubleClick","onNodeDoubleClick","isDisabled","onNodeSelect","_this$props","disableCheckbox","checked","onNodeCheck","isCheckable","targetChecked","onMouseEnter","onNodeMouseEnter","onMouseLeave","onNodeMouseLeave","onContextMenu","onNodeContextMenu","onDragStart","onNodeDragStart","stopPropagation","setState","dataTransfer","setData","error","onDragEnter","onNodeDragEnter","preventDefault","onDragOver","onNodeDragOver","onDragLeave","onNodeDragLeave","onDragEnd","onNodeDragEnd","onDrop","onNodeDrop","onExpand","_this$props2","loading","onNodeExpand","setSelectHandle","node","getNodeState","expanded","isLeaf","hasChildren","eventKey","keyEntities","children","_this$props3","loaded","loadData","disabled","checkable","treeCheckable","syncLoadData","_this$props$context","onNodeLoad","isDraggable","_this$props4","data","draggable","nodeDraggable","renderDragHandler","_this$props$context2","icon","renderSwitcherIconDom","switcherIconFromProps","switcherIcon","switcherIconFromCtx","renderSwitcher","_switcherIconDom","switcherCls","switcherIconDom","onClick","renderCheckbox","_this$props5","halfChecked","$custom","renderIcon","renderSelector","$icon","titleNode","_this$props6","_this$props6$title","title","selected","_this$props$context3","showIcon","treeIcon","titleRender","wrapClass","currentIcon","$title","ref","onDoubleClick","renderDropIndicator","_this$props7","_this$props$context4","dropLevelOffset","dropPosition","indent","dropIndicatorRender","dragOverNodeKey","direction","showIndicator","mergedIndent","value","selectable","treeSelectable","_this$props8","style","dragOver","dragOverGapTop","dragOverGapBottom","domRef","active","onMouseMove","otherProps","_this$props$context5","filterTreeNode","dropContainerKey","dropTargetKey","draggingNodeKey","dataOrAriaAttributeProps","pickAttrs","aria","isEndNode","mergedDraggable","draggableWithoutDisabled","dragging","ariaSelected","undefined","ContextTreeNode","Consumer","displayName","isTreeNode","arrDel","clone","slice","index","indexOf","splice","arrAdd","removeFromCheckedKeys","halfCheckedKeys","checkedKeys","filteredKeys","Set","forEach","has","add","isCheckDisabled","conductCheck","keyList","getCheckDisabled","syntheticGetCheckDisabled","warningMissKeys","result","keys","filter","hasEntity","levelEntities","Map","maxLevel","Object","entity","levelSet","get","set","Math","max","map","join","_entity$children","childEntity","visitedKeys","_level","parent","allChecked","partialChecked","_ref2","from","fillConductCheck","halfKeys","_entity$children2","delete","_level2","_ref3","cleanConductCheck","getEntity","getPosition","getKey","pos","fillFieldNames","fieldNames","mergedTitle","_title","convertDataToEntities","dataNodes","initWrapper","processEntity","onProcessFinished","externalGetKey","childrenPropName","mergedExternalGetKey","posEntities","wrapper","callback","config","syntheticGetKey","_mergedConfig","_fillFieldNames2","fieldKey","fieldChildren","mergeChildrenPropName","processNode","pathNodes","connectNodes","parentPos","nodes","subNode","subIndex","traverseDataNodes","item","mergedKey","convertNodePropsToEventData","eventData","defineProperty"],"sourceRoot":""}