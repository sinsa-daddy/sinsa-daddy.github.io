{"version":3,"file":"static/js/async/solutions/(termId)/page.2acf10e8.js","sources":["./src/components/ExcludeAurorianFormList/index.tsx","./src/components/SolutionCard/index.tsx","./src/routes/solutions/[termId]/page.tsx","./src/views/SolutionView/QueryForm/index.tsx","./src/views/SolutionView/SolutionListView/index.tsx","./src/views/SolutionView/index.tsx","./src/components/ExcludeAurorianFormList/utils.ts","./src/services/solution-algorithm.ts","./src/views/SolutionView/QueryForm/constants.ts","./src/views/SolutionView/QueryForm/hooks/use-initial-values.ts","./src/views/SolutionView/QueryForm/utils.ts","./src/views/SolutionView/context.ts","./src/views/SolutionView/hooks/use-request-solution.ts"],"sourcesContent":["import {\n  ProForm,\n  ProFormDependency,\n  ProFormList,\n  ProFormRate,\n  ProFormSwitch,\n} from '@ant-design/pro-components';\nimport { useModel } from '@modern-js/runtime/model';\nimport { Button, Select, Tooltip } from 'antd';\nimport { Delete } from '@icon-park/react';\nimport { AdaptiveAurorianCard } from '../AdaptiveAurorianCard';\nimport { ensureExcludeKey } from './utils';\nimport { AuroriansModel, filterAuroriansOption } from '@/models/aurorians';\n\ninterface ExcludeFormListProps {\n  name: string;\n}\n\nexport const ExcludeAurorianFormList: React.FC<ExcludeFormListProps> = ({\n  name,\n  ...props\n}) => {\n  const [{ auroriansOptions, auroriansMap }] = useModel(AuroriansModel);\n\n  return (\n    <ProFormList\n      {...props}\n      creatorButtonProps={{\n        creatorButtonText: '添加排除的光灵',\n      }}\n      name={name}\n      alwaysShowItemLabel\n      actionRender={(field, action) => [\n        <Tooltip key=\"delete\" title=\"删除此光灵\">\n          <Button\n            style={{ marginLeft: '.5rem' }}\n            icon={<Delete />}\n            onClick={e => {\n              e.stopPropagation();\n              action.remove(field.name);\n            }}\n          />\n        </Tooltip>,\n      ]}\n    >\n      {() => {\n        return (\n          <ProForm.Group>\n            <ProForm.Item\n              label=\"排除的光灵\"\n              name={ensureExcludeKey('aurorianId')}\n              rules={[{ required: true }]}\n            >\n              <Select\n                options={auroriansOptions}\n                showSearch\n                allowClear={false}\n                placeholder={'支持按拼音搜索光灵, 比如 ad 可以搜到 安顿'}\n                filterOption={filterAuroriansOption}\n              />\n            </ProForm.Item>\n            <ProFormDependency name={[ensureExcludeKey('aurorianId')]}>\n              {({ aurorianId }) => {\n                if (aurorianId) {\n                  return (\n                    <AdaptiveAurorianCard\n                      readOnly\n                      mini\n                      aurorianId={aurorianId}\n                    />\n                  );\n                }\n                return null;\n              }}\n            </ProFormDependency>\n            <ProFormDependency name={[ensureExcludeKey('aurorianId')]}>\n              {({ aurorianId }) => {\n                if (aurorianId) {\n                  return (\n                    <ProFormSwitch\n                      label=\"仅排除突破\"\n                      name={ensureExcludeKey('excludeBreakthroughOnly')}\n                    />\n                  );\n                }\n                return null;\n              }}\n            </ProFormDependency>\n\n            <ProFormDependency\n              name={[\n                ensureExcludeKey('aurorianId'),\n                ensureExcludeKey('excludeBreakthroughOnly'),\n              ]}\n            >\n              {({ aurorianId, excludeBreakthroughOnly }) => {\n                const targetAurorian = auroriansMap[aurorianId];\n                if (excludeBreakthroughOnly && targetAurorian) {\n                  return (\n                    <ProFormRate\n                      name={ensureExcludeKey('excludeBreakthrough')}\n                      label=\"排除突破数\"\n                      fieldProps={{\n                        count: targetAurorian.rarity,\n                        allowHalf: false,\n                      }}\n                      tooltip=\"大于等于此突破数的光灵会被排除，但不会排除零破的此光灵\"\n                      rules={[{ required: true }]}\n                    />\n                  );\n                }\n                return null;\n              }}\n            </ProFormDependency>\n          </ProForm.Group>\n        );\n      }}\n    </ProFormList>\n  );\n};\n","import type { Solution } from '@sinsa/solution-calculator/dist/types/types';\nimport { Card, Typography } from 'antd';\nimport React, { useMemo } from 'react';\nimport { isEqual } from 'lodash-es';\nimport numeral from 'numeral';\nimport type { CopilotNextType, TermNextType } from '@sinsa/schema';\nimport type { IgnoreMessage } from '../types';\nimport { CopilotBlock } from './CopilotBlock';\nimport styles from './styles.module.less';\n\nconst copilotRowKey = (c: CopilotNextType) => c.copilot_id;\n\nexport interface SolutionCardProps {\n  solution: Solution;\n  currentTerm: TermNextType;\n  index: number;\n  onIgnore?: (msg: IgnoreMessage) => void;\n}\n\nexport const SolutionCard = React.memo<SolutionCardProps>(\n  ({ solution, currentTerm, index, onIgnore }) => {\n    const sorted = useMemo(() => {\n      return [...solution.copilots].sort((a, b) => b.score - a.score);\n    }, [solution]);\n    return (\n      <Card className={styles.SolutionCard} bodyStyle={{ paddingBottom: 16 }}>\n        <div className={styles.TotalScore}>\n          <Typography.Text strong>{`#${index + 1} 匹配方案 ${numeral(\n            solution.totalScore,\n          ).format('0,0')}`}</Typography.Text>\n        </div>\n\n        {sorted.map(copilot => {\n          return (\n            <CopilotBlock\n              className={styles.ControlledCopilotBlock}\n              key={copilotRowKey(copilot)}\n              copilot={copilot}\n              currentTerm={currentTerm}\n              onIgnore={onIgnore}\n            />\n          );\n        })}\n      </Card>\n    );\n  },\n  (prev, next) =>\n    isEqual(\n      prev.solution.copilots.map(c => c.copilot_id),\n      next.solution.copilots.map(c => c.copilot_id),\n    ) &&\n    prev.currentTerm.term_id === next.currentTerm.term_id &&\n    prev.index === next.index,\n);\n","/* eslint-disable no-nested-ternary */\nimport { PageContainer } from '@ant-design/pro-components';\nimport { useMemo } from 'react';\nimport { useRequest } from 'ahooks';\nimport { Space, Typography } from 'antd';\nimport { TermNotFound } from '@/components/TermNotFound';\nimport { TermChanger, useTargetTermFromParams } from '@/components/TermChanger';\nimport { getCopilots } from '@/services/http';\nimport { RoutePath } from '@/views/GlobalLayout/constants';\nimport { RelativeTimeText } from '@/components/RelativeTimeText';\nimport { SolutionView } from '@/views/SolutionView';\n\nconst SolutionsPage: React.FC = () => {\n  const { targetTerm: currentTerm } = useTargetTermFromParams();\n  const { data, error, loading } = useRequest(\n    () =>\n      currentTerm?.term_id\n        ? getCopilots(currentTerm.term_id)\n        : (Promise.resolve({}) as ReturnType<typeof getCopilots>),\n    {\n      ready: Boolean(currentTerm?.term_id),\n      refreshDeps: [currentTerm?.term_id],\n    },\n  );\n\n  const copilots = useMemo(() => Object.values(data ?? []), [data]);\n\n  return (\n    <PageContainer\n      content={\n        <Space wrap>\n          <TermChanger pathFn={RoutePath.Solutions} />\n          {copilots[0] ? (\n            <Typography.Text>\n              上次作业更新 <RelativeTimeText time={copilots[0].upload_time} />\n            </Typography.Text>\n          ) : null}\n          <Typography.Text type=\"secondary\">\n            Tips: 点击匹配作业中光灵头像可唤出菜单一键排除光灵或仅排除突破 ❤\n          </Typography.Text>\n        </Space>\n      }\n      title=\"作业匹配\"\n      loading={loading}\n    >\n      {error ? (\n        <TermNotFound />\n      ) : currentTerm ? (\n        <SolutionView copilots={copilots} currentTerm={currentTerm} />\n      ) : (\n        <TermNotFound />\n      )}\n    </PageContainer>\n  );\n};\n\nexport default SolutionsPage;\n","import type { SubmitterProps } from '@ant-design/pro-components';\nimport {\n  ProFormSelect,\n  ProFormDependency,\n  ProFormSwitch,\n  ProFormRadio,\n  ProForm,\n} from '@ant-design/pro-components';\nimport { useCallback, useMemo } from 'react';\nimport { Space, Typography } from 'antd';\nimport type { CopilotNextType, TermNextType } from '@sinsa/schema';\nimport { Search } from '@icon-park/react';\nimport type { QueryParamsType } from '../schemas/query-params';\nimport { useSolutionResultContext } from '../context';\nimport { useInitialValues } from './hooks/use-initial-values';\nimport { EXTENDED_TEAM_COUNT } from './constants';\nimport { ensureQueryKey } from './utils';\nimport { ExcludeAurorianFormList } from '@/components/ExcludeAurorianFormList';\n\ninterface QueryFormProps {\n  termId: TermNextType['term_id'];\n  copilots: CopilotNextType[];\n}\n\nexport const QueryForm: React.FC<QueryFormProps> = ({ termId, copilots }) => {\n  const { initialValues, setLocalInitialValues } = useInitialValues({ termId });\n\n  const { loadingSolutionResult, solutionResult, form, requestSolution } =\n    useSolutionResultContext();\n\n  const submitter = useMemo<SubmitterProps>(() => {\n    return {\n      searchConfig: { submitText: '寻找方案' },\n      submitButtonProps: {\n        icon: <Search theme=\"outline\" />,\n      },\n      render(_, dom) {\n        const display = [...dom];\n        if (typeof solutionResult?.allSolutions.solutions.length === 'number') {\n          display.push(\n            <Typography.Text key=\"count\">\n              已为您找到{' '}\n              <Typography.Text strong>\n                {solutionResult.allSolutions.solutions.length}\n              </Typography.Text>{' '}\n              个作业匹配方案\n            </Typography.Text>,\n          );\n        }\n        return <Space wrap>{display}</Space>;\n      },\n    };\n  }, [solutionResult?.allSolutions.solutions.length]);\n\n  const handleValuesChange = useCallback(\n    (_: unknown, allValues: QueryParamsType) => {\n      if (allValues.enableSaveLocalStorage) {\n        setLocalInitialValues(allValues);\n      } else {\n        setLocalInitialValues(undefined);\n      }\n      setLocalInitialValues(\n        allValues.enableSaveLocalStorage ? allValues : undefined,\n      );\n    },\n    [],\n  );\n\n  const ignoreOptions = useMemo(() => {\n    return copilots.map(c => {\n      return {\n        label: `${c.author_name} ${Math.floor(c.score / 10000)}W`,\n        value: c.copilot_id,\n      };\n    });\n  }, [copilots]);\n\n  const handleOnFinish = useCallback(\n    async (params: QueryParamsType) => {\n      await requestSolution(copilots, params);\n    },\n    [copilots],\n  );\n\n  return (\n    <ProForm<QueryParamsType>\n      onFinish={handleOnFinish}\n      layout=\"vertical\"\n      initialValues={initialValues}\n      submitter={submitter}\n      loading={loadingSolutionResult}\n      onValuesChange={handleValuesChange}\n      form={form}\n    >\n      <ProForm.Group>\n        <ProFormRadio.Group\n          name={ensureQueryKey('k')}\n          label=\"队伍数量\"\n          rules={[{ required: true }]}\n          options={EXTENDED_TEAM_COUNT}\n          allowClear={false}\n          radioType=\"button\"\n        />\n        <ProFormSwitch\n          name={ensureQueryKey('disableAlternative')}\n          label=\"不考虑可替自由位\"\n          tooltip=\"开启后，计算的队伍方案中绝对不会出现重复光灵，满足图鉴大佬的强迫症\"\n        />\n        <ProForm.Group>\n          <ProFormSwitch\n            name={ensureQueryKey('enableExclude')}\n            label=\"额外排除光灵\"\n            tooltip=\"排除光灵会忽略可替自由位\"\n          />\n          <ProFormDependency name={[ensureQueryKey('enableExclude')]}>\n            {({ enableExclude }: Pick<QueryParamsType, 'enableExclude'>) => {\n              return enableExclude ? (\n                <ExcludeAurorianFormList name={ensureQueryKey('exclude')} />\n              ) : null;\n            }}\n          </ProFormDependency>\n        </ProForm.Group>\n        <ProFormSwitch\n          name={ensureQueryKey('enableSaveLocalStorage')}\n          label=\"记住我的设置\"\n          tooltip=\"开启后，这一期荒典筛选的设置将会储存在您的浏览器本地，避免繁琐重复筛选\"\n        />\n      </ProForm.Group>\n      <ProFormDependency name={[ensureQueryKey('copilotsIgnore')]}>\n        {({ copilotsIgnore }: Pick<QueryParamsType, 'copilotsIgnore'>) => {\n          return copilotsIgnore?.length ? (\n            <ProFormSelect\n              mode=\"multiple\"\n              name={ensureQueryKey('copilotsIgnore')}\n              label=\"已额外排除的作业\"\n              options={ignoreOptions}\n            />\n          ) : null;\n        }}\n      </ProFormDependency>\n    </ProForm>\n  );\n};\n","import { ConfigProvider, Empty, List, Result, notification } from 'antd';\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport type { Solution } from '@sinsa/solution-calculator/dist/types/types';\nimport { useMemoizedFn } from 'ahooks';\nimport { isEmpty } from 'lodash-es';\nimport type { TermNextType } from '@sinsa/schema';\nimport { useSolutionResultContext } from '../context';\nimport type { ExcludeDataType, QueryParamsType } from '../schemas/query-params';\nimport styles from './styles.module.less';\nimport SINSA_SORRY_URL from '@/assets/sinsa/sorry.png';\nimport { SolutionCard } from '@/components/SolutionCard';\nimport type { IgnoreMessage } from '@/components/types';\n\nconst getRowKey = (sc: Solution) =>\n  sc.copilots.map(c => c.copilot_id).join(',');\n\nexport interface SolutionListViewProps {\n  currentTerm: TermNextType;\n}\n\nexport const SolutionListView: React.FC<SolutionListViewProps> = ({\n  currentTerm,\n}) => {\n  const inViewRef = useRef<HTMLDivElement>(null);\n\n  const { loadingSolutionResult, solutionResult, form } =\n    useSolutionResultContext();\n\n  const [current, setCurrent] = useState(1);\n\n  useEffect(() => {\n    if (solutionResult && current !== 1) {\n      setCurrent(1);\n    }\n  }, [solutionResult]);\n\n  const pagination = useMemo(() => {\n    return {\n      align: 'center' as const,\n      defaultPageSize: 5,\n      current,\n      onChange(page: number) {\n        setCurrent(page);\n        window.scrollTo({\n          top: inViewRef.current!.offsetTop,\n          behavior: 'smooth',\n        });\n      },\n      showSizeChanger: false,\n    };\n  }, [current]);\n\n  const handleIgnore = useMemoizedFn((msg: IgnoreMessage) => {\n    if (msg.type === 'aurorian' && msg.aurorianId) {\n      form.setFieldValue('enableExclude', true);\n      const prevExcludeArray = form.getFieldValue(\n        'exclude',\n      ) as QueryParamsType['exclude'];\n      if (Array.isArray(prevExcludeArray)) {\n        const target = prevExcludeArray.find(\n          t => t.aurorianId === msg.aurorianId,\n        );\n        if (!target) {\n          if (prevExcludeArray.length === 1 && isEmpty(prevExcludeArray[0])) {\n            prevExcludeArray.pop();\n          }\n          if (msg.breakthrough) {\n            form.setFieldValue('exclude', [\n              ...prevExcludeArray,\n              {\n                aurorianId: msg.aurorianId,\n                excludeBreakthroughOnly: true,\n                excludeBreakthrough: msg.breakthrough,\n              } as ExcludeDataType,\n            ]);\n          } else {\n            form.setFieldValue('exclude', [\n              ...prevExcludeArray,\n              { aurorianId: msg.aurorianId } as ExcludeDataType,\n            ]);\n          }\n          form.submit();\n        } else {\n          notification.error({\n            message: `这个光灵已经在排除列表中了 ❤`,\n          });\n        }\n      }\n    } else if (msg.type === 'copilot') {\n      const copilotsIgnoreArray = form.getFieldValue('copilotsIgnore');\n      if (Array.isArray(copilotsIgnoreArray)) {\n        form.setFieldValue('copilotsIgnore', [\n          ...copilotsIgnoreArray,\n          msg.copilotId,\n        ]);\n      } else {\n        form.setFieldValue('copilotsIgnore', [msg.copilotId]);\n      }\n      form.submit();\n    }\n  });\n\n  return (\n    <>\n      <div className={styles.Mount} ref={inViewRef} />\n      <ConfigProvider\n        renderEmpty={name => {\n          if (name === 'List') {\n            return solutionResult?.allSolutions.solutions.length === 0 ? (\n              <Result\n                icon={\n                  <img\n                    width={100}\n                    src={SINSA_SORRY_URL}\n                    alt=\"醒山daddy: 很抱歉\"\n                  />\n                }\n                title=\"没能找到匹配的作业\"\n                subTitle={\n                  <div>\n                    1. 可以适当降低搜索的队伍数量。例如搜索两队 + 自己自动一队\n                    <br />\n                    2. 当前作业数量较少。可等待作业站更新后再次搜索\n                  </div>\n                }\n              />\n            ) : (\n              <Empty\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n                description=\"准备好寻找作业了！\"\n              />\n            );\n          }\n          return <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />;\n        }}\n      >\n        <List<Solution>\n          loading={loadingSolutionResult}\n          dataSource={solutionResult?.allSolutions.solutions}\n          pagination={pagination}\n          rowKey={getRowKey}\n          renderItem={item => (\n            <SolutionCard\n              index={solutionResult?.rankSet.get(item) ?? 0}\n              solution={item}\n              currentTerm={currentTerm}\n              onIgnore={handleIgnore}\n            />\n          )}\n        />\n      </ConfigProvider>\n    </>\n  );\n};\n","import { Alert, Card, Flex, Typography } from 'antd';\nimport type { CopilotNextType, TermNextType } from '@sinsa/schema';\nimport { SolutionResultProvider } from './context';\nimport { QueryForm } from './QueryForm';\nimport { SolutionListView } from './SolutionListView';\n\ninterface SolutionViewProps {\n  copilots: CopilotNextType[];\n  currentTerm: TermNextType;\n}\n\nexport const SolutionView: React.FC<SolutionViewProps> = ({\n  copilots,\n  currentTerm,\n}) => {\n  return (\n    <SolutionResultProvider>\n      <Flex vertical gap=\"middle\">\n        {currentTerm.order === 26 ? (\n          <Alert\n            type=\"error\"\n            showIcon={false}\n            banner\n            message=\"光灵黑潮目前装备技能存在 Bug 使得荒典分数可能存在虚高问题。官方将于 1 月 10 日更新后修复。本期黑潮队伍分数仅供参考。\"\n            action={\n              <Typography.Link\n                href={`https://www.bilibili.com/read/cv29262782/`}\n                target=\"_blank\"\n              >\n                查看官方公告\n              </Typography.Link>\n            }\n          />\n        ) : null}\n        <Card>\n          <QueryForm copilots={copilots} termId={currentTerm.term_id} />\n        </Card>\n        <SolutionListView currentTerm={currentTerm} />\n      </Flex>\n    </SolutionResultProvider>\n  );\n};\n","import type { ExcludeDataType } from '@/views/SolutionView/schemas/query-params';\n\nexport function ensureExcludeKey(key: keyof ExcludeDataType) {\n  return key;\n}\n","import type {\n  CalcOptions,\n  SolutionContext,\n  AllSolutions,\n} from '@sinsa/solution-calculator/dist/types/types';\n\nexport class SolutionAlgorithmService {\n  private static instance: SolutionAlgorithmService | null = null;\n\n  public static getInstance(): SolutionAlgorithmService {\n    if (SolutionAlgorithmService.instance === null) {\n      SolutionAlgorithmService.instance = new SolutionAlgorithmService();\n    }\n    return SolutionAlgorithmService.instance;\n  }\n\n  protected constructor() {\n    // noop\n  }\n\n  calculateAllSolutions(\n    context: SolutionContext,\n    k: number,\n    options: CalcOptions,\n  ): Promise<AllSolutions> {\n    return new Promise((resolve, reject) => {\n      const worker = new Worker(\n        new URL('@sinsa/solution-calculator', import.meta.url),\n      );\n\n      worker.addEventListener('message', event => {\n        const result = event.data;\n        resolve(result);\n        worker.terminate();\n      });\n\n      worker.addEventListener('error', error => {\n        reject(error);\n        worker.terminate();\n      });\n\n      worker.postMessage({ context, k, options });\n    });\n  }\n}\n\nexport const solutionAlgorithm = SolutionAlgorithmService.getInstance();\n","export const LOCAL_STORAGE_SETTING_KEY_PREFIX =\n  'SINSA_DADDY_SOLUTIONS_FILTER_KEY_V1';\n\nexport const EXTENDED_TEAM_COUNT = [\n  { label: '一队', value: 1 },\n  { label: '两队', value: 2 },\n  { label: '三队', value: 3 },\n  { label: '四队', value: 4 },\n];\n","import { useLocalStorageState } from 'ahooks';\nimport { useMemo } from 'react';\nimport type { TermNextType } from '@sinsa/schema';\nimport type { QueryParamsType } from '../../schemas/query-params';\n\ninterface UseInitialValuesArgs {\n  termId: TermNextType['term_id'];\n}\n\nconst LOCAL_STORAGE_SETTING_KEY_PREFIX = 'SINSA_DADDY_SOLUTIONS_FILTER_KEY_V1';\n\nconst DEFAULT_INITIAL_VALUES: QueryParamsType = {\n  k: 3,\n  exclude: [{}] as any[],\n};\n\nexport function useInitialValues({ termId }: UseInitialValuesArgs) {\n  const LOCAL_STORAGE_SETTING_KEY = useMemo(\n    () => `${LOCAL_STORAGE_SETTING_KEY_PREFIX}_${termId}` as const,\n    [termId],\n  );\n\n  const [loaclInitialValues, setLocalInitialValues] =\n    useLocalStorageState<QueryParamsType>(LOCAL_STORAGE_SETTING_KEY, {\n      defaultValue: undefined,\n    });\n\n  return {\n    initialValues: loaclInitialValues ?? DEFAULT_INITIAL_VALUES,\n    setLocalInitialValues,\n  };\n}\n","import type { QueryParamsType } from '../schemas/query-params';\n\nexport function ensureQueryKey(key: keyof QueryParamsType) {\n  return key;\n}\n","import constate from 'constate';\nimport { ProForm } from '@ant-design/pro-components';\nimport { useRequestSolution } from './hooks/use-request-solution';\nimport type { QueryParamsType } from './schemas/query-params';\n\nexport const [SolutionResultProvider, useSolutionResultContext] = constate(\n  () => {\n    const { solutionResult, loadingSolutionResult, requestSolution } =\n      useRequestSolution();\n\n    const [form] = ProForm.useForm<QueryParamsType>();\n\n    return {\n      solutionResult,\n      loadingSolutionResult,\n      requestSolution,\n      form,\n    };\n  },\n);\n","import { useRequest } from 'ahooks';\nimport { useModel } from '@modern-js/runtime/model';\nimport type { Solution } from '@sinsa/solution-calculator/dist/types/types';\nimport type { CopilotNextType } from '@sinsa/schema';\nimport type { QueryParamsType } from '../schemas/query-params';\nimport { withoutExclude } from '../utils/without-exclude';\nimport { AuroriansModel } from '@/models/aurorians';\nimport { solutionAlgorithm } from '@/services/solution-algorithm';\n\nexport function useRequestSolution() {\n  const [{ WHOLE_BOX }] = useModel(AuroriansModel);\n  const {\n    data: solutionResult,\n    loading: loadingSolutionResult,\n    runAsync: requestSolution,\n  } = useRequest(\n    async (\n      copilots: CopilotNextType[],\n      {\n        exclude,\n        k,\n        disableAlternative,\n        copilotsIgnore,\n        enableExclude,\n      }: QueryParamsType,\n    ) => {\n      const availableBox =\n        enableExclude && Array.isArray(exclude)\n          ? withoutExclude(WHOLE_BOX, exclude)\n          : WHOLE_BOX;\n\n      const allSolutions = await solutionAlgorithm.calculateAllSolutions(\n        {\n          copilots,\n          availableBox,\n        },\n        k,\n        { disableAlternative, copilotsIgnore },\n      );\n\n      const rankSet = new WeakMap<Solution, number>();\n      for (let i = 0; i < allSolutions.solutions.length; i++) {\n        const target = allSolutions.solutions[i];\n        rankSet.set(target, i);\n      }\n\n      return {\n        allSolutions,\n        rankSet,\n      };\n    },\n    {\n      manual: true,\n    },\n  );\n\n  return {\n    solutionResult,\n    loadingSolutionResult,\n    requestSolution,\n  };\n}\n"],"names":["ExcludeAurorianFormList","name","props","auroriansOptions","auroriansMap","useModel","AuroriansModel","ProFormList","creatorButtonProps","creatorButtonText","alwaysShowItemLabel","actionRender","field","action","Tooltip","title","Button","style","marginLeft","icon","Delete","onClick","e","stopPropagation","remove","ProForm","label","ensureExcludeKey","rules","required","Select","options","showSearch","allowClear","placeholder","filterOption","filterAuroriansOption","ProFormDependency","aurorianId","AdaptiveAurorianCard","readOnly","mini","ProFormSwitch","excludeBreakthroughOnly","targetAurorian","ProFormRate","fieldProps","count","rarity","allowHalf","tooltip","copilotRowKey","c","copilot_id","SolutionCard","solution","currentTerm","index","onIgnore","sorted","useMemo","copilots","sort","a","b","score","Card","className","bodyStyle","paddingBottom","Typography","strong","totalScore","format","map","copilot","CopilotBlock","prev","next","isEqual","term_id","targetTerm","useTargetTermFromParams","data","error","loading","useRequest","getCopilots","Promise","resolve","ready","Boolean","refreshDeps","Object","values","PageContainer","content","Space","wrap","TermChanger","pathFn","RoutePath","RelativeTimeText","time","upload_time","type","TermNotFound","SolutionView","QueryForm","termId","initialValues","setLocalInitialValues","useInitialValues","loadingSolutionResult","solutionResult","form","requestSolution","useSolutionResultContext","submitter","searchConfig","submitText","submitButtonProps","Search","theme","render","_","dom","display","allSolutions","solutions","length","push","handleValuesChange","useCallback","allValues","enableSaveLocalStorage","undefined","ignoreOptions","author_name","Math","floor","value","handleOnFinish","params","onFinish","layout","onValuesChange","ProFormRadio","ensureQueryKey","EXTENDED_TEAM_COUNT","radioType","enableExclude","copilotsIgnore","ProFormSelect","mode","getRowKey","sc","join","SolutionListView","inViewRef","useRef","current","setCurrent","useState","useEffect","pagination","align","defaultPageSize","onChange","page","window","scrollTo","top","offsetTop","behavior","showSizeChanger","handleIgnore","useMemoizedFn","msg","setFieldValue","prevExcludeArray","getFieldValue","Array","isArray","find","t","notification","message","isEmpty","pop","breakthrough","excludeBreakthrough","submit","copilotsIgnoreArray","copilotId","ref","ConfigProvider","renderEmpty","Result","width","src","alt","subTitle","Empty","image","description","List","dataSource","rowKey","renderItem","item","rankSet","get","SolutionResultProvider","Flex","vertical","gap","order","Alert","showIcon","banner","href","target","key","SolutionAlgorithmService","getInstance","instance","calculateAllSolutions","context","k","reject","worker","Worker","URL","addEventListener","event","terminate","postMessage","solutionAlgorithm","DEFAULT_INITIAL_VALUES","exclude","LOCAL_STORAGE_SETTING_KEY","loaclInitialValues","useLocalStorageState","defaultValue","useRequestSolution","WHOLE_BOX","runAsync","disableAlternative","availableBox","withoutExclude","WeakMap","i","set","manual"],"mappings":"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"}