{"version":3,"file":"static/js/async/solutions/(termId)/page.a21fb48a.js","sources":["webpack://@sinsa/web/./src/components/ExcludeAurorianFormList/index.tsx","webpack://@sinsa/web/./src/components/ExcludeAurorianFormList/utils.ts","webpack://@sinsa/web/./src/components/SolutionCard/CopilotBlock/constants.ts?2987","webpack://@sinsa/web/./src/components/SolutionCard/CopilotBlock/index.tsx?40f0","webpack://@sinsa/web/./src/components/SolutionCard/helpers.ts","webpack://@sinsa/web/./src/components/SolutionCard/index.tsx","webpack://@sinsa/web/./src/components/TermChanger.tsx?8d45","webpack://@sinsa/web/./src/components/TermNotFound.tsx?4053","webpack://@sinsa/web/./src/plugins/arms.ts?6d7d","webpack://@sinsa/web/./src/routes/solutions/[termId]/page.tsx","webpack://@sinsa/web/./src/views/SolutionView/QueryForm/constants.ts","webpack://@sinsa/web/./src/views/SolutionView/QueryForm/hooks/use-initial-values.ts","webpack://@sinsa/web/./src/views/SolutionView/QueryForm/index.tsx","webpack://@sinsa/web/./src/views/SolutionView/SolutionAlert/constants.tsx","webpack://@sinsa/web/./src/views/SolutionView/SolutionAlert/index.tsx","webpack://@sinsa/web/./src/views/SolutionView/SolutionListView/index.tsx","webpack://@sinsa/web/./src/views/SolutionView/index.tsx"],"sourcesContent":["import {\n  ProForm,\n  ProFormDependency,\n  ProFormList,\n  ProFormRate,\n  ProFormSwitch,\n} from '@ant-design/pro-components';\nimport { useModel } from '@modern-js/runtime/model';\nimport { Button, Select, Tooltip } from 'antd';\nimport { Delete } from '@icon-park/react';\nimport { AdaptiveAurorianCard } from '../AdaptiveAurorianCard';\nimport { ensureExcludeKey } from './utils';\nimport { AuroriansModel, filterAuroriansOption } from '@/models/aurorians';\n\ninterface ExcludeFormListProps {\n  name: string;\n}\n\nexport const ExcludeAurorianFormList: React.FC<ExcludeFormListProps> = ({\n  name,\n  ...props\n}) => {\n  const [{ auroriansOptions, auroriansMap }] = useModel(AuroriansModel);\n\n  return (\n    <ProFormList\n      {...props}\n      creatorButtonProps={{\n        creatorButtonText: '添加排除的光灵',\n      }}\n      name={name}\n      alwaysShowItemLabel\n      actionRender={(field, action) => [\n        <Tooltip key=\"delete\" title=\"删除此光灵\">\n          <Button\n            style={{ marginLeft: '.5rem' }}\n            icon={<Delete />}\n            onClick={e => {\n              e.stopPropagation();\n              action.remove(field.name);\n            }}\n          />\n        </Tooltip>,\n      ]}\n    >\n      {() => {\n        return (\n          <ProForm.Group>\n            <ProForm.Item\n              label=\"排除的光灵\"\n              name={ensureExcludeKey('aurorianId')}\n              rules={[{ required: true }]}\n            >\n              <Select\n                options={auroriansOptions}\n                showSearch\n                allowClear={false}\n                placeholder={'支持按拼音搜索光灵, 比如 ad 可以搜到 安顿'}\n                filterOption={filterAuroriansOption}\n              />\n            </ProForm.Item>\n            <ProFormDependency name={[ensureExcludeKey('aurorianId')]}>\n              {({ aurorianId }) => {\n                if (aurorianId) {\n                  return (\n                    <AdaptiveAurorianCard\n                      readOnly\n                      mini\n                      aurorianId={aurorianId}\n                    />\n                  );\n                }\n                return null;\n              }}\n            </ProFormDependency>\n            <ProFormDependency name={[ensureExcludeKey('aurorianId')]}>\n              {({ aurorianId }) => {\n                if (aurorianId) {\n                  return (\n                    <ProFormSwitch\n                      label=\"仅排除突破\"\n                      name={ensureExcludeKey('excludeBreakthroughOnly')}\n                    />\n                  );\n                }\n                return null;\n              }}\n            </ProFormDependency>\n\n            <ProFormDependency\n              name={[\n                ensureExcludeKey('aurorianId'),\n                ensureExcludeKey('excludeBreakthroughOnly'),\n              ]}\n            >\n              {({ aurorianId, excludeBreakthroughOnly }) => {\n                const targetAurorian = auroriansMap[aurorianId];\n                if (excludeBreakthroughOnly && targetAurorian) {\n                  return (\n                    <ProFormRate\n                      name={ensureExcludeKey('excludeBreakthrough')}\n                      label=\"排除突破数\"\n                      fieldProps={{\n                        count: targetAurorian.rarity,\n                        allowHalf: false,\n                      }}\n                      tooltip=\"大于等于此突破数的光灵会被排除，但不会排除零破的此光灵\"\n                      rules={[{ required: true }]}\n                    />\n                  );\n                }\n                return null;\n              }}\n            </ProFormDependency>\n          </ProForm.Group>\n        );\n      }}\n    </ProFormList>\n  );\n};\n","import type { ExcludeDataType } from '@/views/SolutionView/schemas/query-params';\n\nexport function ensureExcludeKey(key: keyof ExcludeDataType) {\n  return key;\n}\n","import type { CopilotNextAssetType } from '@sinsa/schema';\n\nexport const AssetTypeTextMapper: Record<CopilotNextAssetType['type'], string> =\n  {\n    script33: '三十三号脚本',\n  };\n","import { clsx } from 'clsx';\nimport {\n  Button,\n  Dropdown,\n  Flex,\n  Popconfirm,\n  Space,\n  Tag,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport React, { useCallback, useMemo } from 'react';\nimport numeral from 'numeral';\nimport { useBreakpoint } from '@ant-design/pro-components';\nimport {\n  MessageOne,\n  More,\n  Paperclip,\n  PreviewCloseOne,\n  Bug,\n} from '@icon-park/react';\nimport type {\n  AurorianNextType,\n  CopilotNextType,\n  TermNextType,\n} from '@sinsa/schema';\nimport { AdaptiveAuroriansTeam } from './AdaptiveAuroriansTeam';\nimport styles from './styles.module.less';\nimport { AssetTypeTextMapper } from './constants';\nimport { RelativeTimeText } from '@/components/RelativeTimeText';\nimport { trimTitle } from '@/components/utils';\nimport { useSolutionResultContext } from '@/views/SolutionView/context';\nimport { QueryFormAction } from '@/views/SolutionView/hooks/use-trigger-form-action/constants';\n\ninterface CopilotBlockProps {\n  copilot: CopilotNextType;\n  currentTerm: TermNextType;\n  className?: string;\n\n  readOnly?: boolean;\n}\n\nenum MenuKey {\n  IgnoreCopilot = 'IgnoreCopilot',\n}\n\nfunction useLarge() {\n  const screen = useBreakpoint();\n  const isLarge = useMemo(\n    () => screen === 'lg' || screen === 'xl' || screen === 'xxl',\n    [screen],\n  );\n\n  return isLarge;\n}\n\nexport const CopilotBlock = React.memo<CopilotBlockProps>(\n  ({ copilot, currentTerm, className, readOnly }) => {\n    const isLarge = useLarge();\n    const hasAsset = useMemo(() => {\n      return Array.isArray(copilot.assets);\n    }, [copilot.assets]);\n\n    const displayTitle = useMemo(\n      () => trimTitle(copilot.title),\n      [copilot.title],\n    );\n\n    const { triggerFormAction } = useSolutionResultContext();\n\n    const handleClickMenu = useCallback(\n      (info: { key: string }) => {\n        switch (info.key) {\n          case MenuKey.IgnoreCopilot:\n            triggerFormAction({\n              type: QueryFormAction.IgnoreCopilot,\n              copilot,\n            });\n            break;\n          default:\n            break;\n        }\n      },\n      [copilot.copilot_id],\n    );\n\n    const handleReplace = useCallback(\n      (_aurorian: AurorianNextType) => {\n        triggerFormAction({\n          type: QueryFormAction.ReplaceAurorian,\n          aurorian: _aurorian,\n          copilot,\n          currentTerm,\n        });\n      },\n      [copilot.copilot_id, currentTerm.term_id],\n    );\n    return (\n      <div className={clsx(styles.CopilotBlock, className)}>\n        <AdaptiveAuroriansTeam\n          aurorianRequirements={copilot.aurorian_requirements}\n          readOnly={readOnly}\n          onReplace={handleReplace}\n        />\n        <div className={styles.PaddingContainer}>\n          <Flex className={styles.Header} wrap=\"nowrap\" align=\"center\">\n            <span className={styles.Score}>\n              {numeral(copilot.score).format('0,0')}\n            </span>\n            <Flex className={styles.Author} align=\"center\" gap={4}>\n              <Space.Compact size=\"small\">\n                {!readOnly ? (\n                  <Dropdown\n                    menu={{\n                      items: [\n                        {\n                          key: MenuKey.IgnoreCopilot,\n                          label: (\n                            <span>\n                              <PreviewCloseOne /> 排除此作业\n                            </span>\n                          ),\n                        },\n                      ],\n                      onClick: handleClickMenu,\n                    }}\n                  >\n                    <Button icon={<More />} />\n                  </Dropdown>\n                ) : null}\n\n                <Button\n                  icon={\n                    <Tooltip title=\"报告收录错误\">\n                      <Bug />\n                    </Tooltip>\n                  }\n                  onClick={e => {\n                    e.stopPropagation();\n                    const params = {\n                      有收录问题的作业所在荒典期数: copilot.term_id,\n                      有收录问题的作业视频链接: `${copilot.author_name} ${copilot.title} https://www.bilibili.com/video/${copilot.href}`,\n                    };\n\n                    const queryString = Object.entries(params)\n                      .map(\n                        ([key, value]) =>\n                          `prefill_${window.encodeURIComponent(\n                            key,\n                          )}=${window.encodeURIComponent(value)}`,\n                      )\n                      .join('&');\n                    window.open(\n                      `https://fwf92qm5h53.feishu.cn/share/base/form/shrcnFMYfIOulCFwcl5ELDfGCVf?${queryString}`,\n                      '_blank',\n                    );\n                  }}\n                />\n              </Space.Compact>\n              <RelativeTimeText time={copilot.upload_time} />\n\n              {copilot.description && !isLarge ? (\n                <Tooltip title={copilot.description}>\n                  {copilot.description ? <MessageOne size={18} /> : null}\n                </Tooltip>\n              ) : null}\n\n              <span\n                className={clsx(\n                  styles.AuthorName,\n                  !isLarge && styles.AuthorSmall,\n                )}\n              >\n                {copilot.author_name}\n              </span>\n            </Flex>\n          </Flex>\n          <div className={styles.Title}>\n            <Typography.Link\n              href={`https://www.bilibili.com/video/${copilot.href}`}\n              target=\"_blank\"\n              title={copilot.title}\n              ellipsis={true}\n            >\n              {currentTerm?.term_id &&\n              copilot.term_id !== currentTerm.term_id ? (\n                <Tooltip title={`复刻 ${copilot.term_id} 期荒典`}>\n                  <Tag color=\"red\">复刻</Tag>\n                </Tooltip>\n              ) : null}\n              {displayTitle}\n            </Typography.Link>\n          </div>\n          {copilot.description && isLarge ? (\n            <Typography.Paragraph type=\"secondary\">\n              {copilot.description}\n            </Typography.Paragraph>\n          ) : null}\n          {hasAsset && isLarge\n            ? copilot.assets?.map((asset, index) => (\n                <Popconfirm\n                  // eslint-disable-next-line react/no-array-index-key\n                  key={`${asset.type}${index}`}\n                  okText=\"确认\"\n                  title=\"此资源仅为临时存档。是否开始下载？\"\n                  onConfirm={() => {\n                    const el = document.createElement('a');\n                    el.href = asset.script33.link;\n                    el.click();\n                  }}\n                >\n                  <Typography.Link>\n                    <Paperclip /> {AssetTypeTextMapper[asset.type]}\n                    存档\n                  </Typography.Link>\n                </Popconfirm>\n              ))\n            : null}\n        </div>\n      </div>\n    );\n  },\n  (prev, next) =>\n    prev.className === next.className &&\n    prev.copilot.copilot_id === next.copilot.copilot_id &&\n    prev.currentTerm.term_id === next.currentTerm.term_id,\n);\n","import { memoize } from 'lodash-es';\n\nexport const getSolutionTitle = memoize((k?: number): string => {\n  switch (k) {\n    case 1:\n      return '一队方案';\n    case 2:\n      return '两队方案';\n    case 3:\n      return '三队方案';\n    case 4:\n      return '四队方案';\n    default:\n      return '匹配方案';\n  }\n});\n","import type { Solution } from '@sinsa/solution-calculator/dist/types/types';\nimport { Card, Typography } from 'antd';\nimport React, { useMemo } from 'react';\nimport { isEqual } from 'lodash-es';\nimport numeral from 'numeral';\nimport type { CopilotNextType, TermNextType } from '@sinsa/schema';\nimport { CopilotBlock } from './CopilotBlock';\nimport styles from './styles.module.less';\nimport { getSolutionTitle } from './helpers';\n\nconst copilotRowKey = (c: CopilotNextType) => c.copilot_id;\n\nexport interface SolutionCardProps {\n  solution: Solution;\n  currentTerm: TermNextType;\n  index: number;\n}\n\nexport const SolutionCard = React.memo<SolutionCardProps>(\n  ({ solution, currentTerm, index }) => {\n    const sorted = useMemo(() => {\n      return [...solution.copilots].sort((a, b) => b.score - a.score);\n    }, [solution]);\n\n    return (\n      <Card className={styles.SolutionCard} bodyStyle={{ paddingBottom: 16 }}>\n        <div className={styles.TotalScore}>\n          <Typography.Text strong>{`#${index + 1} ${getSolutionTitle(\n            solution.copilots.length,\n          )} ${numeral(solution.totalScore).format('0,0')}`}</Typography.Text>\n        </div>\n\n        {sorted.map(copilot => {\n          return (\n            <CopilotBlock\n              className={styles.ControlledCopilotBlock}\n              key={copilotRowKey(copilot)}\n              copilot={copilot}\n              currentTerm={currentTerm}\n            />\n          );\n        })}\n      </Card>\n    );\n  },\n  (prev, next) =>\n    isEqual(\n      prev.solution.copilots.map(c => c.copilot_id),\n      next.solution.copilots.map(c => c.copilot_id),\n    ) &&\n    prev.currentTerm.term_id === next.currentTerm.term_id &&\n    prev.index === next.index,\n);\n","import { useModel } from '@modern-js/runtime/model';\nimport { Select } from 'antd';\nimport { useNavigate, useParams } from '@modern-js/runtime/router';\nimport { useMemo } from 'react';\nimport { TermsModel } from '@/models/terms';\nimport type { RoutePath } from '@/views/GlobalLayout/constants';\n\nexport function useTargetTermFromParams() {\n  const params = useParams<{ termId: string | 'latest' }>();\n  const [{ termsMap, latestTerm }] = useModel(TermsModel);\n\n  const targetTerm = useMemo(() => {\n    if (!params.termId) {\n      return undefined;\n    }\n    return params.termId === 'latest' ? latestTerm : termsMap[params.termId];\n  }, [params.termId, latestTerm?.term_id]);\n\n  return {\n    targetTerm,\n  };\n}\n\nexport const TermChanger: React.FC<{\n  pathFn: typeof RoutePath.Copilots | typeof RoutePath.Solutions;\n}> = ({ pathFn }) => {\n  const [terms] = useModel(TermsModel);\n  const { targetTerm } = useTargetTermFromParams();\n  const navigate = useNavigate();\n\n  return (\n    <Select\n      value={targetTerm?.term_id}\n      options={terms.termsOptions}\n      placeholder=\"荒典期数\"\n      onChange={nextTerm => {\n        navigate(\n          pathFn(nextTerm === terms.latestTerm?.term_id ? 'latest' : nextTerm),\n        );\n      }}\n    />\n  );\n};\n","import { useModel } from '@modern-js/runtime/model';\nimport { Button, Result } from 'antd';\nimport { Link } from '@modern-js/runtime/router';\nimport { TermsModel } from '@/models/terms';\nimport { RoutePath } from '@/views/GlobalLayout/constants';\nimport SINSA_SORRY_URL from '@/assets/sinsa/sorry.png';\n\nexport const TermNotFound: React.FC = () => {\n  const [{ latestTerm }] = useModel(TermsModel);\n\n  return (\n    <Result\n      title=\"暂时没有这期荒典作业\"\n      subTitle=\"检查链接是否正确或返回最近荒典作业\"\n      icon={<img alt=\"未找到作业\" src={SINSA_SORRY_URL} />}\n      extra={\n        latestTerm ? (\n          <Link to={RoutePath.Copilots('latest')}>\n            <Button type=\"primary\">返回最近作业</Button>\n          </Link>\n        ) : (\n          <Link to={RoutePath.Home}>\n            <Button type=\"primary\">返回首页</Button>\n          </Link>\n        )\n      }\n    />\n  );\n};\n","import ArmsRum from '@arms/rum-browser';\n\nconst url = new URL(window.location.href);\n\nexport function initArmsRum() {\n  ArmsRum.init({\n    pid: 'efvpghf1ny@b201b32018ef0b3',\n    endpoint: 'https://efvpghf1ny-default-cn.rum.aliyuncs.com',\n    beforeReport(bundle) {\n      if (bundle.app.env !== 'prod') {\n        return null;\n      }\n      return bundle;\n    },\n    version: `${__COMMIT_HASH__}${__COMMIT_TIME__}`,\n    // 设置环境信息，参考值：'prod' | 'gray' | 'pre' | 'daily' | 'local'\n    env:\n      url.hostname === 'sinsa-daddy.com' ||\n      url.hostname === 'sinsa.dad' ||\n      url.hostname === 'sinsa-daddy.gitee.io'\n        ? 'prod'\n        : 'local',\n    // 设置路由模式， 参考值：'history' | 'hash'\n    spaMode: 'history',\n    collectors: {\n      // 页面性能指标监听开关，默认开启\n      perf: true,\n      // WebVitals指标监听开关，默认开启\n      webVitals: true,\n      // Ajax监听开关，默认开启\n      api: true,\n      // 静态资源开关，默认开启\n      staticResource: true,\n      // JS错误监听开关，默认开启\n      jsError: true,\n      // 控制台错误监听开关，默认开启\n      consoleError: true,\n      // 用户行为监听开关，默认开启\n      action: true,\n    },\n    // 链路追踪配置开关，默认关闭\n    tracing: false,\n  });\n}\n\nexport enum RumArmsMyType {\n  QuerySolution = 'query_solution',\n}\n","/* eslint-disable no-nested-ternary */\nimport { PageContainer } from '@ant-design/pro-components';\nimport { useMemo } from 'react';\nimport { useRequest } from 'ahooks';\nimport { Space, Typography } from 'antd';\nimport { TermNotFound } from '@/components/TermNotFound';\nimport { TermChanger, useTargetTermFromParams } from '@/components/TermChanger';\nimport { getCopilots } from '@/services/http';\nimport { RoutePath } from '@/views/GlobalLayout/constants';\nimport { RelativeTimeText } from '@/components/RelativeTimeText';\nimport { SolutionView } from '@/views/SolutionView';\n\nconst SolutionsPage: React.FC = () => {\n  const { targetTerm: currentTerm } = useTargetTermFromParams();\n  const { data, error, loading } = useRequest(\n    () =>\n      currentTerm?.term_id\n        ? getCopilots(currentTerm.term_id)\n        : (Promise.resolve({}) as ReturnType<typeof getCopilots>),\n    {\n      ready: Boolean(currentTerm?.term_id),\n      refreshDeps: [currentTerm?.term_id],\n    },\n  );\n\n  const copilots = useMemo(() => Object.values(data ?? []), [data]);\n\n  return (\n    <PageContainer\n      content={\n        <Space wrap>\n          <TermChanger pathFn={RoutePath.Solutions} />\n          {copilots[0] ? (\n            <Typography.Text>\n              上次作业更新 <RelativeTimeText time={copilots[0].upload_time} />\n            </Typography.Text>\n          ) : null}\n          <Typography.Text type=\"secondary\">\n            Tips: 点击匹配作业中光灵头像可唤出菜单一键排除光灵或仅排除突破 ❤\n          </Typography.Text>\n        </Space>\n      }\n      title=\"作业匹配\"\n      loading={loading}\n    >\n      {error || !copilots?.length ? (\n        <TermNotFound />\n      ) : currentTerm ? (\n        <SolutionView copilots={copilots} currentTerm={currentTerm} />\n      ) : (\n        <TermNotFound />\n      )}\n    </PageContainer>\n  );\n};\n\nexport default SolutionsPage;\n","export const LOCAL_STORAGE_SETTING_KEY_PREFIX =\n  'SINSA_DADDY_SOLUTIONS_FILTER_KEY_V1';\n\nexport const EXTENDED_TEAM_COUNT = [\n  { label: '一队', value: 1 },\n  { label: '两队', value: 2 },\n  { label: '三队', value: 3 },\n  { label: '四队', value: 4 },\n];\n","import { useLocalStorageState } from 'ahooks';\nimport { useMemo } from 'react';\nimport type { TermNextType } from '@sinsa/schema';\nimport type { QueryParamsType } from '../../schemas/query-params';\n\ninterface UseInitialValuesArgs {\n  termId: TermNextType['term_id'];\n}\n\nconst LOCAL_STORAGE_SETTING_KEY_PREFIX = 'SINSA_DADDY_SOLUTIONS_FILTER_KEY_V1';\n\nconst DEFAULT_INITIAL_VALUES: QueryParamsType = {\n  k: 3,\n  exclude: [{}] as any[],\n};\n\nexport function useInitialValues({ termId }: UseInitialValuesArgs) {\n  const LOCAL_STORAGE_SETTING_KEY = useMemo(\n    () => `${LOCAL_STORAGE_SETTING_KEY_PREFIX}_${termId}` as const,\n    [termId],\n  );\n\n  const [loaclInitialValues, setLocalInitialValues] =\n    useLocalStorageState<QueryParamsType>(LOCAL_STORAGE_SETTING_KEY, {\n      defaultValue: undefined,\n    });\n\n  return {\n    initialValues: loaclInitialValues ?? DEFAULT_INITIAL_VALUES,\n    setLocalInitialValues,\n  };\n}\n","import type { SubmitterProps } from '@ant-design/pro-components';\nimport {\n  ProFormSelect,\n  ProFormDependency,\n  ProFormSwitch,\n  ProFormRadio,\n  ProForm,\n} from '@ant-design/pro-components';\nimport { useCallback, useMemo } from 'react';\nimport { Space, Typography } from 'antd';\nimport type { CopilotNextType, TermNextType } from '@sinsa/schema';\nimport { Search } from '@icon-park/react';\nimport ArmsRum from '@arms/rum-browser';\nimport { RumEventType } from '@arms/rum-core';\nimport type { QueryParamsType } from '../schemas/query-params';\nimport { useSolutionResultContext } from '../context';\nimport { useInitialValues } from './hooks/use-initial-values';\nimport { EXTENDED_TEAM_COUNT } from './constants';\nimport { ensureQueryKey } from './utils';\nimport { ExcludeAurorianFormList } from '@/components/ExcludeAurorianFormList';\nimport { RumArmsMyType } from '@/plugins/arms';\n\ninterface QueryFormProps {\n  termId: TermNextType['term_id'];\n  copilots: CopilotNextType[];\n}\n\nexport const QueryForm: React.FC<QueryFormProps> = ({ termId, copilots }) => {\n  const { initialValues, setLocalInitialValues } = useInitialValues({ termId });\n\n  const { loadingSolutionResult, solutionResult, form, requestSolution } =\n    useSolutionResultContext();\n\n  const submitter = useMemo<SubmitterProps>(() => {\n    return {\n      searchConfig: { submitText: '寻找方案' },\n      submitButtonProps: {\n        icon: <Search theme=\"outline\" />,\n      },\n      render(_, dom) {\n        const display = [...dom];\n        if (typeof solutionResult?.allSolutions.solutions.length === 'number') {\n          display.push(\n            <Typography.Text key=\"count\">\n              已为您找到{' '}\n              <Typography.Text strong>\n                {solutionResult.allSolutions.solutions.length}\n              </Typography.Text>{' '}\n              个作业匹配方案\n            </Typography.Text>,\n          );\n        }\n        return <Space wrap>{display}</Space>;\n      },\n    };\n  }, [solutionResult?.allSolutions.solutions.length]);\n\n  const handleValuesChange = useCallback(\n    (_: unknown, allValues: QueryParamsType) => {\n      if (allValues.enableSaveLocalStorage) {\n        setLocalInitialValues(allValues);\n      } else {\n        setLocalInitialValues(undefined);\n      }\n      setLocalInitialValues(\n        allValues.enableSaveLocalStorage ? allValues : undefined,\n      );\n    },\n    [],\n  );\n\n  const ignoreOptions = useMemo(() => {\n    return copilots.map(c => {\n      return {\n        label: `${c.author_name} ${Math.floor(c.score / 10000)}W`,\n        value: c.copilot_id,\n      };\n    });\n  }, [copilots]);\n\n  const handleOnFinish = useCallback(\n    async (params: QueryParamsType) => {\n      ArmsRum.sendEvent({\n        event_type: RumEventType.CUSTOM,\n        type: RumArmsMyType.QuerySolution,\n        name: '回溯搜索配队方案',\n        group: JSON.stringify(params),\n      });\n\n      await requestSolution(copilots, params);\n    },\n    [copilots],\n  );\n\n  return (\n    <ProForm<QueryParamsType>\n      onFinish={handleOnFinish}\n      layout=\"vertical\"\n      initialValues={initialValues}\n      submitter={submitter}\n      loading={loadingSolutionResult}\n      onValuesChange={handleValuesChange}\n      form={form}\n    >\n      <ProForm.Group>\n        <ProFormRadio.Group\n          name={ensureQueryKey('k')}\n          label=\"队伍数量\"\n          rules={[{ required: true }]}\n          options={EXTENDED_TEAM_COUNT}\n          allowClear={false}\n          radioType=\"button\"\n        />\n        <ProFormSwitch\n          name={ensureQueryKey('disableAlternative')}\n          label=\"不考虑可替自由位\"\n          tooltip=\"开启后，计算的队伍方案中绝对不会出现重复光灵，满足图鉴大佬的强迫症\"\n        />\n        <ProForm.Group>\n          <ProFormSwitch\n            name={ensureQueryKey('enableExclude')}\n            label=\"额外排除光灵\"\n            tooltip=\"排除光灵会忽略可替自由位\"\n          />\n          <ProFormDependency name={[ensureQueryKey('enableExclude')]}>\n            {({ enableExclude }: Pick<QueryParamsType, 'enableExclude'>) => {\n              return enableExclude ? (\n                <ExcludeAurorianFormList name={ensureQueryKey('exclude')} />\n              ) : null;\n            }}\n          </ProFormDependency>\n        </ProForm.Group>\n        <ProFormSwitch\n          name={ensureQueryKey('enableSaveLocalStorage')}\n          label=\"记住我的设置\"\n          tooltip=\"开启后，这一期荒典筛选的设置将会储存在您的浏览器本地，避免繁琐重复筛选\"\n        />\n      </ProForm.Group>\n      <ProFormDependency name={[ensureQueryKey('copilotsIgnore')]}>\n        {({ copilotsIgnore }: Pick<QueryParamsType, 'copilotsIgnore'>) => {\n          return copilotsIgnore?.length ? (\n            <ProFormSelect\n              mode=\"multiple\"\n              name={ensureQueryKey('copilotsIgnore')}\n              label=\"已额外排除的作业\"\n              options={ignoreOptions}\n            />\n          ) : null;\n        }}\n      </ProFormDependency>\n      {/* <ProFormDependency name={[ensureQueryKey('copilotsDiff')]}>\n        {({ copilotsDiff }: Pick<QueryParamsType, 'copilotsDiff'>) => {\n          console.log('copilotsDiff', copilotsDiff);\n          return null;\n        }}\n      </ProFormDependency> */}\n    </ProForm>\n  );\n};\n","import type { TermNextType } from '@sinsa/schema';\nimport { Typography, type AlertProps } from 'antd';\n\nexport const COMMON_ALERT_PROPS: AlertProps = {\n  type: 'error',\n  showIcon: false,\n  banner: true,\n};\n\nexport const ALERT_MAP = new Map<TermNextType['term_id'], AlertProps>([\n  [\n    'cn-26',\n    {\n      message:\n        '光灵黑潮目前装备技能存在 Bug 使得荒典分数可能存在虚高问题。官方将于 1 月 10 日更新后修复。本期黑潮队伍分数仅供参考。',\n      action: (\n        <Typography.Link\n          href={`https://www.bilibili.com/read/cv29262782/`}\n          target=\"_blank\"\n        >\n          查看官方公告\n        </Typography.Link>\n      ),\n    },\n  ],\n  // [\n  //   'cn-36',\n  //   {\n  //     message:\n  //       '3月20日版本更新后, 本期荒典首领恶面花在部分情况下存在猛毒层数减少异常问题，导致抄作业失败，所以可能不是练度不够而是游戏有 bug, 请等待官方修复',\n  //   },\n  // ],\n]);\n","import type { TermNextType } from '@sinsa/schema';\nimport React from 'react';\nimport { Alert } from 'antd';\nimport { ALERT_MAP, COMMON_ALERT_PROPS } from './constants';\n\ninterface SolutionAlertProps {\n  currentTerm: TermNextType;\n}\n\nexport const SolutionAlert = React.memo<SolutionAlertProps>(\n  ({ currentTerm }) => {\n    const targetProps = ALERT_MAP.get(currentTerm.term_id);\n    if (!targetProps) {\n      return null;\n    }\n    return <Alert {...COMMON_ALERT_PROPS} {...targetProps} />;\n  },\n  (a, b) => a.currentTerm.term_id === b.currentTerm.term_id,\n);\n","import { ConfigProvider, Empty, List, Result, Typography } from 'antd';\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport type { Solution } from '@sinsa/solution-calculator/dist/types/types';\nimport type { TermNextType } from '@sinsa/schema';\nimport { useSolutionResultContext } from '../context';\nimport styles from './styles.module.less';\nimport SINSA_SORRY_URL from '@/assets/sinsa/sorry.png';\nimport SINSA_GO_URL from '@/assets/sinsa/get_started.png';\nimport { SolutionCard } from '@/components/SolutionCard';\n\nconst getRowKey = (sc: Solution) =>\n  sc.copilots.map(c => c.copilot_id).join(',');\n\nconst EmptyImageStyle: React.CSSProperties = { opacity: 0.5 };\n\nexport interface SolutionListViewProps {\n  currentTerm: TermNextType;\n}\n\nexport const SolutionListView: React.FC<SolutionListViewProps> = ({\n  currentTerm,\n}) => {\n  const inViewRef = useRef<HTMLDivElement>(null);\n\n  const { loadingSolutionResult, solutionResult } = useSolutionResultContext();\n\n  const [current, setCurrent] = useState(1);\n\n  useEffect(() => {\n    if (solutionResult && current !== 1) {\n      setCurrent(1);\n    }\n  }, [solutionResult]);\n\n  const pagination = useMemo(() => {\n    return {\n      align: 'center' as const,\n      defaultPageSize: 5,\n      current,\n      onChange(page: number) {\n        setCurrent(page);\n        window.scrollTo({\n          top: inViewRef.current!.offsetTop,\n          behavior: 'smooth',\n        });\n      },\n      showSizeChanger: false,\n    };\n  }, [current]);\n\n  return (\n    <>\n      <div className={styles.Mount} ref={inViewRef} />\n      <ConfigProvider\n        renderEmpty={name => {\n          if (name === 'List') {\n            return solutionResult?.allSolutions.solutions.length === 0 ? (\n              <Result\n                icon={\n                  <img\n                    width={100}\n                    src={SINSA_SORRY_URL}\n                    alt=\"醒山daddy: 很抱歉\"\n                  />\n                }\n                title=\"没能找到匹配的作业\"\n                subTitle={\n                  <div>\n                    1. 可以适当降低搜索的队伍数量。例如搜索两队 + 自己自动一队\n                    <br />\n                    2. 当前作业数量较少。可等待作业站更新后再次搜索\n                  </div>\n                }\n              />\n            ) : (\n              <Empty\n                image={<img src={SINSA_GO_URL} alt=\"醒山daddy: 信心\" />}\n                imageStyle={EmptyImageStyle}\n                description={\n                  <Typography.Text type=\"secondary\">\n                    准备好寻找作业匹配了！\n                  </Typography.Text>\n                }\n              />\n            );\n          }\n          return <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />;\n        }}\n      >\n        <List<Solution>\n          loading={loadingSolutionResult}\n          dataSource={solutionResult?.allSolutions.solutions}\n          pagination={\n            solutionResult?.allSolutions.solutions.length ? pagination : false\n          }\n          rowKey={getRowKey}\n          renderItem={item => (\n            <SolutionCard\n              index={solutionResult?.rankSet.get(item) ?? 0}\n              solution={item}\n              currentTerm={currentTerm}\n            />\n          )}\n        />\n      </ConfigProvider>\n    </>\n  );\n};\n","import { Card, Flex } from 'antd';\nimport type { CopilotNextType, TermNextType } from '@sinsa/schema';\nimport { Provider as NiceModalProvider } from '@ebay/nice-modal-react';\nimport { SolutionResultProvider } from './context';\nimport { QueryForm } from './QueryForm';\nimport { SolutionListView } from './SolutionListView';\nimport { SolutionAlert } from './SolutionAlert';\n\ninterface SolutionViewProps {\n  copilots: CopilotNextType[];\n  currentTerm: TermNextType;\n}\n\nexport const SolutionView: React.FC<SolutionViewProps> = ({\n  copilots,\n  currentTerm,\n}) => {\n  return (\n    <NiceModalProvider>\n      <SolutionResultProvider>\n        <Flex vertical gap=\"middle\">\n          <SolutionAlert currentTerm={currentTerm} />\n          <Card>\n            <QueryForm copilots={copilots} termId={currentTerm.term_id} />\n          </Card>\n          <SolutionListView currentTerm={currentTerm} />\n        </Flex>\n      </SolutionResultProvider>\n    </NiceModalProvider>\n  );\n};\n"],"names":["ensureExcludeKey","copilot","description","el","params","termId","nextTerm","init","bundle","undefined","enableExclude","copilotsIgnore","solutionResult","allSolutions","solutions"],"mappings":"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"}