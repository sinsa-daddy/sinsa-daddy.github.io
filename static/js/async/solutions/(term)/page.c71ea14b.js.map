{"version":3,"file":"static/js/async/solutions/(term)/page.c71ea14b.js","mappings":"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","sources":["webpack://@sinsa/web/./src/features/backtrack/helpers/box-without-aurorians-in-copilot.ts","webpack://@sinsa/web/./src/features/backtrack/helpers/can-use-copilot.ts","webpack://@sinsa/web/./src/features/backtrack/calculate-all-scenarios-and-scores.ts","webpack://@sinsa/web/./src/components/SolutionScenarioCard/index.tsx","webpack://@sinsa/web/./src/components/ExcludeAurorianFormList/index.tsx","webpack://@sinsa/web/./src/containers/CopilotSolution.tsx","webpack://@sinsa/web/./src/routes/solutions/[term]/page.tsx"],"sourcesContent":["import type { CopilotType, MyBoxType } from '@sinsa/schema';\nimport { produce } from 'immer';\nimport { CalcOptions } from '../types';\n\nexport function boxWithoutAuroriansInCopilot(\n  myBox: MyBoxType['aurorian_summaries'],\n  copilot: CopilotType,\n  { disalbeAlternative }: CalcOptions,\n) {\n  return produce(myBox, draft => {\n    for (const aurorianInCopilot of copilot.aurorian_summaries) {\n      // 0. 如果作业中的光灵本身是可替换的，则跳过此光灵判断\n      if (!disalbeAlternative && aurorianInCopilot.is_replaceable) {\n        continue;\n      }\n\n      delete draft[aurorianInCopilot.aurorian_name];\n    }\n  });\n}\n","import type {\n  CopilotType,\n  MyBoxType,\n  AurorianSummaryType,\n} from '@sinsa/schema';\nimport { CalcOptions } from '../types';\n\n/**\n * 我的 Box 能否抄这个作业\n * @param copilot 作业\n * @param myBox 我的 Box\n * @returns 我的 Box 能否抄这个作业\n */\nexport function canUseCopilot(\n  myBox: MyBoxType['aurorian_summaries'],\n  copilot: CopilotType,\n  { disalbeAlternative }: CalcOptions,\n): boolean {\n  for (const aurorianInCopilot of copilot.aurorian_summaries) {\n    // 0. 如果作业中的光灵本身是可替换的，则跳过此光灵判断\n    if (!disalbeAlternative && aurorianInCopilot.is_replaceable) {\n      continue;\n    }\n\n    const aurorianInMyBox = myBox[aurorianInCopilot.aurorian_name] as\n      | AurorianSummaryType\n      | undefined;\n\n    // 1. 光灵本身不存在于我的 box\n    if (!aurorianInMyBox) {\n      return false;\n    }\n\n    // 2. 如果我的 box 光灵突破低于作业要求突破\n    if (aurorianInMyBox.breakthrough < aurorianInCopilot.breakthrough) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","import type { CopilotType } from '@sinsa/schema';\nimport { boxWithoutAuroriansInCopilot } from './helpers/box-without-aurorians-in-copilot';\nimport { canUseCopilot } from './helpers/can-use-copilot';\nimport type { CalcOptions, SolutionContext, SolutionResult } from './types';\n\ninterface StackContext {\n  currentCopilotIndex: number;\n  currentScenario: CopilotType[];\n  remainingBox: SolutionContext['availableBox'];\n  count: number;\n}\n\n/**\n * 计算所有的队伍方案和具体分数\n * @param context 解决方案上下文\n * @param k 队伍数量\n */\nexport function calculateAllScenariosAndScores(\n  context: SolutionContext,\n  k = 3,\n  { disalbeAlternative }: CalcOptions = {},\n): SolutionResult {\n  const result: SolutionResult = {\n    scenarios: [],\n  };\n\n  const stack: StackContext[] = [\n    {\n      currentCopilotIndex: 0,\n      currentScenario: [],\n      remainingBox: context.availableBox,\n      count: k,\n    },\n  ];\n\n  while (stack.length > 0) {\n    const { currentCopilotIndex, currentScenario, remainingBox, count } =\n      stack.pop()!;\n\n    if (count === 0 || currentCopilotIndex === context.copilots.length) {\n      if (currentScenario.length >= k) {\n        result.scenarios.push({\n          copilots: [...currentScenario],\n          totalScore: currentScenario.reduce(\n            (score, next) => score + BigInt(next.score),\n            BigInt(0),\n          ),\n        });\n      }\n    } else {\n      const currentCopilot = context.copilots[currentCopilotIndex];\n      if (canUseCopilot(remainingBox, currentCopilot, { disalbeAlternative })) {\n        const newRemainingBox = boxWithoutAuroriansInCopilot(\n          remainingBox,\n          currentCopilot,\n          { disalbeAlternative },\n        );\n        stack.push({\n          currentCopilotIndex: currentCopilotIndex + 1,\n          currentScenario: [...currentScenario, currentCopilot],\n          remainingBox: newRemainingBox,\n          count: count - 1,\n        });\n      }\n\n      stack.push({\n        currentCopilotIndex: currentCopilotIndex + 1,\n        currentScenario,\n        remainingBox,\n        count,\n      });\n    }\n  }\n\n  result.scenarios.sort((a, b) => Number(b.totalScore - a.totalScore));\n\n  return result;\n}\n","import { ProTable } from '@ant-design/pro-components';\nimport { CopilotType } from '@sinsa/schema';\nimport { useCallback, useMemo } from 'react';\nimport { produce } from 'immer';\nimport { copilotRowKey } from '../CopilotsTable';\nimport { copilotsColumns } from '../CopilotsTable/columns';\nimport type { SolutionScenario } from '@/features/backtrack/types';\n\ninterface SolutionScenarioCardProps {\n  solution: SolutionScenario;\n  title?: string;\n}\n\nexport const SolutionScenarioCard: React.FC<SolutionScenarioCardProps> = ({\n  solution,\n  title,\n}) => {\n  const request = useCallback(async () => {\n    return {\n      data: produce(solution.copilots, draft => {\n        draft.sort((a, b) => Number(b.score - a.score));\n      }),\n      success: true,\n    };\n  }, []);\n\n  const toolbar = useMemo(() => ({ title, settings: [] }), [title]);\n\n  const scroll = useMemo(() => ({ x: 'max-content' }), []);\n\n  return (\n    <ProTable<CopilotType>\n      showHeader={true}\n      toolbar={toolbar}\n      rowKey={copilotRowKey}\n      columns={copilotsColumns}\n      request={request}\n      search={false}\n      pagination={false}\n      scroll={scroll}\n      ghost\n    />\n  );\n};\n","import {\n  ProForm,\n  ProFormDependency,\n  ProFormList,\n  ProFormRate,\n  ProFormSelect,\n  ProFormSwitch,\n} from '@ant-design/pro-components';\nimport { useModel } from '@modern-js/runtime/model';\nimport { RarityMapper } from '../AurorianCard/constants';\nimport { AurorianCard } from '../AurorianCard';\nimport { AuroriansModel } from '@/models/aurorians';\n\ninterface ExcludeFormListProps {\n  name: string;\n}\n\nexport const ExcludeAurorianFormList: React.FC<ExcludeFormListProps> = ({\n  name,\n  ...props\n}) => {\n  const [{ auroriansOptions, auroriansMap }] = useModel(AuroriansModel);\n  return (\n    <ProFormList\n      {...props}\n      creatorButtonProps={{\n        creatorButtonText: '添加排除的光灵',\n      }}\n      name={name}\n      alwaysShowItemLabel\n      min={1}\n    >\n      {() => {\n        return (\n          <ProForm.Group>\n            <ProFormSelect\n              label=\"排除的光灵\"\n              name={'aurorianName'}\n              options={auroriansOptions}\n              allowClear\n              showSearch\n              width={'sm'}\n              rules={[{ required: true }]}\n            />\n            <ProFormDependency\n              key=\"excludeBreakthroughOnly\"\n              name={['aurorianName']}\n            >\n              {({ aurorianName }) => {\n                if (aurorianName) {\n                  return <AurorianCard sameSize name={aurorianName} />;\n                }\n                return null;\n              }}\n            </ProFormDependency>\n            <ProFormDependency\n              key=\"excludeBreakthroughOnly\"\n              name={['aurorianName']}\n            >\n              {({ aurorianName }) => {\n                if (aurorianName) {\n                  return (\n                    <ProFormSwitch\n                      label=\"仅排除突破\"\n                      name=\"excludeBreakthroughOnly\"\n                    />\n                  );\n                }\n                return null;\n              }}\n            </ProFormDependency>\n\n            <ProFormDependency\n              key=\"excludeBreakthrough\"\n              name={['aurorianName', 'excludeBreakthroughOnly']}\n            >\n              {({ aurorianName, excludeBreakthroughOnly }) => {\n                const targetAurorian = auroriansMap[aurorianName];\n                if (excludeBreakthroughOnly && targetAurorian) {\n                  return (\n                    <ProFormRate\n                      name=\"excludeBreakthrough\"\n                      label=\"排除突破数\"\n                      fieldProps={{\n                        count: RarityMapper[targetAurorian.rarity],\n                        allowHalf: false,\n                      }}\n                      tooltip=\"此突破数以上的光灵会被排除，但不会排除零破的此光灵\"\n                    />\n                  );\n                }\n                return null;\n              }}\n            </ProFormDependency>\n          </ProForm.Group>\n        );\n      }}\n    </ProFormList>\n  );\n};\n","import {\n  ProForm,\n  ProFormDependency,\n  ProFormInstance,\n  ProFormRadio,\n  ProFormSwitch,\n} from '@ant-design/pro-components';\nimport { CopilotType } from '@sinsa/schema';\nimport { Card, List, Space, Typography } from 'antd';\nimport { useModel } from '@modern-js/runtime/model';\nimport numeral from 'numeral';\nimport { produce } from 'immer';\nimport { useRequest } from 'ahooks';\nimport { useRef } from 'react';\nimport { calculateAllScenariosAndScores } from '@/features/backtrack/calculate-all-scenarios-and-scores';\nimport { AuroriansModel } from '@/models/aurorians';\nimport { SolutionScenarioCard } from '@/components/SolutionScenarioCard';\nimport { ExcludeAurorianFormList } from '@/components/ExcludeAurorianFormList';\nimport type { SolutionScenario } from '@/features/backtrack/types';\n\ninterface CopilotSolutionProps {\n  dataSource: CopilotType[];\n}\n\ninterface QueryParams {\n  k: number;\n  box: 'whole' | 'my-box';\n  disalbeAlternative?: boolean;\n  enableExclude?: boolean;\n  exclude?: {\n    aurorianName: string;\n    excludeBreakthrough?: number;\n    excludeBreakthroughOnly?: boolean;\n  }[];\n}\n\nconst initialValues = { k: 3, box: 'whole', exclude: [{}] as any[] } as const;\n\nexport const CopilotSolution: React.FC<CopilotSolutionProps> = ({\n  dataSource,\n}) => {\n  const [{ WHOLE_BOX }] = useModel(AuroriansModel);\n\n  const formRef = useRef<ProFormInstance>();\n\n  const { data, loading, runAsync } = useRequest(\n    async (params: QueryParams) => {\n      let filterBox = WHOLE_BOX.aurorian_summaries;\n      if (params.exclude) {\n        filterBox = produce(WHOLE_BOX.aurorian_summaries, draft => {\n          for (const aurorianInExclude of params.exclude!) {\n            if (!aurorianInExclude.excludeBreakthroughOnly) {\n              delete draft[aurorianInExclude.aurorianName];\n            } else if (\n              typeof aurorianInExclude.excludeBreakthrough === 'number' &&\n              aurorianInExclude.excludeBreakthrough >= 1\n            ) {\n              draft[aurorianInExclude.aurorianName].breakthrough =\n                aurorianInExclude.excludeBreakthrough - 1;\n            }\n          }\n        });\n      }\n\n      const [solutionResult] = await Promise.all([\n        Promise.resolve(\n          calculateAllScenariosAndScores(\n            {\n              copilots: dataSource,\n              availableBox: filterBox,\n            },\n            params.k,\n            { disalbeAlternative: params.disalbeAlternative },\n          ),\n        ),\n        new Promise<void>(resolve => window.setTimeout(resolve, 100)),\n      ]);\n\n      const rankSet = new WeakMap<SolutionScenario, number>();\n      for (let i = 0; i < solutionResult.scenarios.length; i++) {\n        const target = solutionResult.scenarios[i];\n        rankSet.set(target, i);\n      }\n\n      return {\n        solutionResult,\n        rankSet,\n      };\n    },\n    {\n      manual: true,\n      defaultParams: [initialValues],\n    },\n  );\n\n  return (\n    <>\n      <Card style={{ marginBottom: '1rem' }}>\n        <ProForm<QueryParams>\n          formRef={formRef}\n          onFinish={async params => {\n            await runAsync(params);\n          }}\n          // sub=\"寻找队伍方案\"\n          initialValues={initialValues}\n          layout=\"vertical\"\n          submitter={{\n            // render: (_, dom) => <FooterToolbar>{dom}</FooterToolbar>,\n            searchConfig: { submitText: '寻找匹配方案' },\n            render(_, dom) {\n              return (\n                <Space wrap>\n                  {dom}\n                  {data?.solutionResult ? (\n                    <Typography.Text>\n                      已为您找到{' '}\n                      <Typography.Text strong>\n                        {data?.solutionResult.scenarios.length}\n                      </Typography.Text>{' '}\n                      个匹配方案\n                    </Typography.Text>\n                  ) : null}\n                </Space>\n              );\n            },\n          }}\n          loading={loading}\n        >\n          <ProForm.Group>\n            <ProFormRadio.Group\n              name=\"k\"\n              label=\"队伍数量\"\n              rules={[{ required: true }]}\n              options={[\n                { label: '两支队伍', value: 2 },\n                { label: '三支队伍', value: 3 },\n                { label: '四支队伍', value: 4 },\n              ]}\n              allowClear={false}\n              radioType=\"button\"\n            />\n            <ProFormRadio.Group\n              name=\"box\"\n              label=\"Box 匹配\"\n              options={[\n                { label: '全图鉴满突破 Box', value: 'whole' },\n                { label: '我的自定义 Box', value: 'my-box', disabled: true },\n              ]}\n              allowClear={false}\n              radioType=\"button\"\n              rules={[{ required: true }]}\n              extra=\"自定义 Box 匹配暂不支持，无法选中，敬请期待w\"\n            />\n            <ProFormSwitch\n              name={'disalbeAlternative'}\n              label=\"不考虑可替自由位\"\n              tooltip=\"开启后，计算的队伍方案中绝对不会出现重复光灵，满足图鉴大佬的强迫症\"\n            />\n            <ProForm.Group>\n              <ProFormSwitch\n                name=\"enableExclude\"\n                label=\"额外排除光灵\"\n                tooltip=\"排除光灵会忽略可替自由位\"\n              />\n              <ProFormDependency name={['enableExclude']}>\n                {({ enableExclude }) => {\n                  if (enableExclude) {\n                    return <ExcludeAurorianFormList name={'exclude'} />;\n                  }\n                  return null;\n                }}\n              </ProFormDependency>\n            </ProForm.Group>\n          </ProForm.Group>\n        </ProForm>\n      </Card>\n      <List\n        loading={loading}\n        dataSource={data?.solutionResult?.scenarios}\n        pagination={{ align: 'center', defaultPageSize: 5 }}\n        rowKey={sc => sc.copilots.map(c => c.bv).join('')}\n        renderItem={item => {\n          return (\n            <Card\n              title={\n                <>\n                  {data?.rankSet\n                    ? `#${(data.rankSet.get(item) ?? 0) + 1} 匹配方案 `\n                    : null}\n                  {numeral(item.totalScore).format('0,0')}\n                </>\n              }\n              key={item.copilots.map(c => c.bv).join('')}\n              style={{ marginBottom: '1rem' }}\n            >\n              <SolutionScenarioCard solution={item} />\n            </Card>\n          );\n        }}\n      />\n    </>\n  );\n};\n","import { useParams } from '@modern-js/runtime/router';\nimport { PageContainer } from '@ant-design/pro-components';\nimport type { CopilotType } from '@sinsa/schema';\nimport { useMemo } from 'react';\nimport { useRequest } from 'ahooks';\nimport { TermNotFound } from '@/containers/TermNotFound';\nimport { TermChanger } from '@/containers/TermChanger';\nimport { CopilotSolution } from '@/containers/CopilotSolution';\nimport { RoutePath } from '@/components/MyLayout/constants';\n\nconst SolutionsPage: React.FC = () => {\n  const params = useParams<{ term: `${number}` }>();\n\n  const { data, error, loading } = useRequest(\n    () =>\n      fetch(`/api/copilots/${params.term}.json`).then(\n        response =>\n          response.json() as Promise<Record<CopilotType['bv'], CopilotType>>,\n      ),\n    { refreshDeps: [params.term] },\n  );\n\n  const copilots = useMemo(() => Object.values(data ?? []), [data]);\n\n  if (error) {\n    return <TermNotFound />;\n  }\n\n  return (\n    <PageContainer\n      content={<TermChanger pathFn={RoutePath.Solutions} />}\n      title=\"作业匹配\"\n      loading={loading}\n    >\n      <CopilotSolution dataSource={copilots} />\n    </PageContainer>\n  );\n};\n\nexport default SolutionsPage;\n"],"names":["boxWithoutAuroriansInCopilot","myBox","copilot","disalbeAlternative","produce","draft","aurorianInCopilot","aurorian_summaries","is_replaceable","aurorian_name","canUseCopilot","aurorianInMyBox","breakthrough","calculateAllScenariosAndScores","context","k","result","scenarios","stack","currentCopilotIndex","currentScenario","remainingBox","availableBox","count","length","pop","copilots","push","totalScore","reduce","score","next","BigInt","currentCopilot","newRemainingBox","sort","a","b","Number","SolutionScenarioCard","solution","title","request","useCallback","async","data","success","toolbar","useMemo","settings","scroll","x","_jsx","ProTable","showHeader","rowKey","copilotRowKey","columns","copilotsColumns","search","pagination","ghost","ExcludeAurorianFormList","name","props","auroriansOptions","auroriansMap","useModel","AuroriansModel","ProFormList","creatorButtonProps","creatorButtonText","alwaysShowItemLabel","min","children","_jsxs","ProForm","Group","ProFormSelect","label","options","allowClear","showSearch","width","rules","required","ProFormDependency","aurorianName","AurorianCard","sameSize","ProFormSwitch","excludeBreakthroughOnly","targetAurorian","ProFormRate","fieldProps","RarityMapper","rarity","allowHalf","tooltip","initialValues","box","exclude","CopilotSolution","dataSource","WHOLE_BOX","formRef","useRef","loading","runAsync","useRequest","filterBox","params","aurorianInExclude","excludeBreakthrough","solutionResult","Promise","all","resolve","window","setTimeout","rankSet","WeakMap","i","target","set","manual","defaultParams","_Fragment","Card","style","marginBottom","onFinish","layout","submitter","searchConfig","submitText","render","_","dom","Space","wrap","Typography","Text","strong","ProFormRadio","value","radioType","disabled","extra","enableExclude","List","align","defaultPageSize","sc","map","c","bv","join","renderItem","item","get","numeral","format","SolutionsPage","useParams","error","fetch","term","then","response","json","refreshDeps","Object","values","TermNotFound","PageContainer","content","TermChanger","pathFn","RoutePath","Solutions"],"sourceRoot":""}