{"version":3,"file":"static/js/async/solutions/(term)/page.9cd396cb.js","sources":["./src/components/AurorianCard/index.tsx","./src/components/AuroriansTeam/index.tsx","./src/components/CopilotsTable/columns.tsx","./src/components/CopilotsTable/index.tsx","./src/components/ExcludeAurorianFormList/index.tsx","./src/components/SolutionScenarioCard/index.tsx","./src/containers/CopilotSolution.tsx","./src/containers/TermChanger.tsx","./src/containers/TermNotFound.tsx","./src/routes/solutions/[term]/page.tsx","./src/features/backtrack/calculate-all-scenarios-and-scores.ts","./src/features/backtrack/helpers/box-without-aurorians-in-copilot.ts","./src/features/backtrack/helpers/can-use-copilot.ts"],"sourcesContent":["import React, { useEffect, useMemo, useRef } from 'react';\nimport { useModel } from '@modern-js/runtime/model';\nimport { type AurorianType } from '@sinsa/schema';\nimport { Badge, ConfigProvider, Rate } from 'antd';\nimport { clsx } from 'clsx';\nimport styles from './styles.module.less';\nimport { ClassURLMapper, ElementURLMapper, RarityMapper } from './constants';\nimport { AuroriansModel } from '@/models/aurorians';\n\ninterface AurorianCardProps {\n  name: string;\n  breakthrough?: number;\n  isReplaceable?: boolean;\n  sameSize?: boolean;\n}\n\nexport const AurorianCard = React.memo<AurorianCardProps>(\n  ({ name, breakthrough, isReplaceable, sameSize }) => {\n    const [{ auroriansMap }] = useModel(AuroriansModel);\n    const aurorian = useMemo(\n      () => auroriansMap[name] as AurorianType | undefined,\n      [auroriansMap, name],\n    );\n\n    const cardRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n      if (aurorian?.aurorian_name) {\n        import(`@/assets/skins/${aurorian.aurorian_name}.webp`)\n          .then(esm => {\n            if (typeof esm?.default === 'string') {\n              if (cardRef.current) {\n                cardRef.current.style.backgroundImage = `url(${esm.default})`;\n              }\n            }\n          })\n          .catch(() => {\n            // ignore\n          });\n      }\n    }, [aurorian?.aurorian_name]);\n\n    return (\n      <Badge.Ribbon\n        style={{\n          fontSize: '12px',\n          display: isReplaceable ? 'block' : 'none',\n          zIndex: 10000,\n        }}\n        text={isReplaceable ? 'ÂèØÊõø' : undefined}\n      >\n        <div\n          className={clsx(styles.AurorianCard, sameSize && styles.SameSize)}\n          ref={cardRef}\n        >\n          {aurorian?.class && aurorian?.attribute ? (\n            <div\n              className={clsx(\n                styles.MetaContainer,\n                sameSize && styles.SameSizeMeta,\n              )}\n            >\n              <img\n                className={styles.MetaClass}\n                alt={aurorian.class}\n                src={ClassURLMapper[aurorian.class]}\n              />\n              <div className={styles.MetaAttributeContainer}>\n                <img\n                  className={styles.MetaFirstAttribute}\n                  alt={aurorian.attribute}\n                  src={ElementURLMapper[aurorian.attribute]}\n                />\n                {aurorian.secondary_attribute ? (\n                  <img\n                    className={styles.MetaSecondAttribute}\n                    alt={aurorian.secondary_attribute}\n                    src={ElementURLMapper[aurorian.secondary_attribute]}\n                  />\n                ) : null}\n              </div>\n            </div>\n          ) : null}\n          <div className={styles.NameContainer}>\n            <div title={aurorian?.aurorian_name}>\n              {aurorian?.aurorian_cn_name}\n            </div>\n\n            {typeof breakthrough === 'number' && aurorian?.rarity ? (\n              <ConfigProvider\n                theme={{\n                  components: {\n                    Rate: {\n                      starBg: 'white',\n                      starSize: 8,\n                    },\n                  },\n                }}\n              >\n                <Rate\n                  className={styles.BreakThrough}\n                  disabled\n                  value={breakthrough}\n                  count={RarityMapper[aurorian.rarity]}\n                />\n              </ConfigProvider>\n            ) : null}\n          </div>\n        </div>\n      </Badge.Ribbon>\n    );\n  },\n);\n","import type { CopilotType } from '@sinsa/schema';\nimport React from 'react';\nimport { AurorianCard } from '../AurorianCard';\nimport styles from './styles.module.less';\n\ninterface AuroriansTeamProps {\n  aurorianSummaries: CopilotType['aurorian_summaries'];\n}\n\nexport const AuroriansTeam: React.FC<AuroriansTeamProps> = ({\n  aurorianSummaries,\n}) => {\n  return (\n    <div className={styles.AuroriansTeam}>\n      {aurorianSummaries.map(\n        ({ aurorian_name, breakthrough, is_replaceable }) => {\n          return (\n            <AurorianCard\n              key={aurorian_name}\n              name={aurorian_name}\n              breakthrough={breakthrough}\n              isReplaceable={is_replaceable}\n            />\n          );\n        },\n      )}\n    </div>\n  );\n};\n","import type { ProColumns } from '@ant-design/pro-components';\nimport type { CopilotType } from '@sinsa/schema';\nimport { Tooltip, Typography } from 'antd';\nimport { AuroriansTeam } from '../AuroriansTeam';\n\nexport interface TableParams {\n  title?: CopilotType['title'];\n  author?: CopilotType['author'];\n  term?: `${number}`;\n  dataSource?: CopilotType[];\n  score?: [number, undefined] | [number, number] | [undefined, number];\n}\n\nexport const copilotsColumns: ProColumns<CopilotType>[] = [\n  {\n    title: 'ÂÖâÁÅµÈÖçÁΩÆ',\n    dataIndex: 'aurorian_summaries',\n    hideInSearch: true,\n    render(_, entity) {\n      return <AuroriansTeam aurorianSummaries={entity.aurorian_summaries} />;\n    },\n    width: 80 * 5 + 24,\n  },\n  {\n    title: 'ÁªìÁÆóÂàÜÊï∞',\n    dataIndex: 'score',\n    valueType: 'digit',\n    hideInSearch: true,\n    width: 130,\n  },\n  {\n    title: '‰ΩúËÄÖ',\n    dataIndex: 'author',\n    valueType: 'select',\n    hideInSearch: true,\n    ellipsis: true,\n    width: 160,\n    renderText(dom, entity) {\n      return (\n        <>\n          {dom}\n          <Tooltip title={entity.description}>\n            {entity.description ? 'üóí' : null}\n          </Tooltip>\n        </>\n      );\n    },\n  },\n  {\n    title: 'Ê†áÈ¢ò',\n    dataIndex: 'title',\n    ellipsis: true,\n    render(dom, entity) {\n      return (\n        <Typography.Link\n          href={`https://www.bilibili.com/video/${entity.bv}`}\n          target=\"_blank\"\n          title={entity.title}\n        >\n          {entity.title}\n        </Typography.Link>\n      );\n    },\n  },\n  {\n    title: '‰∏ä‰º†Êó∂Èó¥',\n    dataIndex: 'upload_time',\n    valueType: 'dateTime',\n    width: 160,\n    hideInSearch: true,\n  },\n];\n","import { useCallback, useMemo, useRef } from 'react';\nimport type { ActionType } from '@ant-design/pro-components';\nimport { ProTable } from '@ant-design/pro-components';\nimport type { CopilotType } from '@sinsa/schema';\nimport { type TableParams, copilotsColumns } from './columns';\n\ninterface CopilotsTableProps {\n  dataSource: CopilotType[];\n  term?: `${number}`;\n}\n\nexport function copilotRowKey(c: CopilotType) {\n  return c.bv;\n}\n\nconst TABLE_CONST_PROPS = {\n  pagination: {\n    pageSize: 5,\n    size: 'default',\n    position: ['bottomCenter'] as any,\n  },\n  scroll: { x: 'max-content', scrollToFirstRowOnChange: true },\n} as const;\n\nexport const CopilotsTable: React.FC<CopilotsTableProps> = ({\n  dataSource,\n  term,\n}) => {\n  const actionRef = useRef<ActionType>();\n\n  const deps = useMemo(\n    (): TableParams => ({ term, dataSource }),\n    [term, dataSource],\n  );\n\n  const request = useCallback(async (params: TableParams) => {\n    return {\n      data:\n        params.dataSource?.filter(item => {\n          let ok = true;\n          if (params.title) {\n            ok = item.title.includes(params.title);\n          }\n          // min\n          if (typeof params.score?.[0] === 'number') {\n            ok = params.score[0] <= item.score;\n          }\n\n          // max\n          if (typeof params.score?.[1] === 'number') {\n            ok = item.score <= params.score[1];\n          }\n          return ok;\n        }) ?? [],\n      success: true,\n    };\n  }, []);\n\n  return (\n    <ProTable<CopilotType, TableParams>\n      rowKey={copilotRowKey}\n      actionRef={actionRef}\n      columns={copilotsColumns}\n      params={deps}\n      request={request}\n      {...TABLE_CONST_PROPS}\n    />\n  );\n};\n","import {\n  ProForm,\n  ProFormDependency,\n  ProFormList,\n  ProFormRate,\n  ProFormSelect,\n  ProFormSwitch,\n} from '@ant-design/pro-components';\nimport { useModel } from '@modern-js/runtime/model';\nimport { RarityMapper } from '../AurorianCard/constants';\nimport { AurorianCard } from '../AurorianCard';\nimport { AuroriansModel } from '@/models/aurorians';\n\ninterface ExcludeFormListProps {\n  name: string;\n}\n\nexport const ExcludeAurorianFormList: React.FC<ExcludeFormListProps> = ({\n  name,\n  ...props\n}) => {\n  const [{ auroriansOptions, auroriansMap }] = useModel(AuroriansModel);\n  return (\n    <ProFormList\n      {...props}\n      creatorButtonProps={{\n        creatorButtonText: 'Ê∑ªÂä†ÊéíÈô§ÁöÑÂÖâÁÅµ',\n      }}\n      name={name}\n      alwaysShowItemLabel\n      min={1}\n    >\n      {() => {\n        return (\n          <ProForm.Group>\n            <ProFormSelect\n              label=\"ÊéíÈô§ÁöÑÂÖâÁÅµ\"\n              name={'aurorianName'}\n              options={auroriansOptions}\n              allowClear\n              width={'sm'}\n              rules={[{ required: true }]}\n            />\n            <ProFormDependency\n              key=\"excludeBreakthroughOnly\"\n              name={['aurorianName']}\n            >\n              {({ aurorianName }) => {\n                if (aurorianName) {\n                  return <AurorianCard sameSize name={aurorianName} />;\n                }\n                return null;\n              }}\n            </ProFormDependency>\n            <ProFormDependency\n              key=\"excludeBreakthroughOnly\"\n              name={['aurorianName']}\n            >\n              {({ aurorianName }) => {\n                if (aurorianName) {\n                  return (\n                    <ProFormSwitch\n                      label=\"‰ªÖÊéíÈô§Á™ÅÁ†¥\"\n                      name=\"excludeBreakthroughOnly\"\n                    />\n                  );\n                }\n                return null;\n              }}\n            </ProFormDependency>\n\n            <ProFormDependency\n              key=\"excludeBreakthrough\"\n              name={['aurorianName', 'excludeBreakthroughOnly']}\n            >\n              {({ aurorianName, excludeBreakthroughOnly }) => {\n                const targetAurorian = auroriansMap[aurorianName];\n                if (excludeBreakthroughOnly && targetAurorian) {\n                  return (\n                    <ProFormRate\n                      name=\"excludeBreakthrough\"\n                      label=\"ÊéíÈô§Á™ÅÁ†¥Êï∞\"\n                      fieldProps={{\n                        count: RarityMapper[targetAurorian.rarity],\n                        allowHalf: false,\n                      }}\n                      tooltip=\"Â§ß‰∫éÁ≠â‰∫éÊ≠§Á™ÅÁ†¥Êï∞ÁöÑÂÖâÁÅµ‰ºöË¢´ÊéíÈô§Ôºå‰ΩÜ‰∏ç‰ºöÊéíÈô§Èõ∂Á†¥ÁöÑÊ≠§ÂÖâÁÅµ\"\n                      rules={[{ required: true }]}\n                    />\n                  );\n                }\n                return null;\n              }}\n            </ProFormDependency>\n          </ProForm.Group>\n        );\n      }}\n    </ProFormList>\n  );\n};\n","import { ProTable } from '@ant-design/pro-components';\nimport { CopilotType } from '@sinsa/schema';\nimport { useCallback, useMemo } from 'react';\nimport { produce } from 'immer';\nimport { copilotRowKey } from '../CopilotsTable';\nimport { copilotsColumns } from '../CopilotsTable/columns';\nimport type { SolutionScenario } from '@/features/backtrack/types';\n\ninterface SolutionScenarioCardProps {\n  solution: SolutionScenario;\n  title?: string;\n}\n\nexport const SolutionScenarioCard: React.FC<SolutionScenarioCardProps> = ({\n  solution,\n  title,\n}) => {\n  const request = useCallback(async () => {\n    return {\n      data: produce(solution.copilots, draft => {\n        draft.sort((a, b) => Number(b.score - a.score));\n      }),\n      success: true,\n    };\n  }, []);\n\n  const toolbar = useMemo(() => ({ title, settings: [] }), [title]);\n\n  const scroll = useMemo(() => ({ x: 'max-content' }), []);\n\n  return (\n    <ProTable<CopilotType>\n      showHeader={true}\n      toolbar={toolbar}\n      rowKey={copilotRowKey}\n      columns={copilotsColumns}\n      request={request}\n      search={false}\n      pagination={false}\n      scroll={scroll}\n      ghost\n    />\n  );\n};\n","import {\n  ProForm,\n  ProFormDependency,\n  ProFormInstance,\n  ProFormRadio,\n  ProFormSwitch,\n} from '@ant-design/pro-components';\nimport { CopilotType } from '@sinsa/schema';\nimport { Card, List, Space, Typography } from 'antd';\nimport { useModel } from '@modern-js/runtime/model';\nimport numeral from 'numeral';\nimport { produce } from 'immer';\nimport { useRequest } from 'ahooks';\nimport { useRef, useState } from 'react';\nimport { calculateAllScenariosAndScores } from '@/features/backtrack/calculate-all-scenarios-and-scores';\nimport { AuroriansModel } from '@/models/aurorians';\nimport { SolutionScenarioCard } from '@/components/SolutionScenarioCard';\nimport { ExcludeAurorianFormList } from '@/components/ExcludeAurorianFormList';\nimport type { SolutionScenario } from '@/features/backtrack/types';\n\ninterface CopilotSolutionProps {\n  dataSource: CopilotType[];\n}\n\ninterface QueryParams {\n  k: number;\n  box: 'whole' | 'my-box';\n  disalbeAlternative?: boolean;\n  enableExclude?: boolean;\n  exclude?: {\n    aurorianName: string;\n    excludeBreakthrough?: number;\n    excludeBreakthroughOnly?: boolean;\n  }[];\n}\n\nconst initialValues = { k: 3, box: 'whole', exclude: [{}] as any[] } as const;\n\nexport const CopilotSolution: React.FC<CopilotSolutionProps> = ({\n  dataSource,\n}) => {\n  const [{ WHOLE_BOX }] = useModel(AuroriansModel);\n\n  const formRef = useRef<ProFormInstance>();\n  const [current, setCurrent] = useState(1);\n  const inViewRef = useRef<HTMLDivElement>(null);\n\n  const { data, loading, runAsync } = useRequest(\n    async (params: QueryParams) => {\n      let filterBox = WHOLE_BOX.aurorian_summaries;\n      if (params.exclude) {\n        filterBox = produce(WHOLE_BOX.aurorian_summaries, draft => {\n          for (const aurorianInExclude of params.exclude!) {\n            if (!aurorianInExclude.excludeBreakthroughOnly) {\n              delete draft[aurorianInExclude.aurorianName];\n            } else if (\n              typeof aurorianInExclude.excludeBreakthrough === 'number' &&\n              aurorianInExclude.excludeBreakthrough >= 1\n            ) {\n              draft[aurorianInExclude.aurorianName].breakthrough =\n                aurorianInExclude.excludeBreakthrough - 1;\n            }\n          }\n        });\n      }\n\n      const [solutionResult] = await Promise.all([\n        Promise.resolve(\n          calculateAllScenariosAndScores(\n            {\n              copilots: dataSource,\n              availableBox: filterBox,\n            },\n            params.k,\n            { disalbeAlternative: params.disalbeAlternative },\n          ),\n        ),\n        new Promise<void>(resolve => window.setTimeout(resolve, 100)),\n      ]);\n\n      const rankSet = new WeakMap<SolutionScenario, number>();\n      for (let i = 0; i < solutionResult.scenarios.length; i++) {\n        const target = solutionResult.scenarios[i];\n        rankSet.set(target, i);\n      }\n\n      gtag('event', 'get_solution_result', {\n        k: params.k,\n        box: params.box,\n        disalbeAlternative: params.disalbeAlternative,\n        enableExclude: params.enableExclude,\n        solutions_length: solutionResult.scenarios.length,\n        exclude: params.exclude\n          ?.map(\n            xclude =>\n              `${xclude.aurorianName}_${\n                (xclude.excludeBreakthroughOnly &&\n                  xclude.excludeBreakthrough) ||\n                ''\n              }`,\n          )\n          .join(','),\n      });\n\n      return {\n        solutionResult,\n        rankSet,\n      };\n    },\n    {\n      manual: true,\n      defaultParams: [initialValues],\n    },\n  );\n\n  return (\n    <>\n      <Card style={{ marginBottom: '1rem' }}>\n        <ProForm<QueryParams>\n          formRef={formRef}\n          onFinish={async params => {\n            await runAsync(params);\n            setCurrent(1);\n          }}\n          // sub=\"ÂØªÊâæÈòü‰ºçÊñπÊ°à\"\n          initialValues={initialValues}\n          layout=\"vertical\"\n          submitter={{\n            // render: (_, dom) => <FooterToolbar>{dom}</FooterToolbar>,\n            searchConfig: { submitText: 'ÂØªÊâæÂåπÈÖçÊñπÊ°à' },\n            render(_, dom) {\n              return (\n                <Space wrap>\n                  {dom}\n                  {data?.solutionResult ? (\n                    <Typography.Text>\n                      Â∑≤‰∏∫ÊÇ®ÊâæÂà∞{' '}\n                      <Typography.Text strong>\n                        {data?.solutionResult.scenarios.length}\n                      </Typography.Text>{' '}\n                      ‰∏™ÂåπÈÖçÊñπÊ°à\n                    </Typography.Text>\n                  ) : null}\n                </Space>\n              );\n            },\n          }}\n          loading={loading}\n        >\n          <ProForm.Group>\n            <ProFormRadio.Group\n              name=\"k\"\n              label=\"Èòü‰ºçÊï∞Èáè\"\n              rules={[{ required: true }]}\n              options={[\n                { label: '‰∏§ÊîØÈòü‰ºç', value: 2 },\n                { label: '‰∏âÊîØÈòü‰ºç', value: 3 },\n                { label: 'ÂõõÊîØÈòü‰ºç', value: 4 },\n              ]}\n              allowClear={false}\n              radioType=\"button\"\n            />\n\n            <ProFormRadio.Group\n              name=\"box\"\n              label=\"Box ÂåπÈÖç\"\n              options={[\n                { label: 'ÂÖ®ÂõæÈâ¥Êª°Á™ÅÁ†¥ Box', value: 'whole' },\n                { label: 'ÊàëÁöÑËá™ÂÆö‰πâ Box', value: 'my-box', disabled: true },\n              ]}\n              allowClear={false}\n              radioType=\"button\"\n              rules={[{ required: true }]}\n              extra=\"Ëá™ÂÆö‰πâ Box ÂåπÈÖçÊöÇ‰∏çÊîØÊåÅÔºåÊó†Ê≥ïÈÄâ‰∏≠ÔºåÊï¨ËØ∑ÊúüÂæÖw\"\n            />\n            <ProFormSwitch\n              name={'disalbeAlternative'}\n              label=\"‰∏çËÄÉËôëÂèØÊõøËá™Áî±‰Ωç\"\n              tooltip=\"ÂºÄÂêØÂêéÔºåËÆ°ÁÆóÁöÑÈòü‰ºçÊñπÊ°à‰∏≠ÁªùÂØπ‰∏ç‰ºöÂá∫Áé∞ÈáçÂ§çÂÖâÁÅµÔºåÊª°Ë∂≥ÂõæÈâ¥Â§ß‰Ω¨ÁöÑÂº∫Ëø´Áóá\"\n            />\n            <ProForm.Group>\n              <ProFormSwitch\n                name=\"enableExclude\"\n                label=\"È¢ùÂ§ñÊéíÈô§ÂÖâÁÅµ\"\n                tooltip=\"ÊéíÈô§ÂÖâÁÅµ‰ºöÂøΩÁï•ÂèØÊõøËá™Áî±‰Ωç\"\n              />\n              <ProFormDependency name={['enableExclude']}>\n                {({ enableExclude }) => {\n                  if (enableExclude) {\n                    return <ExcludeAurorianFormList name={'exclude'} />;\n                  }\n                  return null;\n                }}\n              </ProFormDependency>\n            </ProForm.Group>\n          </ProForm.Group>\n        </ProForm>\n      </Card>\n      <div ref={inViewRef} />\n      <List\n        loading={loading}\n        dataSource={data?.solutionResult?.scenarios}\n        pagination={{\n          align: 'center',\n          defaultPageSize: 5,\n          current,\n          onChange(page) {\n            setCurrent(page);\n            window.scrollTo({\n              top: inViewRef.current!.offsetTop,\n              behavior: 'smooth',\n            });\n          },\n          showSizeChanger: false,\n        }}\n        rowKey={sc => sc.copilots.map(c => c.bv).join('')}\n        renderItem={item => {\n          return (\n            <Card\n              title={\n                <>\n                  {data?.rankSet\n                    ? `#${(data.rankSet.get(item) ?? 0) + 1} ÂåπÈÖçÊñπÊ°à `\n                    : null}\n                  {numeral(item.totalScore).format('0,0')}\n                </>\n              }\n              key={item.copilots.map(c => c.bv).join('')}\n              style={{ marginBottom: '1rem' }}\n            >\n              <SolutionScenarioCard solution={item} />\n            </Card>\n          );\n        }}\n      />\n    </>\n  );\n};\n","import { useModel } from '@modern-js/runtime/model';\nimport { Select } from 'antd';\nimport { useNavigate, useParams } from '@modern-js/runtime/router';\nimport { TermsModel } from '@/models/terms';\nimport { RoutePath } from '@/components/MyLayout/constants';\n\nexport const TermChanger: React.FC<{\n  pathFn: typeof RoutePath.Copilots | typeof RoutePath.Solutions;\n}> = ({ pathFn }) => {\n  const params = useParams<{ term: `${number}` }>();\n  const [terms] = useModel(TermsModel);\n  const navigate = useNavigate();\n\n  return (\n    <Select\n      value={params.term && Number.parseInt(params.term, 10)}\n      options={terms.termsOptions}\n      placeholder=\"ËçíÂÖ∏ÊúüÊï∞\"\n      onChange={(nextTerm: number) => {\n        navigate(pathFn(nextTerm));\n      }}\n    />\n  );\n};\n","import { useModel } from '@modern-js/runtime/model';\nimport { Button, Result } from 'antd';\nimport { Link } from '@modern-js/runtime/router';\nimport { TermsModel } from '@/models/terms';\nimport { RoutePath } from '@/components/MyLayout/constants';\n\nexport const TermNotFound: React.FC = () => {\n  const [{ firstTerm }] = useModel(TermsModel);\n\n  return (\n    <Result\n      status=\"404\"\n      title=\"ËçíÂÖ∏‰Ωú‰∏ö‰∏çËßÅ‰∫Ü\"\n      subTitle=\"Ê£ÄÊü•ÈìæÊé•ÊòØÂê¶Ê≠£Á°ÆÊàñËøîÂõûÊúÄËøëËçíÂÖ∏‰Ωú‰∏ö\"\n      extra={\n        firstTerm ? (\n          <Link to={RoutePath.Copilots(firstTerm.term)}>\n            <Button type=\"primary\">ËøîÂõûÊúÄËøë‰Ωú‰∏ö</Button>\n          </Link>\n        ) : (\n          <Link to={RoutePath.Home}>\n            <Button type=\"primary\">ËøîÂõûÈ¶ñÈ°µ</Button>\n          </Link>\n        )\n      }\n    />\n  );\n};\n","import { useParams } from '@modern-js/runtime/router';\nimport { PageContainer } from '@ant-design/pro-components';\nimport type { CopilotType } from '@sinsa/schema';\nimport { useMemo } from 'react';\nimport { useRequest } from 'ahooks';\nimport { TermNotFound } from '@/containers/TermNotFound';\nimport { TermChanger } from '@/containers/TermChanger';\nimport { CopilotSolution } from '@/containers/CopilotSolution';\nimport { RoutePath } from '@/components/MyLayout/constants';\n\nconst SolutionsPage: React.FC = () => {\n  const params = useParams<{ term: `${number}` }>();\n\n  const { data, error, loading } = useRequest(\n    () =>\n      fetch(`/api/copilots/${params.term}.json`).then(\n        response =>\n          response.json() as Promise<Record<CopilotType['bv'], CopilotType>>,\n      ),\n    { refreshDeps: [params.term] },\n  );\n\n  const copilots = useMemo(() => Object.values(data ?? []), [data]);\n\n  if (error) {\n    return <TermNotFound />;\n  }\n\n  return (\n    <PageContainer\n      content={<TermChanger pathFn={RoutePath.Solutions} />}\n      title=\"‰Ωú‰∏öÂåπÈÖç\"\n      loading={loading}\n    >\n      <CopilotSolution dataSource={copilots} />\n    </PageContainer>\n  );\n};\n\nexport default SolutionsPage;\n","import type { CopilotType } from '@sinsa/schema';\nimport { boxWithoutAuroriansInCopilot } from './helpers/box-without-aurorians-in-copilot';\nimport { canUseCopilot } from './helpers/can-use-copilot';\nimport type { CalcOptions, SolutionContext, SolutionResult } from './types';\n\ninterface StackContext {\n  currentCopilotIndex: number;\n  currentScenario: CopilotType[];\n  remainingBox: SolutionContext['availableBox'];\n  count: number;\n}\n\n/**\n * ËÆ°ÁÆóÊâÄÊúâÁöÑÈòü‰ºçÊñπÊ°àÂíåÂÖ∑‰ΩìÂàÜÊï∞\n * @param context Ëß£ÂÜ≥ÊñπÊ°à‰∏ä‰∏ãÊñá\n * @param k Èòü‰ºçÊï∞Èáè\n */\nexport function calculateAllScenariosAndScores(\n  context: SolutionContext,\n  k = 3,\n  { disalbeAlternative }: CalcOptions = {},\n): SolutionResult {\n  const result: SolutionResult = {\n    scenarios: [],\n  };\n\n  const stack: StackContext[] = [\n    {\n      currentCopilotIndex: 0,\n      currentScenario: [],\n      remainingBox: context.availableBox,\n      count: k,\n    },\n  ];\n\n  while (stack.length > 0) {\n    const { currentCopilotIndex, currentScenario, remainingBox, count } =\n      stack.pop()!;\n\n    if (count === 0 || currentCopilotIndex === context.copilots.length) {\n      if (currentScenario.length >= k) {\n        result.scenarios.push({\n          copilots: [...currentScenario],\n          totalScore: currentScenario.reduce(\n            (score, next) => score + BigInt(next.score),\n            BigInt(0),\n          ),\n        });\n      }\n    } else {\n      const currentCopilot = context.copilots[currentCopilotIndex];\n      if (canUseCopilot(remainingBox, currentCopilot, { disalbeAlternative })) {\n        const newRemainingBox = boxWithoutAuroriansInCopilot(\n          remainingBox,\n          currentCopilot,\n          { disalbeAlternative },\n        );\n        stack.push({\n          currentCopilotIndex: currentCopilotIndex + 1,\n          currentScenario: [...currentScenario, currentCopilot],\n          remainingBox: newRemainingBox,\n          count: count - 1,\n        });\n      }\n\n      stack.push({\n        currentCopilotIndex: currentCopilotIndex + 1,\n        currentScenario,\n        remainingBox,\n        count,\n      });\n    }\n  }\n\n  result.scenarios.sort((a, b) => Number(b.totalScore - a.totalScore));\n\n  return result;\n}\n","import type { CopilotType, MyBoxType } from '@sinsa/schema';\nimport { produce } from 'immer';\nimport { CalcOptions } from '../types';\n\nexport function boxWithoutAuroriansInCopilot(\n  myBox: MyBoxType['aurorian_summaries'],\n  copilot: CopilotType,\n  { disalbeAlternative }: CalcOptions,\n) {\n  return produce(myBox, draft => {\n    for (const aurorianInCopilot of copilot.aurorian_summaries) {\n      // 0. Â¶ÇÊûú‰Ωú‰∏ö‰∏≠ÁöÑÂÖâÁÅµÊú¨Ë∫´ÊòØÂèØÊõøÊç¢ÁöÑÔºåÂàôË∑≥ËøáÊ≠§ÂÖâÁÅµÂà§Êñ≠\n      if (!disalbeAlternative && aurorianInCopilot.is_replaceable) {\n        continue;\n      }\n\n      delete draft[aurorianInCopilot.aurorian_name];\n    }\n  });\n}\n","import type {\n  CopilotType,\n  MyBoxType,\n  AurorianSummaryType,\n} from '@sinsa/schema';\nimport { CalcOptions } from '../types';\n\n/**\n * ÊàëÁöÑ Box ËÉΩÂê¶ÊäÑËøô‰∏™‰Ωú‰∏ö\n * @param copilot ‰Ωú‰∏ö\n * @param myBox ÊàëÁöÑ Box\n * @returns ÊàëÁöÑ Box ËÉΩÂê¶ÊäÑËøô‰∏™‰Ωú‰∏ö\n */\nexport function canUseCopilot(\n  myBox: MyBoxType['aurorian_summaries'],\n  copilot: CopilotType,\n  { disalbeAlternative }: CalcOptions,\n): boolean {\n  for (const aurorianInCopilot of copilot.aurorian_summaries) {\n    // 0. Â¶ÇÊûú‰Ωú‰∏ö‰∏≠ÁöÑÂÖâÁÅµÊú¨Ë∫´ÊòØÂèØÊõøÊç¢ÁöÑÔºåÂàôË∑≥ËøáÊ≠§ÂÖâÁÅµÂà§Êñ≠\n    if (!disalbeAlternative && aurorianInCopilot.is_replaceable) {\n      continue;\n    }\n\n    const aurorianInMyBox = myBox[aurorianInCopilot.aurorian_name] as\n      | AurorianSummaryType\n      | undefined;\n\n    // 1. ÂÖâÁÅµÊú¨Ë∫´‰∏çÂ≠òÂú®‰∫éÊàëÁöÑ box\n    if (!aurorianInMyBox) {\n      return false;\n    }\n\n    // 2. Â¶ÇÊûúÊàëÁöÑ box ÂÖâÁÅµÁ™ÅÁ†¥‰Ωé‰∫é‰Ωú‰∏öË¶ÅÊ±ÇÁ™ÅÁ†¥\n    if (aurorianInMyBox.breakthrough < aurorianInCopilot.breakthrough) {\n      return false;\n    }\n  }\n\n  return true;\n}\n"],"names":["AurorianCard","name","breakthrough","isReplaceable","sameSize","auroriansMap","useModel","AuroriansModel","aurorian","useMemo","cardRef","useRef","useEffect","aurorian_name","then","esm","default","current","style","backgroundImage","catch","Badge","fontSize","display","zIndex","text","undefined","className","clsx","ref","class","attribute","alt","src","ClassURLMapper","ElementURLMapper","secondary_attribute","title","aurorian_cn_name","rarity","ConfigProvider","theme","components","Rate","starBg","starSize","disabled","value","count","RarityMapper","AuroriansTeam","aurorianSummaries","map","is_replaceable","copilotsColumns","dataIndex","hideInSearch","render","_","entity","aurorian_summaries","width","valueType","ellipsis","renderText","dom","Tooltip","description","Typography","href","bv","target","copilotRowKey","c","TABLE_CONST_PROPS","pagination","pageSize","size","position","scroll","x","scrollToFirstRowOnChange","CopilotsTable","dataSource","term","actionRef","deps","request","useCallback","params","data","filter","item","ok","includes","score","success","ProTable","rowKey","columns","ExcludeAurorianFormList","props","auroriansOptions","ProFormList","creatorButtonProps","creatorButtonText","alwaysShowItemLabel","min","ProForm","ProFormSelect","label","options","allowClear","rules","required","ProFormDependency","aurorianName","ProFormSwitch","excludeBreakthroughOnly","targetAurorian","ProFormRate","fieldProps","allowHalf","tooltip","SolutionScenarioCard","solution","produce","copilots","draft","sort","a","b","Number","toolbar","settings","showHeader","search","ghost","initialValues","k","box","exclude","CopilotSolution","WHOLE_BOX","formRef","setCurrent","useState","inViewRef","loading","runAsync","useRequest","filterBox","aurorianInExclude","excludeBreakthrough","solutionResult","Promise","all","resolve","calculateAllScenariosAndScores","availableBox","disalbeAlternative","window","setTimeout","rankSet","WeakMap","i","scenarios","length","set","gtag","enableExclude","solutions_length","xclude","join","manual","defaultParams","Card","marginBottom","onFinish","layout","submitter","searchConfig","submitText","Space","wrap","strong","ProFormRadio","radioType","extra","List","align","defaultPageSize","onChange","page","scrollTo","top","offsetTop","behavior","showSizeChanger","sc","renderItem","get","totalScore","format","TermChanger","pathFn","useParams","terms","TermsModel","navigate","useNavigate","Select","parseInt","termsOptions","placeholder","nextTerm","TermNotFound","firstTerm","Result","status","subTitle","Link","to","RoutePath","Button","type","error","fetch","response","json","refreshDeps","Object","values","PageContainer","content","context","result","stack","currentCopilotIndex","currentScenario","remainingBox","pop","push","reduce","next","BigInt","currentCopilot","canUseCopilot","newRemainingBox","boxWithoutAuroriansInCopilot","myBox","copilot","aurorianInCopilot","aurorianInMyBox"],"mappings":"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"}