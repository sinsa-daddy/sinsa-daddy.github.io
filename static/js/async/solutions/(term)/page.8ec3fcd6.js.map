{"version":3,"file":"static/js/async/solutions/(term)/page.8ec3fcd6.js","mappings":"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","sources":["webpack://@sinsa/web/./src/components/AurorianCard/styles.module.less","webpack://@sinsa/web/./src/components/AurorianCard/index.tsx","webpack://@sinsa/web/./src/components/AuroriansTeam/styles.module.less","webpack://@sinsa/web/./src/components/AuroriansTeam/index.tsx","webpack://@sinsa/web/./src/components/CopilotsTable/columns.tsx","webpack://@sinsa/web/./src/components/CopilotsTable/index.tsx","webpack://@sinsa/web/./src/containers/TermChanger.tsx","webpack://@sinsa/web/./src/containers/TermNotFound.tsx","webpack://@sinsa/web/./src/features/backtrack/helpers/box-without-aurorians-in-copilot.ts","webpack://@sinsa/web/./src/features/backtrack/helpers/can-use-copilot.ts","webpack://@sinsa/web/./src/features/backtrack/calculate-all-scenarios-and-scores.ts","webpack://@sinsa/web/./src/components/SolutionScenarioCard/index.tsx","webpack://@sinsa/web/./src/components/ExcludeAurorianFormList/index.tsx","webpack://@sinsa/web/./src/containers/CopilotSolution.tsx","webpack://@sinsa/web/./src/routes/solutions/[term]/page.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"AurorianCard\":\"AurorianCard-Xue7wW\",\"aurorianCard\":\"AurorianCard-Xue7wW\",\"SameSize\":\"SameSize-ttH5Jw\",\"sameSize\":\"SameSize-ttH5Jw\",\"Skin\":\"Skin-ZCSfLL\",\"skin\":\"Skin-ZCSfLL\",\"BlackContainer\":\"BlackContainer-KqzHeu\",\"blackContainer\":\"BlackContainer-KqzHeu\",\"MetaContainer\":\"MetaContainer-VBs_Be\",\"metaContainer\":\"MetaContainer-VBs_Be\",\"SameSizeMeta\":\"SameSizeMeta-jxMufu\",\"sameSizeMeta\":\"SameSizeMeta-jxMufu\",\"MetaAttributeContainer\":\"MetaAttributeContainer-oaQn6c\",\"metaAttributeContainer\":\"MetaAttributeContainer-oaQn6c\",\"MetaClass\":\"MetaClass-oogC_v\",\"metaClass\":\"MetaClass-oogC_v\",\"MetaFirstAttribute\":\"MetaFirstAttribute-bRrn32\",\"metaFirstAttribute\":\"MetaFirstAttribute-bRrn32\",\"MetaSecondAttribute\":\"MetaSecondAttribute-C0kSzr\",\"metaSecondAttribute\":\"MetaSecondAttribute-C0kSzr\",\"NameContainer\":\"NameContainer-zUDWby\",\"nameContainer\":\"NameContainer-zUDWby\",\"BreakThrough\":\"BreakThrough-eMpTUR\",\"breakThrough\":\"BreakThrough-eMpTUR\"};","import React, { useEffect, useMemo, useRef } from 'react';\nimport { useModel } from '@modern-js/runtime/model';\nimport { type AurorianType } from '@sinsa/schema';\nimport { Badge, ConfigProvider, Rate } from 'antd';\nimport { clsx } from 'clsx';\nimport styles from './styles.module.less';\nimport { ClassURLMapper, ElementURLMapper, RarityMapper } from './constants';\nimport { AuroriansModel } from '@/models/aurorians';\n\ninterface AurorianCardProps {\n  name: string;\n  breakthrough?: number;\n  isReplaceable?: boolean;\n  sameSize?: boolean;\n}\n\nexport const AurorianCard = React.memo<AurorianCardProps>(\n  ({ name, breakthrough, isReplaceable, sameSize }) => {\n    const [{ auroriansMap }] = useModel(AuroriansModel);\n    const aurorian = useMemo(\n      () => auroriansMap[name] as AurorianType | undefined,\n      [auroriansMap, name],\n    );\n\n    const cardRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n      if (aurorian?.aurorian_name) {\n        import(`@/assets/skins/${aurorian.aurorian_name}.webp`)\n          .then(esm => {\n            if (typeof esm?.default === 'string') {\n              if (cardRef.current) {\n                cardRef.current.style.backgroundImage = `url(${esm.default})`;\n              }\n            }\n          })\n          .catch(() => {\n            // ignore\n          });\n      }\n    }, [aurorian?.aurorian_name]);\n\n    return (\n      <Badge.Ribbon\n        style={{\n          fontSize: '12px',\n          display: isReplaceable ? 'block' : 'none',\n          zIndex: 10000,\n        }}\n        text={isReplaceable ? '可替' : undefined}\n      >\n        <div\n          className={clsx(styles.AurorianCard, sameSize && styles.SameSize)}\n          ref={cardRef}\n        >\n          {aurorian?.class && aurorian?.attribute ? (\n            <div\n              className={clsx(\n                styles.MetaContainer,\n                sameSize && styles.SameSizeMeta,\n              )}\n            >\n              <img\n                className={styles.MetaClass}\n                alt={aurorian.class}\n                src={ClassURLMapper[aurorian.class]}\n              />\n              <div className={styles.MetaAttributeContainer}>\n                <img\n                  className={styles.MetaFirstAttribute}\n                  alt={aurorian.attribute}\n                  src={ElementURLMapper[aurorian.attribute]}\n                />\n                {aurorian.secondary_attribute ? (\n                  <img\n                    className={styles.MetaSecondAttribute}\n                    alt={aurorian.secondary_attribute}\n                    src={ElementURLMapper[aurorian.secondary_attribute]}\n                  />\n                ) : null}\n              </div>\n            </div>\n          ) : null}\n          <div className={styles.NameContainer}>\n            <div title={aurorian?.aurorian_name}>\n              {aurorian?.aurorian_cn_name}\n            </div>\n\n            {typeof breakthrough === 'number' && aurorian?.rarity ? (\n              <ConfigProvider\n                theme={{\n                  components: {\n                    Rate: {\n                      starBg: 'white',\n                      starSize: 8,\n                    },\n                  },\n                }}\n              >\n                <Rate\n                  className={styles.BreakThrough}\n                  disabled\n                  value={breakthrough}\n                  count={RarityMapper[aurorian.rarity]}\n                />\n              </ConfigProvider>\n            ) : null}\n          </div>\n        </div>\n      </Badge.Ribbon>\n    );\n  },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"AuroriansTeam\":\"AuroriansTeam-bW_gmF\",\"auroriansTeam\":\"AuroriansTeam-bW_gmF\"};","import type { CopilotType } from '@sinsa/schema';\nimport React from 'react';\nimport { AurorianCard } from '../AurorianCard';\nimport styles from './styles.module.less';\n\ninterface AuroriansTeamProps {\n  aurorianSummaries: CopilotType['aurorian_summaries'];\n}\n\nexport const AuroriansTeam: React.FC<AuroriansTeamProps> = ({\n  aurorianSummaries,\n}) => {\n  return (\n    <div className={styles.AuroriansTeam}>\n      {aurorianSummaries.map(\n        ({ aurorian_name, breakthrough, is_replaceable }) => {\n          return (\n            <AurorianCard\n              key={aurorian_name}\n              name={aurorian_name}\n              breakthrough={breakthrough}\n              isReplaceable={is_replaceable}\n            />\n          );\n        },\n      )}\n    </div>\n  );\n};\n","import type { ProColumns } from '@ant-design/pro-components';\nimport type { CopilotType } from '@sinsa/schema';\nimport { Tooltip, Typography } from 'antd';\nimport { AuroriansTeam } from '../AuroriansTeam';\n\nexport interface TableParams {\n  title?: CopilotType['title'];\n  author?: CopilotType['author'];\n  term?: `${number}`;\n  dataSource?: CopilotType[];\n  score?: [number, undefined] | [number, number] | [undefined, number];\n}\n\nexport const copilotsColumns: ProColumns<CopilotType>[] = [\n  {\n    title: '光灵配置',\n    dataIndex: 'aurorian_summaries',\n    hideInSearch: true,\n    render(_, entity) {\n      return <AuroriansTeam aurorianSummaries={entity.aurorian_summaries} />;\n    },\n    width: 80 * 5 + 24,\n  },\n  {\n    title: '结算分数',\n    dataIndex: 'score',\n    valueType: 'digit',\n    hideInSearch: true,\n    width: 130,\n  },\n  {\n    title: '作者',\n    dataIndex: 'author',\n    valueType: 'select',\n    hideInSearch: true,\n    ellipsis: true,\n    width: 160,\n    renderText(dom, entity) {\n      return (\n        <>\n          {dom}\n          <Tooltip title={entity.description}>\n            {entity.description ? '🗒' : null}\n          </Tooltip>\n        </>\n      );\n    },\n  },\n  {\n    title: '标题',\n    dataIndex: 'title',\n    ellipsis: true,\n    render(dom, entity) {\n      return (\n        <Typography.Link\n          href={`https://b23.tv/${entity.bv}`}\n          target=\"_blank\"\n          title={entity.title}\n        >\n          {entity.title}\n        </Typography.Link>\n      );\n    },\n  },\n  {\n    title: '上传时间',\n    dataIndex: 'upload_time',\n    valueType: 'dateTime',\n    width: 160,\n    hideInSearch: true,\n  },\n];\n","import { useCallback, useMemo, useRef } from 'react';\nimport type { ActionType } from '@ant-design/pro-components';\nimport { ProTable } from '@ant-design/pro-components';\nimport type { CopilotType } from '@sinsa/schema';\nimport { type TableParams, copilotsColumns } from './columns';\n\ninterface CopilotsTableProps {\n  dataSource: CopilotType[];\n  term?: `${number}`;\n}\n\nexport function copilotRowKey(c: CopilotType) {\n  return c.bv;\n}\n\nconst TABLE_CONST_PROPS = {\n  pagination: {\n    pageSize: 5,\n    size: 'default',\n    position: ['bottomCenter'] as any,\n  },\n  scroll: { x: 'max-content', scrollToFirstRowOnChange: true },\n} as const;\n\nexport const CopilotsTable: React.FC<CopilotsTableProps> = ({\n  dataSource,\n  term,\n}) => {\n  const actionRef = useRef<ActionType>();\n\n  const deps = useMemo(\n    (): TableParams => ({ term, dataSource }),\n    [term, dataSource],\n  );\n\n  const request = useCallback(async (params: TableParams) => {\n    return {\n      data:\n        params.dataSource?.filter(item => {\n          let ok = true;\n          if (params.title) {\n            ok = item.title.includes(params.title);\n          }\n          // min\n          if (typeof params.score?.[0] === 'number') {\n            ok = params.score[0] <= item.score;\n          }\n\n          // max\n          if (typeof params.score?.[1] === 'number') {\n            ok = item.score <= params.score[1];\n          }\n          return ok;\n        }) ?? [],\n      success: true,\n    };\n  }, []);\n\n  return (\n    <ProTable<CopilotType, TableParams>\n      rowKey={copilotRowKey}\n      actionRef={actionRef}\n      columns={copilotsColumns}\n      params={deps}\n      request={request}\n      {...TABLE_CONST_PROPS}\n    />\n  );\n};\n","import { useModel } from '@modern-js/runtime/model';\nimport { Select } from 'antd';\nimport { useNavigate, useParams } from '@modern-js/runtime/router';\nimport { TermsModel } from '@/models/terms';\nimport { RoutePath } from '@/components/MyLayout/constants';\n\nexport const TermChanger: React.FC<{\n  pathFn: typeof RoutePath.Copilots | typeof RoutePath.Solutions;\n}> = ({ pathFn }) => {\n  const params = useParams<{ term: `${number}` }>();\n  const [terms] = useModel(TermsModel);\n  const navigate = useNavigate();\n\n  return (\n    <Select\n      value={params.term && Number.parseInt(params.term, 10)}\n      options={terms.termsOptions}\n      placeholder=\"荒典期数\"\n      onChange={(nextTerm: number) => {\n        navigate(pathFn(nextTerm));\n      }}\n    />\n  );\n};\n","import { useModel } from '@modern-js/runtime/model';\nimport { Button, Result } from 'antd';\nimport { Link } from '@modern-js/runtime/router';\nimport { TermsModel } from '@/models/terms';\nimport { RoutePath } from '@/components/MyLayout/constants';\n\nexport const TermNotFound: React.FC = () => {\n  const [{ firstTerm }] = useModel(TermsModel);\n\n  return (\n    <Result\n      status=\"404\"\n      title=\"荒典作业不见了\"\n      subTitle=\"检查链接是否正确或返回最近荒典作业\"\n      extra={\n        firstTerm ? (\n          <Link to={RoutePath.Copilots(firstTerm.term)}>\n            <Button type=\"primary\">返回最近作业</Button>\n          </Link>\n        ) : (\n          <Link to={RoutePath.Home}>\n            <Button type=\"primary\">返回首页</Button>\n          </Link>\n        )\n      }\n    />\n  );\n};\n","import type { CopilotType, MyBoxType } from '@sinsa/schema';\nimport { produce } from 'immer';\nimport { CalcOptions } from '../types';\n\nexport function boxWithoutAuroriansInCopilot(\n  myBox: MyBoxType['aurorian_summaries'],\n  copilot: CopilotType,\n  { disalbeAlternative }: CalcOptions,\n) {\n  return produce(myBox, draft => {\n    for (const aurorianInCopilot of copilot.aurorian_summaries) {\n      // 0. 如果作业中的光灵本身是可替换的，则跳过此光灵判断\n      if (!disalbeAlternative && aurorianInCopilot.is_replaceable) {\n        continue;\n      }\n\n      delete draft[aurorianInCopilot.aurorian_name];\n    }\n  });\n}\n","import type {\n  CopilotType,\n  MyBoxType,\n  AurorianSummaryType,\n} from '@sinsa/schema';\nimport { CalcOptions } from '../types';\n\n/**\n * 我的 Box 能否抄这个作业\n * @param copilot 作业\n * @param myBox 我的 Box\n * @returns 我的 Box 能否抄这个作业\n */\nexport function canUseCopilot(\n  myBox: MyBoxType['aurorian_summaries'],\n  copilot: CopilotType,\n  { disalbeAlternative }: CalcOptions,\n): boolean {\n  for (const aurorianInCopilot of copilot.aurorian_summaries) {\n    // 0. 如果作业中的光灵本身是可替换的，则跳过此光灵判断\n    if (!disalbeAlternative && aurorianInCopilot.is_replaceable) {\n      continue;\n    }\n\n    const aurorianInMyBox = myBox[aurorianInCopilot.aurorian_name] as\n      | AurorianSummaryType\n      | undefined;\n\n    // 1. 光灵本身不存在于我的 box\n    if (!aurorianInMyBox) {\n      return false;\n    }\n\n    // 2. 如果我的 box 光灵突破低于作业要求突破\n    if (aurorianInMyBox.breakthrough < aurorianInCopilot.breakthrough) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","import type { CopilotType } from '@sinsa/schema';\nimport { boxWithoutAuroriansInCopilot } from './helpers/box-without-aurorians-in-copilot';\nimport { canUseCopilot } from './helpers/can-use-copilot';\nimport type { CalcOptions, SolutionContext, SolutionResult } from './types';\n\ninterface StackContext {\n  currentCopilotIndex: number;\n  currentScenario: CopilotType[];\n  remainingBox: SolutionContext['availableBox'];\n  count: number;\n}\n\n/**\n * 计算所有的队伍方案和具体分数\n * @param context 解决方案上下文\n * @param k 队伍数量\n */\nexport function calculateAllScenariosAndScores(\n  context: SolutionContext,\n  k = 3,\n  { disalbeAlternative }: CalcOptions = {},\n): SolutionResult {\n  const result: SolutionResult = {\n    scenarios: [],\n  };\n\n  const stack: StackContext[] = [\n    {\n      currentCopilotIndex: 0,\n      currentScenario: [],\n      remainingBox: context.availableBox,\n      count: k,\n    },\n  ];\n\n  while (stack.length > 0) {\n    const { currentCopilotIndex, currentScenario, remainingBox, count } =\n      stack.pop()!;\n\n    if (count === 0 || currentCopilotIndex === context.copilots.length) {\n      if (currentScenario.length >= k) {\n        result.scenarios.push({\n          copilots: [...currentScenario],\n          totalScore: currentScenario.reduce(\n            (score, next) => score + BigInt(next.score),\n            BigInt(0),\n          ),\n        });\n      }\n    } else {\n      const currentCopilot = context.copilots[currentCopilotIndex];\n      if (canUseCopilot(remainingBox, currentCopilot, { disalbeAlternative })) {\n        const newRemainingBox = boxWithoutAuroriansInCopilot(\n          remainingBox,\n          currentCopilot,\n          { disalbeAlternative },\n        );\n        stack.push({\n          currentCopilotIndex: currentCopilotIndex + 1,\n          currentScenario: [...currentScenario, currentCopilot],\n          remainingBox: newRemainingBox,\n          count: count - 1,\n        });\n      }\n\n      stack.push({\n        currentCopilotIndex: currentCopilotIndex + 1,\n        currentScenario,\n        remainingBox,\n        count,\n      });\n    }\n  }\n\n  result.scenarios.sort((a, b) => Number(b.totalScore - a.totalScore));\n\n  return result;\n}\n","import { ProTable } from '@ant-design/pro-components';\nimport { CopilotType } from '@sinsa/schema';\nimport { useCallback, useMemo } from 'react';\nimport { produce } from 'immer';\nimport { copilotRowKey } from '../CopilotsTable';\nimport { copilotsColumns } from '../CopilotsTable/columns';\nimport type { SolutionScenario } from '@/features/backtrack/types';\n\ninterface SolutionScenarioCardProps {\n  solution: SolutionScenario;\n  title?: string;\n}\n\nexport const SolutionScenarioCard: React.FC<SolutionScenarioCardProps> = ({\n  solution,\n  title,\n}) => {\n  const request = useCallback(async () => {\n    return {\n      data: produce(solution.copilots, draft => {\n        draft.sort((a, b) => Number(b.score - a.score));\n      }),\n      success: true,\n    };\n  }, []);\n\n  const toolbar = useMemo(() => ({ title, settings: [] }), [title]);\n\n  const scroll = useMemo(() => ({ x: 'max-content' }), []);\n\n  return (\n    <ProTable<CopilotType>\n      showHeader={true}\n      toolbar={toolbar}\n      rowKey={copilotRowKey}\n      columns={copilotsColumns}\n      request={request}\n      search={false}\n      pagination={false}\n      scroll={scroll}\n      ghost\n    />\n  );\n};\n","import {\n  ProForm,\n  ProFormDependency,\n  ProFormList,\n  ProFormRate,\n  ProFormSelect,\n  ProFormSwitch,\n} from '@ant-design/pro-components';\nimport { useModel } from '@modern-js/runtime/model';\nimport { RarityMapper } from '../AurorianCard/constants';\nimport { AurorianCard } from '../AurorianCard';\nimport { AuroriansModel } from '@/models/aurorians';\n\ninterface ExcludeFormListProps {\n  name: string;\n}\n\nexport const ExcludeAurorianFormList: React.FC<ExcludeFormListProps> = ({\n  name,\n  ...props\n}) => {\n  const [{ auroriansOptions, auroriansMap }] = useModel(AuroriansModel);\n  return (\n    <ProFormList\n      {...props}\n      creatorButtonProps={{\n        creatorButtonText: '添加排除的光灵',\n      }}\n      name={name}\n      alwaysShowItemLabel\n      min={1}\n    >\n      {() => {\n        return (\n          <ProForm.Group>\n            <ProFormSelect\n              label=\"排除的光灵\"\n              name={'aurorianName'}\n              options={auroriansOptions}\n              allowClear\n              width={'sm'}\n              rules={[{ required: true }]}\n            />\n            <ProFormDependency\n              key=\"excludeBreakthroughOnly\"\n              name={['aurorianName']}\n            >\n              {({ aurorianName }) => {\n                if (aurorianName) {\n                  return <AurorianCard sameSize name={aurorianName} />;\n                }\n                return null;\n              }}\n            </ProFormDependency>\n            <ProFormDependency\n              key=\"excludeBreakthroughOnly\"\n              name={['aurorianName']}\n            >\n              {({ aurorianName }) => {\n                if (aurorianName) {\n                  return (\n                    <ProFormSwitch\n                      label=\"仅排除突破\"\n                      name=\"excludeBreakthroughOnly\"\n                    />\n                  );\n                }\n                return null;\n              }}\n            </ProFormDependency>\n\n            <ProFormDependency\n              key=\"excludeBreakthrough\"\n              name={['aurorianName', 'excludeBreakthroughOnly']}\n            >\n              {({ aurorianName, excludeBreakthroughOnly }) => {\n                const targetAurorian = auroriansMap[aurorianName];\n                if (excludeBreakthroughOnly && targetAurorian) {\n                  return (\n                    <ProFormRate\n                      name=\"excludeBreakthrough\"\n                      label=\"排除突破数\"\n                      fieldProps={{\n                        count: RarityMapper[targetAurorian.rarity],\n                        allowHalf: false,\n                      }}\n                      tooltip=\"大于等于此突破数的光灵会被排除，但不会排除零破的此光灵\"\n                    />\n                  );\n                }\n                return null;\n              }}\n            </ProFormDependency>\n          </ProForm.Group>\n        );\n      }}\n    </ProFormList>\n  );\n};\n","import {\n  ProForm,\n  ProFormDependency,\n  ProFormInstance,\n  ProFormRadio,\n  ProFormSwitch,\n} from '@ant-design/pro-components';\nimport { CopilotType } from '@sinsa/schema';\nimport { Card, List, Space, Typography } from 'antd';\nimport { useModel } from '@modern-js/runtime/model';\nimport numeral from 'numeral';\nimport { produce } from 'immer';\nimport { useRequest } from 'ahooks';\nimport { useRef, useState } from 'react';\nimport { calculateAllScenariosAndScores } from '@/features/backtrack/calculate-all-scenarios-and-scores';\nimport { AuroriansModel } from '@/models/aurorians';\nimport { SolutionScenarioCard } from '@/components/SolutionScenarioCard';\nimport { ExcludeAurorianFormList } from '@/components/ExcludeAurorianFormList';\nimport type { SolutionScenario } from '@/features/backtrack/types';\n\ninterface CopilotSolutionProps {\n  dataSource: CopilotType[];\n}\n\ninterface QueryParams {\n  k: number;\n  box: 'whole' | 'my-box';\n  disalbeAlternative?: boolean;\n  enableExclude?: boolean;\n  exclude?: {\n    aurorianName: string;\n    excludeBreakthrough?: number;\n    excludeBreakthroughOnly?: boolean;\n  }[];\n}\n\nconst initialValues = { k: 3, box: 'whole', exclude: [{}] as any[] } as const;\n\nexport const CopilotSolution: React.FC<CopilotSolutionProps> = ({\n  dataSource,\n}) => {\n  const [{ WHOLE_BOX }] = useModel(AuroriansModel);\n\n  const formRef = useRef<ProFormInstance>();\n  const [current, setCurrent] = useState(1);\n  const inViewRef = useRef<HTMLDivElement>(null);\n\n  const { data, loading, runAsync } = useRequest(\n    async (params: QueryParams) => {\n      let filterBox = WHOLE_BOX.aurorian_summaries;\n      if (params.exclude) {\n        filterBox = produce(WHOLE_BOX.aurorian_summaries, draft => {\n          for (const aurorianInExclude of params.exclude!) {\n            if (!aurorianInExclude.excludeBreakthroughOnly) {\n              delete draft[aurorianInExclude.aurorianName];\n            } else if (\n              typeof aurorianInExclude.excludeBreakthrough === 'number' &&\n              aurorianInExclude.excludeBreakthrough >= 1\n            ) {\n              draft[aurorianInExclude.aurorianName].breakthrough =\n                aurorianInExclude.excludeBreakthrough - 1;\n            }\n          }\n        });\n      }\n\n      const [solutionResult] = await Promise.all([\n        Promise.resolve(\n          calculateAllScenariosAndScores(\n            {\n              copilots: dataSource,\n              availableBox: filterBox,\n            },\n            params.k,\n            { disalbeAlternative: params.disalbeAlternative },\n          ),\n        ),\n        new Promise<void>(resolve => window.setTimeout(resolve, 100)),\n      ]);\n\n      const rankSet = new WeakMap<SolutionScenario, number>();\n      for (let i = 0; i < solutionResult.scenarios.length; i++) {\n        const target = solutionResult.scenarios[i];\n        rankSet.set(target, i);\n      }\n\n      return {\n        solutionResult,\n        rankSet,\n      };\n    },\n    {\n      manual: true,\n      defaultParams: [initialValues],\n    },\n  );\n\n  return (\n    <>\n      <Card style={{ marginBottom: '1rem' }}>\n        <ProForm<QueryParams>\n          formRef={formRef}\n          onFinish={async params => {\n            await runAsync(params);\n            setCurrent(1);\n          }}\n          // sub=\"寻找队伍方案\"\n          initialValues={initialValues}\n          layout=\"vertical\"\n          submitter={{\n            // render: (_, dom) => <FooterToolbar>{dom}</FooterToolbar>,\n            searchConfig: { submitText: '寻找匹配方案' },\n            render(_, dom) {\n              return (\n                <Space wrap>\n                  {dom}\n                  {data?.solutionResult ? (\n                    <Typography.Text>\n                      已为您找到{' '}\n                      <Typography.Text strong>\n                        {data?.solutionResult.scenarios.length}\n                      </Typography.Text>{' '}\n                      个匹配方案\n                    </Typography.Text>\n                  ) : null}\n                </Space>\n              );\n            },\n          }}\n          loading={loading}\n        >\n          <ProForm.Group>\n            <ProFormRadio.Group\n              name=\"k\"\n              label=\"队伍数量\"\n              rules={[{ required: true }]}\n              options={[\n                { label: '两支队伍', value: 2 },\n                { label: '三支队伍', value: 3 },\n                { label: '四支队伍', value: 4 },\n              ]}\n              allowClear={false}\n              radioType=\"button\"\n            />\n\n            <ProFormRadio.Group\n              name=\"box\"\n              label=\"Box 匹配\"\n              options={[\n                { label: '全图鉴满突破 Box', value: 'whole' },\n                { label: '我的自定义 Box', value: 'my-box', disabled: true },\n              ]}\n              allowClear={false}\n              radioType=\"button\"\n              rules={[{ required: true }]}\n              extra=\"自定义 Box 匹配暂不支持，无法选中，敬请期待w\"\n            />\n            <ProFormSwitch\n              name={'disalbeAlternative'}\n              label=\"不考虑可替自由位\"\n              tooltip=\"开启后，计算的队伍方案中绝对不会出现重复光灵，满足图鉴大佬的强迫症\"\n            />\n            <ProForm.Group>\n              <ProFormSwitch\n                name=\"enableExclude\"\n                label=\"额外排除光灵\"\n                tooltip=\"排除光灵会忽略可替自由位\"\n              />\n              <ProFormDependency name={['enableExclude']}>\n                {({ enableExclude }) => {\n                  if (enableExclude) {\n                    return <ExcludeAurorianFormList name={'exclude'} />;\n                  }\n                  return null;\n                }}\n              </ProFormDependency>\n            </ProForm.Group>\n          </ProForm.Group>\n        </ProForm>\n      </Card>\n      <div ref={inViewRef} />\n      <List\n        loading={loading}\n        dataSource={data?.solutionResult?.scenarios}\n        pagination={{\n          align: 'center',\n          defaultPageSize: 5,\n          current,\n          onChange(page) {\n            setCurrent(page);\n            window.scrollTo({\n              top: inViewRef.current!.offsetTop,\n              behavior: 'smooth',\n            });\n          },\n          showSizeChanger: false,\n        }}\n        rowKey={sc => sc.copilots.map(c => c.bv).join('')}\n        renderItem={item => {\n          return (\n            <Card\n              title={\n                <>\n                  {data?.rankSet\n                    ? `#${(data.rankSet.get(item) ?? 0) + 1} 匹配方案 `\n                    : null}\n                  {numeral(item.totalScore).format('0,0')}\n                </>\n              }\n              key={item.copilots.map(c => c.bv).join('')}\n              style={{ marginBottom: '1rem' }}\n            >\n              <SolutionScenarioCard solution={item} />\n            </Card>\n          );\n        }}\n      />\n    </>\n  );\n};\n","import { useParams } from '@modern-js/runtime/router';\nimport { PageContainer } from '@ant-design/pro-components';\nimport type { CopilotType } from '@sinsa/schema';\nimport { useMemo } from 'react';\nimport { useRequest } from 'ahooks';\nimport { TermNotFound } from '@/containers/TermNotFound';\nimport { TermChanger } from '@/containers/TermChanger';\nimport { CopilotSolution } from '@/containers/CopilotSolution';\nimport { RoutePath } from '@/components/MyLayout/constants';\n\nconst SolutionsPage: React.FC = () => {\n  const params = useParams<{ term: `${number}` }>();\n\n  const { data, error, loading } = useRequest(\n    () =>\n      fetch(`/api/copilots/${params.term}.json`).then(\n        response =>\n          response.json() as Promise<Record<CopilotType['bv'], CopilotType>>,\n      ),\n    { refreshDeps: [params.term] },\n  );\n\n  const copilots = useMemo(() => Object.values(data ?? []), [data]);\n\n  if (error) {\n    return <TermNotFound />;\n  }\n\n  return (\n    <PageContainer\n      content={<TermChanger pathFn={RoutePath.Solutions} />}\n      title=\"作业匹配\"\n      loading={loading}\n    >\n      <CopilotSolution dataSource={copilots} />\n    </PageContainer>\n  );\n};\n\nexport default SolutionsPage;\n"],"names":["AurorianCard","React","name","breakthrough","isReplaceable","sameSize","auroriansMap","useModel","AuroriansModel","aurorian","useMemo","cardRef","useRef","useEffect","aurorian_name","then","esm","default","current","style","backgroundImage","catch","_jsx","Badge","Ribbon","fontSize","display","zIndex","text","undefined","children","_jsxs","className","clsx","styles","ref","class","attribute","alt","src","ClassURLMapper","ElementURLMapper","secondary_attribute","title","aurorian_cn_name","rarity","ConfigProvider","theme","components","Rate","starBg","starSize","disabled","value","count","RarityMapper","AuroriansTeam","aurorianSummaries","map","is_replaceable","copilotsColumns","dataIndex","hideInSearch","render","_","entity","aurorian_summaries","width","valueType","ellipsis","renderText","dom","_Fragment","Tooltip","description","Typography","Link","href","bv","target","copilotRowKey","c","TABLE_CONST_PROPS","pagination","pageSize","size","position","scroll","x","scrollToFirstRowOnChange","CopilotsTable","dataSource","term","actionRef","deps","request","useCallback","async","data","params","filter","item","ok","includes","score","success","ProTable","rowKey","columns","TermChanger","pathFn","useParams","terms","TermsModel","navigate","useNavigate","Select","Number","parseInt","options","termsOptions","placeholder","onChange","nextTerm","TermNotFound","firstTerm","Result","status","subTitle","extra","to","RoutePath","Copilots","Button","type","Home","boxWithoutAuroriansInCopilot","myBox","copilot","disalbeAlternative","produce","draft","aurorianInCopilot","canUseCopilot","aurorianInMyBox","calculateAllScenariosAndScores","context","k","result","scenarios","stack","currentCopilotIndex","currentScenario","remainingBox","availableBox","length","pop","copilots","push","totalScore","reduce","next","BigInt","currentCopilot","newRemainingBox","sort","a","b","SolutionScenarioCard","solution","toolbar","settings","showHeader","search","ghost","ExcludeAurorianFormList","props","auroriansOptions","ProFormList","creatorButtonProps","creatorButtonText","alwaysShowItemLabel","min","ProForm","Group","ProFormSelect","label","allowClear","rules","required","ProFormDependency","aurorianName","ProFormSwitch","excludeBreakthroughOnly","targetAurorian","ProFormRate","fieldProps","allowHalf","tooltip","initialValues","box","exclude","CopilotSolution","WHOLE_BOX","formRef","setCurrent","useState","inViewRef","loading","runAsync","useRequest","filterBox","aurorianInExclude","excludeBreakthrough","solutionResult","Promise","all","resolve","window","setTimeout","rankSet","WeakMap","i","set","manual","defaultParams","Card","marginBottom","onFinish","layout","submitter","searchConfig","submitText","Space","wrap","Text","strong","ProFormRadio","radioType","enableExclude","List","align","defaultPageSize","page","scrollTo","top","offsetTop","behavior","showSizeChanger","sc","join","renderItem","get","numeral","format","SolutionsPage","error","fetch","response","json","refreshDeps","Object","values","PageContainer","content","Solutions"],"sourceRoot":""}