{"version":3,"file":"static/js/npm.modern-js-reduck+store@1.1.11.node_modules.7cf69e95.js","mappings":"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","sources":["webpack://@sinsa/web/../../node_modules/.pnpm/@modern-js-reduck+store@1.1.11/node_modules/@modern-js-reduck/store/dist/esm/model/model.js","webpack://@sinsa/web/../../node_modules/.pnpm/@modern-js-reduck+store@1.1.11/node_modules/@modern-js-reduck/store/dist/esm/plugin/createPlugin.js","webpack://@sinsa/web/../../node_modules/.pnpm/@modern-js-reduck+store@1.1.11/node_modules/@modern-js-reduck/store/dist/esm/utils/memoize.js","webpack://@sinsa/web/../../node_modules/.pnpm/@modern-js-reduck+store@1.1.11/node_modules/@modern-js-reduck/store/dist/esm/model/mountModel.js","webpack://@sinsa/web/../../node_modules/.pnpm/@modern-js-reduck+store@1.1.11/node_modules/@modern-js-reduck/store/dist/esm/model/subscribe.js","webpack://@sinsa/web/../../node_modules/.pnpm/@modern-js-reduck+store@1.1.11/node_modules/@modern-js-reduck/store/dist/esm/model/useModel.js","webpack://@sinsa/web/../../node_modules/.pnpm/@modern-js-reduck+store@1.1.11/node_modules/@modern-js-reduck/store/dist/esm/store/context.js","webpack://@sinsa/web/../../node_modules/.pnpm/@modern-js-reduck+store@1.1.11/node_modules/@modern-js-reduck/store/dist/esm/plugin/core.js","webpack://@sinsa/web/../../node_modules/.pnpm/@modern-js-reduck+store@1.1.11/node_modules/@modern-js-reduck/store/dist/esm/store/createStore.js","webpack://@sinsa/web/../../node_modules/.pnpm/@modern-js-reduck+store@1.1.11/node_modules/@modern-js-reduck/store/dist/esm/utils/misc.js"],"sourcesContent":["import { initializerSymbol } from \"../utils/misc\";\nconst model = (name) => ({\n  define(modelDesc) {\n    let modelInitializer;\n    if (typeof modelDesc === \"function\") {\n      modelInitializer = modelDesc;\n    } else {\n      modelInitializer = () => modelDesc;\n    }\n    const modelCache = /* @__PURE__ */ new Map();\n    const createResponse = (initializer) => {\n      const response = (namespace) => {\n        const cachedModel = modelCache.get(namespace);\n        if (cachedModel) {\n          return cachedModel;\n        }\n        const clonedModelInitializer = (...args) => {\n          const result = initializer(...args);\n          return result;\n        };\n        const modelInstance = createResponse(clonedModelInitializer);\n        modelCache.set(namespace, modelInstance);\n        modelInstance._name = namespace || name;\n        return modelInstance;\n      };\n      response._name = name;\n      Object.defineProperty(response, initializerSymbol, {\n        configurable: false,\n        enumerable: false,\n        value: initializer\n      });\n      return response;\n    };\n    return createResponse(modelInitializer);\n  }\n});\nexport default model;\n","const createPlugin = (defineLifeCycle) => defineLifeCycle;\nexport default createPlugin;\n","export const areArgumentsShallowlyEqual = (prev, next) => {\n  if (prev === next) {\n    return true;\n  }\n  if (Array.isArray(prev) && Array.isArray(next)) {\n    if (prev.length !== next.length) {\n      return false;\n    }\n    const { length } = prev;\n    for (let i = 0; i < length; i++) {\n      if (prev[i] !== next[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n};\nconst defaultMemoize = (func) => {\n  let lastArgs = null;\n  let lastResult = null;\n  return (...args) => {\n    if (!areArgumentsShallowlyEqual(lastArgs, args)) {\n      lastResult = func(...args);\n      lastArgs = args;\n    }\n    return lastResult;\n  };\n};\nexport const memorize = (fn) => {\n  return defaultMemoize(fn);\n};\n","import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { memorize } from \"../utils/memoize\";\nimport { getComputedDepModels, getModelInitializer, getStateType, isModel, StateType } from \"../utils/misc\";\nconst mountModel = (context, model) => {\n  if (context.apis.getModel(model)) {\n    return;\n  }\n  const { onMount, trigger: triggerOnMount } = createOnMount();\n  let modelDesc = getModelInitializer(model)(context, {\n    use: context.apis.useModel,\n    onMount\n  });\n  modelDesc.name = model._name;\n  modelDesc = context.pluginCore.invokePipeline(\"prepareModelDesc\", modelDesc);\n  if (!checkModel(context, modelDesc)) {\n    return;\n  }\n  context.apis.mountingModel(model._name);\n  const flattenedActions = flattenActions(modelDesc);\n  const reducer = createReducer(context, flattenedActions, modelDesc.state, modelDesc.computed);\n  if (reducer) {\n    context.apis.addReducers({\n      [modelDesc.name]: reducer\n    });\n  }\n  const [dispatchActions, setDispatchAction] = createDispatchActions(context, modelDesc);\n  let mountedModel = {\n    actions: dispatchActions,\n    state: modelDesc.state,\n    name: modelDesc.name,\n    modelDesc\n  };\n  ({ mountedModel } = context.pluginCore.invokePipeline(\"modelMount\", {\n    modelDesc,\n    mountedModel\n  }, {\n    setDispatchAction\n  }));\n  context.apis.addModel(model, mountedModel);\n  triggerOnMount();\n};\nconst checkModel = (context, modelDesc) => {\n  if (!modelDesc.name || typeof modelDesc.name !== \"string\") {\n    console.error(`model name expected is a valid string, but got ${modelDesc.name}`);\n    return false;\n  }\n  return true;\n};\nconst generateComputedDescriptors = (computed = {}, useModel) => {\n  return Object.keys(computed).reduce((prev, name) => {\n    const selector = generateComputedSelector(name, computed[name], useModel);\n    prev[name] = {\n      get() {\n        return selector(this);\n      },\n      // MARK: not enumerable, avoid to get computed properties through rest(...) syntax. eg., reducer {...state}\n      enumerable: false,\n      configurable: true\n    };\n    return prev;\n  }, {});\n};\nconst createReducer = (context, flattenedActions, initialState, computed) => {\n  if (!flattenedActions) {\n    return null;\n  }\n  let computedDescriptors = computed && generateComputedDescriptors(computed, context.apis.useModel);\n  const depModels = getComputedDepModels(computed);\n  const isDepModelAction = (actionType) => {\n    return depModels.some((model) => actionType.split(\"/\")[0] === model._name.toUpperCase());\n  };\n  return (state = initialState, reduxAction) => {\n    const actionType = reduxAction.type;\n    const reducer = flattenedActions[actionType];\n    let newState = state;\n    if (isDepModelAction(actionType)) {\n      newState = _object_spread({}, state);\n      computedDescriptors = computed && generateComputedDescriptors(computed, context.apis.useModel);\n    }\n    if (reducer) {\n      newState = context.pluginCore.invokePipeline(\"beforeReducer\", flattenedActions[reduxAction.type], {\n        name: reduxAction.type,\n        computedDescriptors\n      })(state, reduxAction.payload, ...reduxAction.extraArgs || []);\n    }\n    if (computedDescriptors && getStateType(newState) !== StateType.Object) {\n      throw Error(`Only object type state can have computed properties.`);\n    }\n    return computedDescriptors ? Object.defineProperties(newState, computedDescriptors) : newState;\n  };\n};\nconst generateComputedSelector = (name, computed, useModel) => {\n  let selector;\n  let depModels;\n  const _selector = (fn, ...args) => {\n    const result = fn(...args);\n    if (typeof result === \"function\") {\n      return memorize((...args2) => {\n        return result(...args2);\n      });\n    } else {\n      return result;\n    }\n  };\n  if (typeof computed === \"function\") {\n    selector = (state) => {\n      return _selector(computed, state);\n    };\n  } else if (Array.isArray(computed)) {\n    depModels = computed.slice(0, -1);\n    const userSelector = computed.slice(-1)[0];\n    if (!depModels.every((m) => isModel(m)) || typeof userSelector !== \"function\") {\n      throw new Error(`The types of computed property parameters are not correct. Computed property name: ${name}`);\n    }\n    selector = (state) => {\n      return _selector(userSelector, state, ...depModels.map((model) => useModel(model)[0]));\n    };\n  }\n  return memorize(selector);\n};\nconst flattenActions = (modelDesc) => {\n  const flattenedActions = {};\n  forEachAction(modelDesc, (path, action) => {\n    flattenedActions[path.join(\"/\").toUpperCase()] = action;\n  });\n  return flattenedActions;\n};\nconst createDispatchActions = (context, modelDesc) => {\n  const dispatchActions = {};\n  const set = (path, value) => {\n    let cur = dispatchActions;\n    const len = path.length;\n    for (let i = 1; i < len - 1; i++) {\n      if (!cur[path[i]]) {\n        cur[path[i]] = {};\n      }\n      cur = cur[path[i]];\n    }\n    if (!cur[path[len - 1]]) {\n      cur[path[len - 1]] = value;\n    } else {\n      cur[path[len - 1]] = Object.assign(value, cur[path[len - 1]]);\n    }\n  };\n  forEachAction(modelDesc, (path) => set(path, (payload, ...extraArgs) => {\n    return context.store.dispatch({\n      type: path.join(\"/\").toUpperCase(),\n      payload,\n      extraArgs\n    });\n  }));\n  return [\n    dispatchActions,\n    set\n  ];\n};\nconst forEachAction = (modelDesc, callback) => {\n  const path = [\n    modelDesc.name\n  ];\n  const traverse = (action) => {\n    if (!action) {\n      return null;\n    }\n    if (typeof action === \"function\") {\n      return callback(path.slice(), action);\n    }\n    Object.keys(action).forEach((key) => {\n      path.push(key);\n      traverse(action[key]);\n      path.pop();\n    });\n    return null;\n  };\n  traverse(modelDesc.actions || {});\n};\nconst createOnMount = () => {\n  const handlers = [];\n  const triggered = false;\n  const onMount = (handler) => {\n    handlers.push(handler);\n  };\n  const trigger = () => {\n    if (triggered) {\n      return;\n    }\n    handlers.forEach((handler) => handler());\n  };\n  return {\n    onMount,\n    trigger\n  };\n};\nexport default mountModel;\n","export const GetUnsubscribe = Symbol(\"getUnsubscribe\");\nconst createSubscribe = (context, model) => {\n  const mountedModel = context.apis.getModel(model);\n  if (!mountedModel) {\n    return null;\n  }\n  const { name } = mountedModel;\n  let lastState = context.store.getState()[name];\n  let unsubscribeStore;\n  const handlers = /* @__PURE__ */ new Set();\n  const setupSubscribeStore = () => {\n    if (unsubscribeStore) {\n      return unsubscribeStore;\n    }\n    unsubscribeStore = context.store.subscribe(() => {\n      const curState = context.store.getState()[name];\n      if (lastState !== curState) {\n        lastState = curState;\n        handlers.forEach((handler) => handler());\n      }\n    });\n    return unsubscribeStore;\n  };\n  const ret = (handler) => {\n    unsubscribeStore = setupSubscribeStore();\n    handlers.add(handler);\n    return () => {\n      handlers.delete(handler);\n      if (handlers.size === 0) {\n        unsubscribeStore === null || unsubscribeStore === void 0 ? void 0 : unsubscribeStore();\n        unsubscribeStore = null;\n      }\n    };\n  };\n  ret[GetUnsubscribe] = () => unsubscribeStore;\n  return ret;\n};\nconst combineSubscribe = (context, ...subscribes) => {\n  const { store } = context;\n  let changed = false;\n  const handlers = /* @__PURE__ */ new Set();\n  return (handler) => {\n    handlers.add(handler);\n    const disposer = [];\n    subscribes.forEach((subscribe) => {\n      disposer.push(subscribe(() => {\n        changed = true;\n      }));\n    });\n    const unsubscribeStore = store.subscribe(() => {\n      if (changed) {\n        changed = false;\n        handlers.forEach((h) => h());\n      }\n    });\n    return () => {\n      unsubscribeStore();\n      disposer.forEach((dispose) => dispose());\n    };\n  };\n};\nexport { createSubscribe, combineSubscribe };\n","import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport mountModel from \"./mountModel\";\nimport { combineSubscribe } from \"./subscribe\";\nimport { getComputedDepModels, isModel } from \"../utils/misc\";\nfunction createUseModel(context) {\n  function useModel(...args) {\n    const flattenedArgs = Array.isArray(args[0]) ? [\n      ...args[0],\n      ...args.slice(1)\n    ] : args;\n    flattenedArgs.forEach((model) => {\n      if (isModel(model)) {\n        mountModel(context, model);\n      }\n    });\n    const { getState, getActions, actualModels, subscribe } = parseModelParams(context, flattenedArgs);\n    const computedArr = actualModels.map((m) => {\n      const { modelDesc: { computed } } = context.apis.getModel(m);\n      return computed;\n    });\n    const computedDepModels = getComputedDepModels(computedArr);\n    computedDepModels.forEach((model) => {\n      if (isModel(model)) {\n        mountModel(context, model);\n      }\n    });\n    let [state, actions] = [\n      getState(),\n      getActions()\n    ];\n    ({ state, actions } = context.pluginCore.invokePipeline(\"useModel\", {\n      state,\n      actions\n    }, {\n      models: actualModels,\n      mountedModels: actualModels.map((model) => context.apis.getModel(model))\n    }));\n    return [\n      state,\n      actions,\n      subscribe\n    ];\n  }\n  return useModel;\n}\nconst parseModelParams = (context, _models) => {\n  const models = Array.isArray(_models) ? _models : [\n    _models\n  ];\n  const actualModels = [];\n  const selectors = [];\n  for (const model of models) {\n    if (isModel(model)) {\n      actualModels.push(model);\n    } else {\n      selectors.push(model);\n    }\n  }\n  const [stateSelector, actionSelector] = selectors;\n  if (actualModels.length > 1) {\n    actualModels.forEach((m) => {\n      if (Object.prototype.toString.call(context.apis.getModel(m).state) !== \"[object Object]\") {\n        throw new Error(`You cant use multiple model one of which's state is primitive data`);\n      }\n    });\n  }\n  const getStateWithComputed = (model) => {\n    const { state, modelDesc: { computed } } = context.apis.getModel(model);\n    let computedState;\n    if (computed) {\n      computedState = Object.keys(computed).reduce((curState, computedKey) => {\n        curState[computedKey] = state[computedKey];\n        return curState;\n      }, {});\n      return _object_spread({}, state, computedState);\n    }\n    return state;\n  };\n  const finalStateSelector = (...models2) => {\n    if (stateSelector) {\n      return stateSelector(...actualModels.map((model) => getStateWithComputed(model)));\n    }\n    if (models2.length === 1) {\n      return getStateWithComputed(models2[0]);\n    }\n    return models2.reduce((res, model) => _object_spread({}, res, getStateWithComputed(model)), {});\n  };\n  const finalActionSelector = actionSelector || ((...actions) => actions.reduce((res, action) => Object.assign(res, action), {}));\n  return {\n    getState: () => finalStateSelector(...actualModels),\n    getActions: () => finalActionSelector(...actualModels.map((model) => context.apis.getModel(model).actions)),\n    subscribe: (handler) => combineSubscribe(context, ...actualModels.map((model) => context.apis.getModelSubscribe(model)))(handler),\n    actualModels\n  };\n};\nexport { createUseModel };\n","import { combineReducers } from \"redux\";\nimport { createUseModel } from \"../model/useModel\";\nimport { createPluginCore } from \"../plugin\";\nimport { createSubscribe, GetUnsubscribe } from \"../model/subscribe\";\nconst dummyReducer = \"__REDUCK_DUMMY_REDUCER__\";\nconst createContext = (store) => {\n  const reducers = {};\n  const mountedModels = /* @__PURE__ */ new Map();\n  const subscriptions = /* @__PURE__ */ new Map();\n  const mountingModelNames = /* @__PURE__ */ new Set();\n  let lastState;\n  const addReducers = (_reducers) => {\n    if (!lastState) {\n      store.subscribe(() => {\n        lastState = store.getState();\n      });\n    }\n    if (reducers[dummyReducer]) {\n      delete reducers[dummyReducer];\n    }\n    Object.assign(reducers, _reducers);\n    Object.keys(_reducers).forEach((key) => mountingModelNames.delete(key));\n    store.replaceReducer(combineReducers(reducers));\n  };\n  const addModel = (model, mountedModel) => {\n    mountedModels.set(model._name, mountedModel);\n    subscriptions.set(model._name, createSubscribe(context, model));\n  };\n  const getModel = (model) => {\n    const mountedModel = getModelByName(model._name);\n    if (!mountedModel) {\n      return null;\n    }\n    return {\n      name: mountedModel.name,\n      state: lastState[mountedModel.name],\n      actions: mountedModel.actions,\n      modelDesc: mountedModel.modelDesc\n    };\n  };\n  const getModelByName = (name) => {\n    let model = null;\n    for (const [, mountedModel] of mountedModels) {\n      if (mountedModel.name === name) {\n        model = mountedModel;\n        break;\n      }\n    }\n    return model;\n  };\n  const getModelSubscribe = (model) => subscriptions.get(model._name);\n  const mountingModel = (name) => {\n    if (mountingModelNames.has(name)) {\n      throw new Error(`You are mounting the model: ${name} which is already in mounting process`);\n    }\n    mountingModelNames.add(name);\n  };\n  const unmountModel = (model) => {\n    var _subscription_GetUnsubscribe;\n    if (!getModel(model)) {\n      return;\n    }\n    const subscription = subscriptions.get(model._name);\n    (_subscription_GetUnsubscribe = subscription[GetUnsubscribe]()) === null || _subscription_GetUnsubscribe === void 0 ? void 0 : _subscription_GetUnsubscribe();\n    mountedModels.delete(model._name);\n    subscriptions.delete(model._name);\n    delete lastState[model._name];\n    delete reducers[model._name];\n    if (Object.keys(reducers).length === 0) {\n      reducers[dummyReducer] = () => {\n        return null;\n      };\n    }\n    store.replaceReducer(combineReducers(reducers));\n  };\n  const pluginCore = createPluginCore({\n    store\n  });\n  const context = {\n    store,\n    apis: {\n      addReducers,\n      addModel,\n      getModel,\n      getModelSubscribe,\n      mountingModel,\n      unmountModel\n    },\n    pluginCore\n  };\n  context.apis.useModel = createUseModel(context);\n  return context;\n};\nexport { createContext };\n","export const createPluginCore = (pluginContext) => {\n  const lifeCycleList = [];\n  const findHandlers = (stage) => lifeCycleList.map((liftCycle) => liftCycle[stage]).filter(Boolean);\n  return {\n    usePlugin: (plugin) => {\n      lifeCycleList.push(plugin(pluginContext));\n    },\n    invokePipeline: (stage, bypassParams, ...args) => {\n      const handlers = findHandlers(stage);\n      let params = bypassParams;\n      for (const handler of handlers) {\n        params = handler(params, ...args);\n      }\n      return params;\n    },\n    invokeWaterFall: (stage, ...args) => {\n      const handlers = findHandlers(stage);\n      return handlers.forEach((handler) => handler(...args));\n    }\n  };\n};\n","import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { applyMiddleware, compose, createStore as createReduxStore } from \"redux\";\nimport { createContext } from \"./context\";\nconst createStore = (props = {}) => {\n  var _props_plugins;\n  const store = {};\n  const context = createContext(store);\n  props === null || props === void 0 ? void 0 : (_props_plugins = props.plugins) === null || _props_plugins === void 0 ? void 0 : _props_plugins.forEach((plugin) => context.pluginCore.usePlugin(plugin));\n  const finalProps = context.pluginCore.invokePipeline(\"config\", props);\n  const { initialState = {}, middlewares, enhancers = [], models = [] } = finalProps;\n  Object.assign(store, createReduxStore((state) => state, initialState, compose(...[\n    mergeInitialState(),\n    middlewares ? applyMiddleware(...middlewares) : void 0,\n    ...enhancers || []\n  ].filter(Boolean))));\n  store.use = context.apis.useModel;\n  store.unmount = context.apis.unmountModel;\n  if (models.length > 0) {\n    store.use(models);\n  }\n  context.pluginCore.invokeWaterFall(\"afterCreateStore\", store);\n  return store;\n};\nfunction mergeInitialState() {\n  return (createStore2) => (reducer, initialState) => {\n    const liftReducer = (r) => {\n      if (typeof r !== \"function\") {\n        throw new Error(\"Expected the reducer to be a function.\");\n      }\n      return (state = initialState, action) => {\n        const nextState = r(state, action);\n        if (/^@@redux\\/REPLACE/.test(action.type)) {\n          return _object_spread({}, state, nextState);\n        } else {\n          return nextState;\n        }\n      };\n    };\n    const store = createStore2(liftReducer(reducer));\n    return _object_spread_props(_object_spread({}, store), {\n      replaceReducer: (reducer2) => {\n        return store.replaceReducer(liftReducer(reducer2));\n      }\n    });\n  };\n}\nexport default createStore;\n","export const initializerSymbol = Symbol.for(\"__reduck_model_initializer__\");\nexport const getModelInitializer = (_model) => _model[initializerSymbol];\nexport const isModel = (_model) => _model && Boolean(getModelInitializer(_model));\nexport const getComputedDepModels = (computed) => {\n  const depModels = [];\n  const computedArr = Array.isArray(computed) ? computed : [\n    computed\n  ];\n  computedArr.forEach((_computed) => {\n    computed && Object.keys(computed).forEach((key) => {\n      const selector = computed[key];\n      if (Array.isArray(selector)) {\n        selector.forEach((s) => {\n          if (!depModels.includes(s) && isModel(s)) {\n            depModels.push(s);\n          }\n        });\n      }\n    });\n  });\n  return depModels;\n};\nexport var StateType;\n(function(StateType2) {\n  StateType2[\"Primitive\"] = \"primitive\";\n  StateType2[\"Array\"] = \"array\";\n  StateType2[\"Object\"] = \"object\";\n})(StateType || (StateType = {}));\nexport const getStateType = (value) => {\n  if (Array.isArray(value)) {\n    return StateType.Array;\n  } else if (typeof value === \"object\" && value != \"undefined\") {\n    return StateType.Object;\n  } else {\n    return StateType.Primitive;\n  }\n};\n"],"names":["name","define","modelDesc","modelInitializer","modelCache","Map","createResponse","initializer","response","namespace","cachedModel","get","modelInstance","args","set","_name","Object","defineProperty","configurable","enumerable","value","defineLifeCycle","defaultMemoize","func","lastArgs","lastResult","prev","next","Array","isArray","length","i","areArgumentsShallowlyEqual","memorize","fn","checkModel","context","console","error","generateComputedDescriptors","computed","useModel","keys","reduce","selector","generateComputedSelector","this","createReducer","flattenedActions","initialState","computedDescriptors","apis","depModels","state","reduxAction","actionType","type","reducer","newState","some","model","split","toUpperCase","isDepModelAction","_object_spread","_","pluginCore","invokePipeline","payload","extraArgs","Error","defineProperties","_selector","result","args2","slice","userSelector","every","m","map","flattenActions","forEachAction","path","action","join","createDispatchActions","dispatchActions","cur","len","assign","store","dispatch","callback","traverse","forEach","key","push","pop","actions","createOnMount","handlers","onMount","handler","trigger","getModel","triggerOnMount","use","mountingModel","addReducers","setDispatchAction","mountedModel","addModel","GetUnsubscribe","Symbol","createSubscribe","unsubscribeStore","lastState","getState","Set","ret","subscribe","curState","add","delete","size","parseModelParams","_models","models","actualModels","selectors","stateSelector","actionSelector","prototype","toString","call","getStateWithComputed","computedState","computedKey","finalActionSelector","res","models2","finalStateSelector","getActions","subscribes","changed","disposer","h","dispose","combineSubscribe","getModelSubscribe","dummyReducer","createContext","reducers","mountedModels","subscriptions","mountingModelNames","getModelByName","pluginContext","lifeCycleList","findHandlers","stage","liftCycle","filter","Boolean","usePlugin","plugin","bypassParams","params","invokeWaterFall","createPluginCore","_reducers","replaceReducer","has","unmountModel","_subscription_GetUnsubscribe","flattenedArgs","computedArr","createUseModel","props","_props_plugins","plugins","finalProps","middlewares","enhancers","createStore2","liftReducer","r","nextState","test","_object_spread_props","reducer2","unmount","initializerSymbol","for","getModelInitializer","_model","isModel","getComputedDepModels","_computed","s","includes","StateType","StateType2","getStateType","Primitive"],"sourceRoot":""}